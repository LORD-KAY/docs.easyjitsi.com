(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{133:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return p}));var i=t(1),r=t(6),o=(t(0),t(143)),a={id:"jibri",title:"Configuration of Jibri For Recording"},c={id:"jibri",title:"Configuration of Jibri For Recording",description:"We also need to configure Jitsi in order for it to find & allow Jibri to record conferences",source:"@site/docs/jibri.md",permalink:"/docs/jibri",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/jibri.md",sidebar:"docs",previous:{title:"Configuration of Jitsi For Recording",permalink:"/docs/config"},next:{title:"Customizing The Jitsi Meet Ui",permalink:"/docs/jitsiui"}},s=[{value:"Edit The Jibri Config File",id:"edit-the-jibri-config-file",children:[]},{value:"Description of Fields",id:"description-of-fields",children:[]}],l={rightToc:s};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"We also need to configure Jitsi in order for it to find & allow Jibri to record conferences"),Object(o.b)("p",null,"We do the following:"),Object(o.b)("h3",{id:"edit-the-jibri-config-file"},"Edit The Jibri Config File"),Object(o.b)("p",null,"NB: ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"We edit the file with our favourite editor, in this tutorial we use Vim"))),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"vim /etc/jitsi/jibri/config.json\n")),Object(o.b)("p",null,"We modify the file as follows;"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  // NOTE: this is a *SAMPLE* config file, it will need to be configured with\n  // values from your environment\n\n  // Where recording files should be temporarily stored\n  "recording_directory": "/home/recordings",\n  // The path to the script which will be run on completed recordings\n  "finalize_recording_script_path": "/home/finalize_recording.sh",\n  "xmpp_environments": [\n    {\n      // A friendly name for this environment which can be used\n      //  for logging, stats, etc.\n      "name": "prod environment",\n      // The hosts of the XMPP servers to connect to as part of\n      //  this environment\n      "xmpp_server_hosts": ["jitsi.easyjitsi.com"],\n      // The xmpp domain we\'ll connect to on the XMPP server\n      "xmpp_domain": "jitsi.easyjitsi.com",\n      // Jibri will login to the xmpp server as a privileged user\n      "control_login": {\n        // The domain to use for logging in\n        "domain": "auth.jitsi.easyjitsi.com",\n        // The credentials for logging in\n        "username": "jibri",\n        "password": "jibriauthpass"\n      },\n      // Using the control_login information above, Jibri will join\n      //  a control muc as a means of announcing its availability\n      //  to provide services for a given environment\n      "control_muc": {\n        "domain": "internal.auth.jitsi.easyjitsi.com",\n        "room_name": "JibriBrewery",\n        "nickname": "jibri-nickname-instance1"\n      },\n      // All participants in a call join a muc so they can exchange\n      //  information.  Jibri can be instructed to join a special muc\n      //  with credentials to give it special abilities (e.g. not being\n      //  displayed to other users like a normal participant)\n      "call_login": {\n        "domain": "recorder.jitsi.easyjitsi.com",\n        "username": "recorder",\n        "password": "jibrirecorderpass"\n      },\n      // When jibri gets a request to start a service for a room, the room\n      //  jid will look like:\n      //  roomName@optional.prefixes.subdomain.xmpp_domain\n      // We\'ll build the url for the call by transforming that into:\n      //  https://xmpp_domain/subdomain/roomName\n      // So if there are any prefixes in the jid (like jitsi meet, which\n      //  has its participants join a muc at conference.xmpp_domain) then\n      //  list that prefix here so it can be stripped out to generate\n      //  the call url correctly\n      "room_jid_domain_string_to_strip_from_start": "conference.",\n      // The amount of time, in minutes, a service is allowed to continue.\n      //  Once a service has been running for this long, it will be\n      //  stopped (cleanly).  A value of 0 means an indefinite amount\n      //  of time is allowed\n      "usage_timeout": "0"\n    }\n  ]\n}\n')),Object(o.b)("h2",{id:"description-of-fields"},"Description of Fields"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"xmpp_server_hosts:The domain where stats and logs are stored etc. Eg. jitsi.easyjitsi.com")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"xmpp_domain=The domain of the Xmpp server(Prosody) being connecting to. Eg. jitsi.easyjitsi.com")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"control_login=Specifies credentials and authorization details Jibri will use to log into the Xmpp Server(Prosody)"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"domain=The domain used for logging in."),Object(o.b)("li",{parentName:"ul"},"username=Username used for logging in."),Object(o.b)("li",{parentName:"ul"},"password=Password used for logging in."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"control_muc:Specifies the details about the Control Muc being joined on the Xmpp server as a means of annoucing its availability so it can record."),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"domain=The Control Muc domain."),Object(o.b)("li",{parentName:"ul"},"room_name=The Name of the Muc room."),Object(o.b)("li",{parentName:"ul"},"nickname=Nick name for identification in the Muc Room"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"call_login=This is displayed to other users as a normal participant of a conference"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"domain=the domain of the jibri server"),Object(o.b)("li",{parentName:"ul"},"username=username displayed to the users"),Object(o.b)("li",{parentName:"ul"},"password=password for authorization"),Object(o.b)("li",{parentName:"ul"},"room_jid_domain_string_to_strip_from_start:prefix of the url which should be stripped to form a call url correctly. Eg. conference.")))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"If you encounted any errors or you found it difficult while following these steps, you can head ",Object(o.b)("a",Object(i.a)({parentName:"em"},{href:"https://docs.easyjitsi.com/docs/help"}),"here")," to seek help from us."))))}p.isMDXComponent=!0},143:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return d}));var i=t(0),r=t.n(i);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},m=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=Object(i.forwardRef)((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(t),b=i,d=m["".concat(a,".").concat(b)]||m[b]||u[b]||o;return t?r.a.createElement(d,c({ref:n},l,{components:t})):r.a.createElement(d,c({ref:n},l))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=b;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);