{
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/readMetadata.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/readMetadata.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/readMetadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/readMetadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "readMetadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar program = require('commander');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar blog = require('./blog.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar versionFallback = require('./versionFallback.js');\n\nvar utils = require('./utils.js');\n\nvar docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\nvar SupportedHeaderFields = new Set(['id', 'title', 'author', 'authorURL', 'authorFBID', 'sidebar_label', 'original_id', 'hide_title', 'layout', 'custom_edit_url', 'description']);\nvar allSidebars;\n\nif (fs.existsSync(\"\".concat(CWD, \"/sidebars.json\"))) {\n  allSidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n} else {\n  allSidebars = {};\n} // Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\n\n\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n} // returns map from id to object containing sidebar ordering info\n\n\nfunction readSidebar() {\n  var sidebars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(sidebars, versionFallback.sidebarData());\n  var items = {};\n  Object.keys(sidebars).forEach(function (sidebar) {\n    var categories = sidebars[sidebar];\n    var sidebarItems = [];\n    Object.keys(categories).forEach(function (category) {\n      var categoryItems = categories[category];\n      categoryItems.forEach(function (categoryItem) {\n        if (_typeof(categoryItem) === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(function (subcategoryItem) {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category: category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1\n                });\n              });\n              return;\n\n            default:\n              return;\n          }\n        } // Is a regular id value.\n\n\n        sidebarItems.push({\n          id: categoryItem,\n          category: category,\n          subcategory: null,\n          order: sidebarItems.length + 1\n        });\n      });\n    });\n\n    for (var i = 0; i < sidebarItems.length; i++) {\n      var item = sidebarItems[i];\n      var previous = null;\n      var next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous: previous,\n        next: next,\n        sidebar: sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order\n      };\n    }\n  });\n  return items;\n} // process the metadata for a document found in either 'docs' or 'translated_docs'\n\n\nfunction processMetadata(file, refDir) {\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var language = utils.getLanguage(file, refDir) || 'en';\n  var metadata = {};\n  Object.keys(result.metadata).forEach(function (fieldName) {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(\"Header field \\\"\".concat(fieldName, \"\\\" in \").concat(file, \" is not supported.\"));\n    }\n  });\n  var rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  } // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n\n\n  var subDir = utils.getSubDir(file, refDir);\n\n  if (subDir) {\n    metadata.id = \"\".concat(subDir, \"/\").concat(metadata.id);\n  } // Example: `docs/projectA/test.md` source is `projectA/test.md`\n\n\n  metadata.source = subDir ? \"\".concat(subDir, \"/\").concat(path.basename(file)) : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  var langPart = env.translation.enabled || siteConfig.useEnglishUrl ? \"\".concat(language, \"/\") : '';\n  var versionPart = '';\n\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = \"\".concat(docsPart).concat(langPart).concat(versionPart).concat(metadata.id, \".html\"); // change ids previous, next\n\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n  var items = readSidebar(allSidebars);\n  var id = metadata.localized_id;\n  var item = items[id];\n\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.next;\n    }\n\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.previous;\n    }\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: rawContent\n  };\n} // process metadata for all docs and save into core/metadata.js\n\n\nfunction generateMetadataDocs() {\n  var order;\n\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n    return language.tag;\n  });\n  var metadatas = {};\n  var defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    var docsDir = path.join(CWD, '../', getDocsPath());\n    var files = glob.sync(\"\".concat(docsDir, \"/**\"));\n    files.forEach(function (file) {\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n        metadatas[metadata.id] = metadata; // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n\n        enabledLanguages.filter(function (currentLanguage) {\n          return currentLanguage !== 'en';\n        }).forEach(function (currentLanguage) {\n          var baseMetadata = Object.assign({}, metadata);\n          baseMetadata.id = baseMetadata.id.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n\n          if (baseMetadata.permalink) {\n            baseMetadata.permalink = baseMetadata.permalink.toString().replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(currentLanguage, \"/\"));\n          }\n\n          if (baseMetadata.next) {\n            baseMetadata.next = baseMetadata.next.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          if (baseMetadata.previous) {\n            baseMetadata.previous = baseMetadata.previous.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          baseMetadata.language = currentLanguage;\n          defaultMetadatas[baseMetadata.id] = baseMetadata;\n        });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    }); // metadata for non-english docs\n\n    var translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(\"\".concat(CWD, \"/translated_docs/**\"));\n    files.forEach(function (file) {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, translatedDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  } // metadata for versioned docs\n\n\n  var versionData = versionFallback.docData();\n  versionData.forEach(function (metadata) {\n    var id = metadata.localized_id;\n\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.next = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].next;\n      }\n\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.previous = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].previous;\n      }\n    }\n\n    metadatas[metadata.id] = metadata;\n  }); // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n\n  Object.keys(metadatas).forEach(function (metadata) {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title = metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title = metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/metadata.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(metadatas, null, 2), \";\\n\"));\n} // process metadata for blog posts and save into core/MetadataBlog.js\n\n\nfunction generateMetadataBlog() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : siteConfig;\n  var metadatas = [];\n  var files = glob.sync(\"\".concat(CWD, \"/blog/**/*.*\"));\n  files.sort().reverse().forEach(function (file) {\n    var extension = path.extname(file);\n\n    if (extension !== '.md' && extension !== '.markdown') {\n      return;\n    }\n\n    var metadata = blog.getMetadata(file, config); // Extract, YYYY, MM, DD from the file name\n\n    var filePathDateArr = path.basename(file).split('-');\n    metadata.date = new Date(\"\".concat(filePathDateArr[0], \"-\").concat(filePathDateArr[1], \"-\").concat(filePathDateArr[2], \"T06:00:00.000Z\")); // allow easier sorting of blog by providing seconds since epoch\n\n    metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n    metadatas.push(metadata);\n  });\n  var sortedMetadatas = metadatas.sort(function (a, b) {\n    return parseInt(b.seconds, 10) - parseInt(a.seconds, 10);\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/MetadataBlog.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(sortedMetadatas, null, 2), \";\\n\"));\n}\n\nmodule.exports = {\n  getDocsPath: getDocsPath,\n  readSidebar: readSidebar,\n  processMetadata: processMetadata,\n  generateMetadataDocs: generateMetadataDocs,\n  generateMetadataBlog: generateMetadataBlog\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "readMetadata.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "path",
        "require",
        "fs",
        "glob",
        "program",
        "metadataUtils",
        "env",
        "blog",
        "loadConfig",
        "siteConfig",
        "versionFallback",
        "utils",
        "docsPart",
        "docsUrl",
        "SupportedHeaderFields",
        "Set",
        "allSidebars",
        "existsSync",
        "getDocsPath",
        "customDocsPath",
        "shouldGenerateNextReleaseDocs",
        "versioning",
        "enabled",
        "skipNextRelease",
        "readSidebar",
        "sidebars",
        "Object",
        "assign",
        "sidebarData",
        "items",
        "keys",
        "forEach",
        "sidebar",
        "categories",
        "sidebarItems",
        "category",
        "categoryItems",
        "categoryItem",
        "type",
        "ids",
        "subcategoryItem",
        "push",
        "id",
        "subcategory",
        "label",
        "order",
        "length",
        "i",
        "item",
        "previous",
        "next",
        "processMetadata",
        "file",
        "refDir",
        "result",
        "extractMetadata",
        "readFileSync",
        "language",
        "getLanguage",
        "metadata",
        "fieldName",
        "has",
        "console",
        "warn",
        "rawContent",
        "parse",
        "name",
        "includes",
        "Error",
        "subDir",
        "getSubDir",
        "source",
        "basename",
        "title",
        "langPart",
        "translation",
        "useEnglishUrl",
        "versionPart",
        "version",
        "permalink",
        "localized_id",
        "next_id",
        "previous_id",
        "generateMetadataDocs",
        "e",
        "error",
        "exit",
        "enabledLanguages",
        "map",
        "tag",
        "metadatas",
        "defaultMetadatas",
        "docsDir",
        "join",
        "files",
        "sync",
        "extension",
        "extname",
        "res",
        "filter",
        "currentLanguage",
        "baseMetadata",
        "toString",
        "replace",
        "RegExp",
        "translatedDir",
        "versionData",
        "docData",
        "previous_title",
        "next_title",
        "writeFileSync",
        "__dirname",
        "JSON",
        "stringify",
        "generateMetadataBlog",
        "config",
        "sort",
        "reverse",
        "getMetadata",
        "filePathDateArr",
        "split",
        "date",
        "Date",
        "seconds",
        "Math",
        "round",
        "getTime",
        "sortedMetadatas",
        "a",
        "b",
        "parseInt",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst path = require('path');\nconst fs = require('fs');\nconst glob = require('glob');\nconst program = require('commander');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst blog = require('./blog.js');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst versionFallback = require('./versionFallback.js');\nconst utils = require('./utils.js');\n\nconst docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n\nconst SupportedHeaderFields = new Set([\n  'id',\n  'title',\n  'author',\n  'authorURL',\n  'authorFBID',\n  'sidebar_label',\n  'original_id',\n  'hide_title',\n  'layout',\n  'custom_edit_url',\n  'description',\n]);\n\nlet allSidebars;\nif (fs.existsSync(`${CWD}/sidebars.json`)) {\n  allSidebars = require(`${CWD}/sidebars.json`);\n} else {\n  allSidebars = {};\n}\n\n// Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n}\n\n// returns map from id to object containing sidebar ordering info\nfunction readSidebar(sidebars = {}) {\n  Object.assign(sidebars, versionFallback.sidebarData());\n\n  const items = {};\n\n  Object.keys(sidebars).forEach(sidebar => {\n    const categories = sidebars[sidebar];\n    const sidebarItems = [];\n\n    Object.keys(categories).forEach(category => {\n      const categoryItems = categories[category];\n      categoryItems.forEach(categoryItem => {\n        if (typeof categoryItem === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(subcategoryItem => {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1,\n                });\n              });\n              return;\n            default:\n              return;\n          }\n        }\n\n        // Is a regular id value.\n        sidebarItems.push({\n          id: categoryItem,\n          category,\n          subcategory: null,\n          order: sidebarItems.length + 1,\n        });\n      });\n    });\n\n    for (let i = 0; i < sidebarItems.length; i++) {\n      const item = sidebarItems[i];\n      let previous = null;\n      let next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous,\n        next,\n        sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order,\n      };\n    }\n  });\n\n  return items;\n}\n\n// process the metadata for a document found in either 'docs' or 'translated_docs'\nfunction processMetadata(file, refDir) {\n  const result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const language = utils.getLanguage(file, refDir) || 'en';\n\n  const metadata = {};\n  Object.keys(result.metadata).forEach(fieldName => {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(`Header field \"${fieldName}\" in ${file} is not supported.`);\n    }\n  });\n\n  const rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  }\n\n  // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n  const subDir = utils.getSubDir(file, refDir);\n  if (subDir) {\n    metadata.id = `${subDir}/${metadata.id}`;\n  }\n\n  // Example: `docs/projectA/test.md` source is `projectA/test.md`\n  metadata.source = subDir\n    ? `${subDir}/${path.basename(file)}`\n    : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  const langPart =\n    env.translation.enabled || siteConfig.useEnglishUrl ? `${language}/` : '';\n  let versionPart = '';\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = `${docsPart}${langPart}${versionPart}${metadata.id}.html`;\n\n  // change ids previous, next\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n\n  const items = readSidebar(allSidebars);\n  const id = metadata.localized_id;\n  const item = items[id];\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next =\n        (env.translation.enabled ? `${language}-` : '') + item.next;\n    }\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous =\n        (env.translation.enabled ? `${language}-` : '') + item.previous;\n    }\n  }\n\n  return {metadata, rawContent};\n}\n\n// process metadata for all docs and save into core/metadata.js\nfunction generateMetadataDocs() {\n  let order;\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map(language => language.tag);\n\n  const metadatas = {};\n  const defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    const docsDir = path.join(CWD, '../', getDocsPath());\n    let files = glob.sync(`${docsDir}/**`);\n    files.forEach(file => {\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n\n        // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n        enabledLanguages\n          .filter(currentLanguage => currentLanguage !== 'en')\n          .forEach(currentLanguage => {\n            const baseMetadata = Object.assign({}, metadata);\n            baseMetadata.id = baseMetadata.id\n              .toString()\n              .replace(/^en-/, `${currentLanguage}-`);\n            if (baseMetadata.permalink) {\n              baseMetadata.permalink = baseMetadata.permalink\n                .toString()\n                .replace(\n                  new RegExp(`^${docsPart}en/`),\n                  `${docsPart}${currentLanguage}/`,\n                );\n            }\n            if (baseMetadata.next) {\n              baseMetadata.next = baseMetadata.next\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            if (baseMetadata.previous) {\n              baseMetadata.previous = baseMetadata.previous\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            baseMetadata.language = currentLanguage;\n            defaultMetadatas[baseMetadata.id] = baseMetadata;\n          });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    });\n\n    // metadata for non-english docs\n    const translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(`${CWD}/translated_docs/**`);\n    files.forEach(file => {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, translatedDir);\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  }\n\n  // metadata for versioned docs\n  const versionData = versionFallback.docData();\n  versionData.forEach(metadata => {\n    const id = metadata.localized_id;\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.next =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].next;\n      }\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.previous =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].previous;\n      }\n    }\n    metadatas[metadata.id] = metadata;\n  });\n\n  // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n  Object.keys(metadatas).forEach(metadata => {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title =\n          metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title =\n          metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/metadata.js'),\n    `${'/**\\n' +\n    ' * @' +\n    'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '}${JSON.stringify(metadatas, null, 2)};\\n`,\n  );\n}\n\n// process metadata for blog posts and save into core/MetadataBlog.js\nfunction generateMetadataBlog(config = siteConfig) {\n  const metadatas = [];\n\n  const files = glob.sync(`${CWD}/blog/**/*.*`);\n  files\n    .sort()\n    .reverse()\n    .forEach(file => {\n      const extension = path.extname(file);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const metadata = blog.getMetadata(file, config);\n      // Extract, YYYY, MM, DD from the file name\n      const filePathDateArr = path.basename(file).split('-');\n      metadata.date = new Date(\n        `${filePathDateArr[0]}-${filePathDateArr[1]}-${filePathDateArr[2]}T06:00:00.000Z`,\n      );\n      // allow easier sorting of blog by providing seconds since epoch\n      metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n\n      metadatas.push(metadata);\n    });\n\n  const sortedMetadatas = metadatas.sort(\n    (a, b) => parseInt(b.seconds, 10) - parseInt(a.seconds, 10),\n  );\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/MetadataBlog.js'),\n    `${'/**\\n' +\n    ' * @' +\n    'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '}${JSON.stringify(sortedMetadatas, null, 2)};\\n`,\n  );\n}\n\nmodule.exports = {\n  getDocsPath,\n  readSidebar,\n  processMetadata,\n  generateMetadataDocs,\n  generateMetadataBlog,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/metadataUtils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/metadataUtils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/metadataUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/metadataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "metadataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  var lines = content.split(/\\r?\\n/);\n\n  if (lines[0] !== '---') {\n    return {};\n  }\n\n  var i = 1;\n\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n')\n  };\n} // Extract markdown metadata header\n\n\nfunction extractMetadata(content) {\n  var metadata = {};\n  var both = splitHeader(content); // if no content returned, then that means there was no header, and both.header is the content\n\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {\n        metadata: metadata,\n        rawContent: content\n      };\n    }\n\n    return {\n      metadata: metadata,\n      rawContent: both.header\n    };\n  } // New line characters => to handle all operating systems.\n\n\n  var lines = both.header.split(/\\r?\\n/); // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n\n  for (var i = 0; i < lines.length - 1; ++i) {\n    var keyvalue = lines[i].split(':');\n    var key = keyvalue[0].trim();\n    var value = keyvalue.slice(1).join(':').trim();\n\n    try {\n      value = JSON.parse(value);\n    } catch (err) {// Ignore the error as it means it's not a JSON value.\n    }\n\n    metadata[key] = value;\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: both.content\n  };\n} // mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\n\n\nfunction mdToHtml(Metadata, siteConfig) {\n  var baseUrl = siteConfig.baseUrl,\n      docsUrl = siteConfig.docsUrl;\n  var result = {};\n  Object.keys(Metadata).forEach(function (id) {\n    var metadata = Metadata[id];\n\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n\n    var htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n    var baseDocsPart = \"\".concat(baseUrl).concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n    var i18nDocsRegex = new RegExp(\"^\".concat(baseDocsPart, \"en/\"));\n    var docsRegex = new RegExp(\"^\".concat(baseDocsPart));\n\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, \"\".concat(baseDocsPart, \"en/VERSION/\"));\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, \"\".concat(baseDocsPart, \"VERSION/\"));\n    }\n\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata: extractMetadata,\n  mdToHtml: mdToHtml\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "metadataUtils.js"
      ],
      "names": [
        "splitHeader",
        "content",
        "lines",
        "split",
        "i",
        "length",
        "header",
        "slice",
        "join",
        "extractMetadata",
        "metadata",
        "both",
        "rawContent",
        "keyvalue",
        "key",
        "trim",
        "value",
        "JSON",
        "parse",
        "err",
        "mdToHtml",
        "Metadata",
        "siteConfig",
        "baseUrl",
        "docsUrl",
        "result",
        "Object",
        "keys",
        "forEach",
        "id",
        "language",
        "original_id",
        "htmlLink",
        "permalink",
        "replace",
        "baseDocsPart",
        "i18nDocsRegex",
        "RegExp",
        "docsRegex",
        "test",
        "source",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  const lines = content.split(/\\r?\\n/);\n  if (lines[0] !== '---') {\n    return {};\n  }\n  let i = 1;\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n'),\n  };\n}\n\n// Extract markdown metadata header\nfunction extractMetadata(content) {\n  const metadata = {};\n  const both = splitHeader(content);\n\n  // if no content returned, then that means there was no header, and both.header is the content\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {metadata, rawContent: content};\n    }\n    return {metadata, rawContent: both.header};\n  }\n\n  // New line characters => to handle all operating systems.\n  const lines = both.header.split(/\\r?\\n/);\n\n  // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n  for (let i = 0; i < lines.length - 1; ++i) {\n    const keyvalue = lines[i].split(':');\n    const key = keyvalue[0].trim();\n    let value = keyvalue\n      .slice(1)\n      .join(':')\n      .trim();\n    try {\n      value = JSON.parse(value);\n    } catch (err) {\n      // Ignore the error as it means it's not a JSON value.\n    }\n    metadata[key] = value;\n  }\n  return {metadata, rawContent: both.content};\n}\n\n// mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\nfunction mdToHtml(Metadata, siteConfig) {\n  const {baseUrl, docsUrl} = siteConfig;\n  const result = {};\n  Object.keys(Metadata).forEach(id => {\n    const metadata = Metadata[id];\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n    let htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n\n    const baseDocsPart = `${baseUrl}${docsUrl ? `${docsUrl}/` : ''}`;\n\n    const i18nDocsRegex = new RegExp(`^${baseDocsPart}en/`);\n    const docsRegex = new RegExp(`^${baseDocsPart}`);\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, `${baseDocsPart}en/VERSION/`);\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, `${baseDocsPart}VERSION/`);\n    }\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata,\n  mdToHtml,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/env.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/env.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/env.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar fs = require('fs-extra');\n\nvar path = require('path');\n\nvar chalk = require('chalk');\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar join = path.join;\nvar languagesFile = join(CWD, 'languages.js');\nvar versionsJSONFile = join(CWD, 'versions.json');\nvar versionsFile = join(CWD, 'pages/en/versions.js');\n\nvar Translation = /*#__PURE__*/function () {\n  function Translation() {\n    var _this = this;\n\n    _classCallCheck(this, Translation);\n\n    _defineProperty(this, \"enabledLanguages\", function () {\n      return _this.languages.filter(function (lang) {\n        return lang.enabled;\n      });\n    });\n\n    this.enabled = false;\n    this.languages = [{\n      enabled: true,\n      name: 'English',\n      tag: 'en'\n    }];\n    this.load();\n  }\n\n  _createClass(Translation, [{\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(languagesFile)) {\n        this.enabled = true;\n        this.languages = require(languagesFile);\n      }\n    }\n  }]);\n\n  return Translation;\n}();\n\nvar Versioning = /*#__PURE__*/function () {\n  function Versioning() {\n    _classCallCheck(this, Versioning);\n\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n    this.load();\n  }\n\n  _createClass(Versioning, [{\n    key: \"printMissingVersionsPageError\",\n    value: function printMissingVersionsPageError() {\n      console.error(\"\".concat(chalk.yellow('No versions.js file found!')) + \"\\nYou should create your versions.js file in pages/en directory.\" + \"\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.\");\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(versionsJSONFile)) {\n        this.enabled = true;\n        this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n        this.latestVersion = this.versions[0];\n        this.defaultVersion = siteConfig.defaultVersionShown ? siteConfig.defaultVersionShown : this.latestVersion; // otherwise show the latest version (other than next/master)\n      }\n\n      if (!fs.existsSync(versionsFile)) {\n        this.missingVersionsPage = true;\n      }\n    }\n  }]);\n\n  return Versioning;\n}();\n\nvar env = {\n  translation: new Translation(),\n  versioning: new Versioning()\n};\nmodule.exports = env;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZnMiLCJyZXF1aXJlIiwicGF0aCIsImNoYWxrIiwic2l0ZUNvbmZpZyIsImpvaW4iLCJsYW5ndWFnZXNGaWxlIiwidmVyc2lvbnNKU09ORmlsZSIsInZlcnNpb25zRmlsZSIsIlRyYW5zbGF0aW9uIiwibGFuZ3VhZ2VzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwibG9hZCIsImV4aXN0c1N5bmMiLCJWZXJzaW9uaW5nIiwibGF0ZXN0VmVyc2lvbiIsImRlZmF1bHRWZXJzaW9uIiwidmVyc2lvbnMiLCJtaXNzaW5nVmVyc2lvbnNQYWdlIiwiY29uc29sZSIsImVycm9yIiwieWVsbG93IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZGVmYXVsdFZlcnNpb25TaG93biIsImVudiIsInRyYW5zbGF0aW9uIiwidmVyc2lvbmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sV0FBSUosR0FBSixvQkFBMUI7O0FBRUEsSUFBTVEsSUFBSSxHQUFHSCxJQUFJLENBQUNHLElBQWxCO0FBRUEsSUFBTUMsYUFBYSxHQUFHRCxJQUFJLENBQUNSLEdBQUQsRUFBTSxjQUFOLENBQTFCO0FBQ0EsSUFBTVUsZ0JBQWdCLEdBQUdGLElBQUksQ0FBQ1IsR0FBRCxFQUFNLGVBQU4sQ0FBN0I7QUFDQSxJQUFNVyxZQUFZLEdBQUdILElBQUksQ0FBQ1IsR0FBRCxFQUFNLHNCQUFOLENBQXpCOztJQUVNWSxXO0FBQ0oseUJBQWM7QUFBQTs7QUFBQTs7QUFBQSw4Q0FhSztBQUFBLGFBQU0sS0FBSSxDQUFDQyxTQUFMLENBQWVDLE1BQWYsQ0FBc0IsVUFBQUMsSUFBSTtBQUFBLGVBQUlBLElBQUksQ0FBQ0MsT0FBVDtBQUFBLE9BQTFCLENBQU47QUFBQSxLQWJMOztBQUNaLFNBQUtBLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS0gsU0FBTCxHQUFpQixDQUNmO0FBQ0VHLE1BQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLE1BQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLE1BQUFBLEdBQUcsRUFBRTtBQUhQLEtBRGUsQ0FBakI7QUFRQSxTQUFLQyxJQUFMO0FBQ0Q7Ozs7MkJBSU07QUFDTCxVQUFJaEIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjWCxhQUFkLENBQUosRUFBa0M7QUFDaEMsYUFBS08sT0FBTCxHQUFlLElBQWY7QUFDQSxhQUFLSCxTQUFMLEdBQWlCVCxPQUFPLENBQUNLLGFBQUQsQ0FBeEI7QUFDRDtBQUNGOzs7Ozs7SUFHR1ksVTtBQUNKLHdCQUFjO0FBQUE7O0FBQ1osU0FBS0wsT0FBTCxHQUFlLEtBQWY7QUFDQSxTQUFLTSxhQUFMLEdBQXFCLElBQXJCO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixJQUF0QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQSxTQUFLQyxtQkFBTCxHQUEyQixLQUEzQjtBQUVBLFNBQUtOLElBQUw7QUFDRDs7OztvREFFK0I7QUFDOUJPLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUNFLFVBQUdyQixLQUFLLENBQUNzQixNQUFOLENBQWEsNEJBQWIsQ0FBSCwySUFERjtBQUtEOzs7MkJBRU07QUFDTCxVQUFJekIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjVixnQkFBZCxDQUFKLEVBQXFDO0FBQ25DLGFBQUtNLE9BQUwsR0FBZSxJQUFmO0FBQ0EsYUFBS1EsUUFBTCxHQUFnQkssSUFBSSxDQUFDQyxLQUFMLENBQVczQixFQUFFLENBQUM0QixZQUFILENBQWdCckIsZ0JBQWhCLEVBQWtDLE1BQWxDLENBQVgsQ0FBaEI7QUFDQSxhQUFLWSxhQUFMLEdBQXFCLEtBQUtFLFFBQUwsQ0FBYyxDQUFkLENBQXJCO0FBQ0EsYUFBS0QsY0FBTCxHQUFzQmhCLFVBQVUsQ0FBQ3lCLG1CQUFYLEdBQ2xCekIsVUFBVSxDQUFDeUIsbUJBRE8sR0FFbEIsS0FBS1YsYUFGVCxDQUptQyxDQU1YO0FBQ3pCOztBQUVELFVBQUksQ0FBQ25CLEVBQUUsQ0FBQ2lCLFVBQUgsQ0FBY1QsWUFBZCxDQUFMLEVBQWtDO0FBQ2hDLGFBQUtjLG1CQUFMLEdBQTJCLElBQTNCO0FBQ0Q7QUFDRjs7Ozs7O0FBR0gsSUFBTVEsR0FBRyxHQUFHO0FBQ1ZDLEVBQUFBLFdBQVcsRUFBRSxJQUFJdEIsV0FBSixFQURIO0FBRVZ1QixFQUFBQSxVQUFVLEVBQUUsSUFBSWQsVUFBSjtBQUZGLENBQVo7QUFLQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixHQUFqQiIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJyk7XG5cbmNvbnN0IHNpdGVDb25maWcgPSByZXF1aXJlKGAke0NXRH0vc2l0ZUNvbmZpZy5qc2ApO1xuXG5jb25zdCBqb2luID0gcGF0aC5qb2luO1xuXG5jb25zdCBsYW5ndWFnZXNGaWxlID0gam9pbihDV0QsICdsYW5ndWFnZXMuanMnKTtcbmNvbnN0IHZlcnNpb25zSlNPTkZpbGUgPSBqb2luKENXRCwgJ3ZlcnNpb25zLmpzb24nKTtcbmNvbnN0IHZlcnNpb25zRmlsZSA9IGpvaW4oQ1dELCAncGFnZXMvZW4vdmVyc2lvbnMuanMnKTtcblxuY2xhc3MgVHJhbnNsYXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxhbmd1YWdlcyA9IFtcbiAgICAgIHtcbiAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgbmFtZTogJ0VuZ2xpc2gnLFxuICAgICAgICB0YWc6ICdlbicsXG4gICAgICB9LFxuICAgIF07XG5cbiAgICB0aGlzLmxvYWQoKTtcbiAgfVxuXG4gIGVuYWJsZWRMYW5ndWFnZXMgPSAoKSA9PiB0aGlzLmxhbmd1YWdlcy5maWx0ZXIobGFuZyA9PiBsYW5nLmVuYWJsZWQpO1xuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmMobGFuZ3VhZ2VzRmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmxhbmd1YWdlcyA9IHJlcXVpcmUobGFuZ3VhZ2VzRmlsZSk7XG4gICAgfVxuICB9XG59XG5cbmNsYXNzIFZlcnNpb25pbmcge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMuZGVmYXVsdFZlcnNpb24gPSBudWxsO1xuICAgIHRoaXMudmVyc2lvbnMgPSBbXTtcbiAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSBmYWxzZTtcblxuICAgIHRoaXMubG9hZCgpO1xuICB9XG5cbiAgcHJpbnRNaXNzaW5nVmVyc2lvbnNQYWdlRXJyb3IoKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIGAke2NoYWxrLnllbGxvdygnTm8gdmVyc2lvbnMuanMgZmlsZSBmb3VuZCEnKX1gICtcbiAgICAgICAgYFxcbllvdSBzaG91bGQgY3JlYXRlIHlvdXIgdmVyc2lvbnMuanMgZmlsZSBpbiBwYWdlcy9lbiBkaXJlY3RvcnkuYCArXG4gICAgICAgIGBcXG5QbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kb2N1c2F1cnVzLmlvL2RvY3MvZW4vdmVyc2lvbmluZy5odG1sLmAsXG4gICAgKTtcbiAgfVxuXG4gIGxvYWQoKSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmModmVyc2lvbnNKU09ORmlsZSkpIHtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLnZlcnNpb25zID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmModmVyc2lvbnNKU09ORmlsZSwgJ3V0ZjgnKSk7XG4gICAgICB0aGlzLmxhdGVzdFZlcnNpb24gPSB0aGlzLnZlcnNpb25zWzBdO1xuICAgICAgdGhpcy5kZWZhdWx0VmVyc2lvbiA9IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA/IHNpdGVDb25maWcuZGVmYXVsdFZlcnNpb25TaG93blxuICAgICAgICA6IHRoaXMubGF0ZXN0VmVyc2lvbjsgLy8gb3RoZXJ3aXNlIHNob3cgdGhlIGxhdGVzdCB2ZXJzaW9uIChvdGhlciB0aGFuIG5leHQvbWFzdGVyKVxuICAgIH1cblxuICAgIGlmICghZnMuZXhpc3RzU3luYyh2ZXJzaW9uc0ZpbGUpKSB7XG4gICAgICB0aGlzLm1pc3NpbmdWZXJzaW9uc1BhZ2UgPSB0cnVlO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBlbnYgPSB7XG4gIHRyYW5zbGF0aW9uOiBuZXcgVHJhbnNsYXRpb24oKSxcbiAgdmVyc2lvbmluZzogbmV3IFZlcnNpb25pbmcoKSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW52O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "path",
        "chalk",
        "siteConfig",
        "join",
        "languagesFile",
        "versionsJSONFile",
        "versionsFile",
        "Translation",
        "languages",
        "filter",
        "lang",
        "enabled",
        "name",
        "tag",
        "load",
        "existsSync",
        "Versioning",
        "latestVersion",
        "defaultVersion",
        "versions",
        "missingVersionsPage",
        "console",
        "error",
        "yellow",
        "JSON",
        "parse",
        "readFileSync",
        "defaultVersionShown",
        "env",
        "translation",
        "versioning",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,WAAIJ,GAAJ,oBAA1B;;AAEA,IAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,IAAMC,aAAa,GAAGD,IAAI,CAACR,GAAD,EAAM,cAAN,CAA1B;AACA,IAAMU,gBAAgB,GAAGF,IAAI,CAACR,GAAD,EAAM,eAAN,CAA7B;AACA,IAAMW,YAAY,GAAGH,IAAI,CAACR,GAAD,EAAM,sBAAN,CAAzB;;IAEMY,W;AACJ,yBAAc;AAAA;;AAAA;;AAAA,8CAaK;AAAA,aAAM,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,OAAT;AAAA,OAA1B,CAAN;AAAA,KAbL;;AACZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKH,SAAL,GAAiB,CACf;AACEG,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADe,CAAjB;AAQA,SAAKC,IAAL;AACD;;;;2BAIM;AACL,UAAIhB,EAAE,CAACiB,UAAH,CAAcX,aAAd,CAAJ,EAAkC;AAChC,aAAKO,OAAL,GAAe,IAAf;AACA,aAAKH,SAAL,GAAiBT,OAAO,CAACK,aAAD,CAAxB;AACD;AACF;;;;;;IAGGY,U;AACJ,wBAAc;AAAA;;AACZ,SAAKL,OAAL,GAAe,KAAf;AACA,SAAKM,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AAEA,SAAKN,IAAL;AACD;;;;oDAE+B;AAC9BO,MAAAA,OAAO,CAACC,KAAR,CACE,UAAGrB,KAAK,CAACsB,MAAN,CAAa,4BAAb,CAAH,2IADF;AAKD;;;2BAEM;AACL,UAAIzB,EAAE,CAACiB,UAAH,CAAcV,gBAAd,CAAJ,EAAqC;AACnC,aAAKM,OAAL,GAAe,IAAf;AACA,aAAKQ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW3B,EAAE,CAAC4B,YAAH,CAAgBrB,gBAAhB,EAAkC,MAAlC,CAAX,CAAhB;AACA,aAAKY,aAAL,GAAqB,KAAKE,QAAL,CAAc,CAAd,CAArB;AACA,aAAKD,cAAL,GAAsBhB,UAAU,CAACyB,mBAAX,GAClBzB,UAAU,CAACyB,mBADO,GAElB,KAAKV,aAFT,CAJmC,CAMX;AACzB;;AAED,UAAI,CAACnB,EAAE,CAACiB,UAAH,CAAcT,YAAd,CAAL,EAAkC;AAChC,aAAKc,mBAAL,GAA2B,IAA3B;AACD;AACF;;;;;;AAGH,IAAMQ,GAAG,GAAG;AACVC,EAAAA,WAAW,EAAE,IAAItB,WAAJ,EADH;AAEVuB,EAAAA,UAAU,EAAE,IAAId,UAAJ;AAFF,CAAZ;AAKAe,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\n\nconst siteConfig = require(`${CWD}/siteConfig.js`);\n\nconst join = path.join;\n\nconst languagesFile = join(CWD, 'languages.js');\nconst versionsJSONFile = join(CWD, 'versions.json');\nconst versionsFile = join(CWD, 'pages/en/versions.js');\n\nclass Translation {\n  constructor() {\n    this.enabled = false;\n    this.languages = [\n      {\n        enabled: true,\n        name: 'English',\n        tag: 'en',\n      },\n    ];\n\n    this.load();\n  }\n\n  enabledLanguages = () => this.languages.filter(lang => lang.enabled);\n\n  load() {\n    if (fs.existsSync(languagesFile)) {\n      this.enabled = true;\n      this.languages = require(languagesFile);\n    }\n  }\n}\n\nclass Versioning {\n  constructor() {\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n\n    this.load();\n  }\n\n  printMissingVersionsPageError() {\n    console.error(\n      `${chalk.yellow('No versions.js file found!')}` +\n        `\\nYou should create your versions.js file in pages/en directory.` +\n        `\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.`,\n    );\n  }\n\n  load() {\n    if (fs.existsSync(versionsJSONFile)) {\n      this.enabled = true;\n      this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n      this.latestVersion = this.versions[0];\n      this.defaultVersion = siteConfig.defaultVersionShown\n        ? siteConfig.defaultVersionShown\n        : this.latestVersion; // otherwise show the latest version (other than next/master)\n    }\n\n    if (!fs.existsSync(versionsFile)) {\n      this.missingVersionsPage = true;\n    }\n  }\n}\n\nconst env = {\n  translation: new Translation(),\n  versioning: new Versioning(),\n};\n\nmodule.exports = env;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/blog.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/blog.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/blog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar path = require('path');\n\nvar fs = require('fs-extra');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar _require = require('./utils.js'),\n    replaceAssetsLink = _require.replaceAssetsLink;\n\nvar _require2 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n\n  return path.basename(file).replace('-', '/').replace('-', '/').replace('-', '/').replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  var BlogPageLayout = require('../core/BlogPageLayout.js');\n\n  var blogPages = {};\n  var perPage = 10;\n\n  for (var page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    var metadata = {\n      page: page,\n      perPage: perPage\n    };\n    var blogPageComp = /*#__PURE__*/React.createElement(BlogPageLayout, {\n      metadata: metadata,\n      language: \"en\",\n      config: siteConfig\n    });\n    var str = renderToStaticMarkupWithDoctype(blogPageComp);\n    var pagePath = \"\".concat(page > 0 ? \"page\".concat(page + 1) : '', \"/index.html\");\n    blogPages[pagePath] = str;\n  }\n\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, {\n    encoding: 'utf8'\n  }));\n  var metadata = Object.assign({\n    path: fileToUrl(file),\n    content: replaceAssetsLink(result.rawContent, \"\".concat(siteConfig.baseUrl, \"blog\"))\n  }, result.metadata);\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  var metadata = getMetadata(file, siteConfig);\n\n  if (!metadata) {\n    return null;\n  }\n\n  var BlogPostLayout = require('../core/BlogPostLayout.js');\n\n  var blogPostComp = /*#__PURE__*/React.createElement(BlogPostLayout, {\n    metadata: metadata,\n    language: \"en\",\n    config: siteConfig\n  }, metadata.content);\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl: fileToUrl,\n  getMetadata: getMetadata,\n  getPagesMarkup: getPagesMarkup,\n  getPostMarkup: getPostMarkup,\n  urlToSource: urlToSource\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicGF0aCIsImZzIiwibWV0YWRhdGFVdGlscyIsInJlcGxhY2VBc3NldHNMaW5rIiwicmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSIsInVybFRvU291cmNlIiwidXJsIiwicmVwbGFjZSIsImZpbGVUb1VybCIsImZpbGUiLCJleGlzdHNTeW5jIiwiYmFzZW5hbWUiLCJnZXRQYWdlc01hcmt1cCIsIm51bU9mQmxvZyIsInNpdGVDb25maWciLCJCbG9nUGFnZUxheW91dCIsImJsb2dQYWdlcyIsInBlclBhZ2UiLCJwYWdlIiwiTWF0aCIsImNlaWwiLCJtZXRhZGF0YSIsImJsb2dQYWdlQ29tcCIsInN0ciIsInBhZ2VQYXRoIiwiZ2V0TWV0YWRhdGEiLCJyZXN1bHQiLCJleHRyYWN0TWV0YWRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlbmNvZGluZyIsIk9iamVjdCIsImFzc2lnbiIsImNvbnRlbnQiLCJyYXdDb250ZW50IiwiYmFzZVVybCIsImlkIiwidGl0bGUiLCJnZXRQb3N0TWFya3VwIiwiQmxvZ1Bvc3RMYXlvdXQiLCJibG9nUG9zdENvbXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFDQSxJQUFNRyxhQUFhLEdBQUdILE9BQU8sQ0FBQyxpQkFBRCxDQUE3Qjs7ZUFDNEJBLE9BQU8sQ0FBQyxZQUFELEM7SUFBNUJJLGlCLFlBQUFBLGlCOztnQkFDbUNKLE9BQU8sQ0FBQyxlQUFELEM7SUFBMUNLLCtCLGFBQUFBLCtCOztBQUVQLFNBQVNDLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCO0FBQ3hCLE1BQUksQ0FB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Q0FBQ2hCLElBQUQsRUFBT0ssVUFBUCxDQUE1Qjs7QUFDQSxNQUFJLENBQUNPLFFBQUwsRUFBZTtBQUNiLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1pQixjQUFjLEdBQUd2QyxPQUFPLENBQUMsMkJBQUQsQ0FBOUI7O0FBQ0EsTUFBTXdDLFlBQVksZ0JBQ2hCLG9CQUFDLGNBQUQ7QUFBZ0IsSUFBQSxRQUFRLEVBQUVsQixRQUExQjtBQUFvQyxJQUFBLFFBQVEsRUFBQyxJQUE3QztBQUFrRCxJQUFBLE1BQU0sRUFBRVA7QUFBMUQsS0FDR08sUUFBUSxDQUFDVyxPQURaLENBREY7QUFLQSxTQUFPNUIsK0JBQStCLENBQUNtQyxZQUFELENBQXRDO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakMsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZpQixFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZmIsRUFBQUEsY0FBYyxFQUFkQSxjQUhlO0FBSWZ5QixFQUFBQSxhQUFhLEVBQWJBLGFBSmU7QUFLZmhDLEVBQUFBLFdBQVcsRUFBWEE7QUFMZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IG1ldGFkYXRhVXRpbHMgPSByZXF1aXJlKCcuL21ldGFkYXRhVXRpbHMnKTtcbmNvbnN0IHtyZXBsYWNlQXNzZXRzTGlua30gPSByZXF1aXJlKCcuL3V0aWxzLmpzJyk7XG5jb25zdCB7cmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZX0gPSByZXF1aXJlKCcuL3JlbmRlclV0aWxzJyk7XG5cbmZ1bmN0aW9uIHVybFRvU291cmNlKHVybCkge1xuICBpZiAoIXVybCB8fCB0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiB1cmwucmVwbGFjZSgvKFxcL2luZGV4KT9cXC5odG1sJC8sICcubWQnKS5yZXBsYWNlKC9cXC8vZywgJy0nKTtcbn1cblxuZnVuY3Rpb24gZmlsZVRvVXJsKGZpbGUpIHtcbiAgaWYgKCFmaWxlIHx8ICFmcy5leGlzdHNTeW5jKGZpbGUpIHx8IHR5cGVvZiBmaWxlICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBwYXRoXG4gICAgLmJhc2VuYW1lKGZpbGUpXG4gICAgLnJlcGxhY2UoJy0nLCAnLycpXG4gICAgLnJlcGxhY2UoJy0nLCAnLycpXG4gICAgLnJlcGxhY2UoJy0nLCAnLycpXG4gICAgLnJlcGxhY2UoL1xcLm1kJC8sICcuaHRtbCcpO1xufVxuXG5mdW5jdGlvbiBnZXRQYWdlc01hcmt1cChudW1PZkJsb2csIHNpdGVDb25maWcpIHtcbiAgY29uc3QgQmxvZ1BhZ2VMYXlvdXQgPSByZXF1aXJlKCcuLi9jb3JlL0Jsb2dQYWdlTGF5b3V0LmpzJyk7XG4gIGNvbnN0IGJsb2dQYWdlcyA9IHt9O1xuICBjb25zdCBwZXJQYWdlID0gMTA7XG4gIGZvciAobGV0IHBhZ2UgPSAwOyBwYWdlIDwgTWF0aC5jZWlsKG51bU9mQmxvZyAvIHBlclBhZ2UpOyBwYWdlKyspIHtcbiAgICBjb25zdCBtZXRhZGF0YSA9IHtwYWdlLCBwZXJQYWdlfTtcbiAgICBjb25zdCBibG9nUGFnZUNvbXAgPSAoXG4gICAgICA8QmxvZ1BhZ2VMYXlvdXQgbWV0YWRhdGE9e21ldGFkYXRhfSBsYW5ndWFnZT1cImVuXCIgY29uZmlnPXtzaXRlQ29uZmlnfSAvPlxuICAgICk7XG4gICAgY29uc3Qgc3RyID0gcmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZShibG9nUGFnZUNvbXApO1xuICAgIGNvbnN0IHBhZ2VQYXRoID0gYCR7cGFnZSA+IDAgPyBgcGFnZSR7cGFnZSArIDF9YCA6ICcnfS9pbmRleC5odG1sYDtcbiAgICBibG9nUGFnZXNbcGFnZVBhdGhdID0gc3RyO1xuICB9XG4gIHJldHVybiBibG9nUGFnZXM7XG59XG5cbmZ1bmN0aW9uIGdldE1ldGFkYXRhKGZpbGUsIHNpdGVDb25maWcpIHtcbiAgaWYgKCFmaWxlIHx8ICFmcy5leGlzdHNTeW5jKGZpbGUpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgcmVzdWx0ID0gbWV0YWRhdGFVdGlscy5leHRyYWN0TWV0YWRhdGEoXG4gICAgZnMucmVhZEZpbGVTeW5jKGZpbGUsIHtlbmNvZGluZzogJ3V0ZjgnfSksXG4gICk7XG4gIGNvbnN0IG1ldGFkYXRhID0gT2JqZWN0LmFzc2lnbihcbiAgICB7XG4gICAgICBwYXRoOiBmaWxlVG9VcmwoZmlsZSksXG4gICAgICBjb250ZW50OiByZXBsYWNlQXNzZXRzTGluayhcbiAgICAgICAgcmVzdWx0LnJhd0NvbnRlbnQsXG4gICAgICAgIGAke3NpdGVDb25maWcuYmFzZVVybH1ibG9nYCxcbiAgICAgICksXG4gICAgfSxcbiAgICByZXN1bHQubWV0YWRhdGEsXG4gICk7XG4gIG1ldGFkYXRhLmlkID0gbWV0YWRhdGEudGl0bGU7XG4gIHJldHVybiBtZXRhZGF0YTtcbn1cblxuZnVuY3Rpb24gZ2V0UG9zdE1hcmt1cChmaWxlLCBzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IG1ldGFkYXRhID0gZ2V0TWV0YWRhdGEoZmlsZSwgc2l0ZUNvbmZpZyk7XG4gIGlmICghbWV0YWRhdGEpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBCbG9nUG9zdExheW91dCA9IHJlcXVpcmUoJy4uL2NvcmUvQmxvZ1Bvc3RMYXlvdXQuanMnKTtcbiAgY29uc3QgYmxvZ1Bvc3RDb21wID0gKFxuICAgIDxCbG9nUG9zdExheW91dCBtZXRhZGF0YT17bWV0YWRhdGF9IGxhbmd1YWdlPVwiZW5cIiBjb25maWc9e3NpdGVDb25maWd9PlxuICAgICAge21ldGFkYXRhLmNvbnRlbnR9XG4gICAgPC9CbG9nUG9zdExheW91dD5cbiAgKTtcbiAgcmV0dXJuIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoYmxvZ1Bvc3RDb21wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGZpbGVUb1VybCxcbiAgZ2V0TWV0YWRhdGEsXG4gIGdldFBhZ2VzTWFya3VwLFxuICBnZXRQb3N0TWFya3VwLFxuICB1cmxUb1NvdXJjZSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "React",
        "require",
        "path",
        "fs",
        "metadataUtils",
        "replaceAssetsLink",
        "renderToStaticMarkupWithDoctype",
        "urlToSource",
        "url",
        "replace",
        "fileToUrl",
        "file",
        "existsSync",
        "basename",
        "getPagesMarkup",
        "numOfBlog",
        "siteConfig",
        "BlogPageLayout",
        "blogPages",
        "perPage",
        "page",
        "Math",
        "ceil",
        "metadata",
        "blogPageComp",
        "str",
        "pagePath",
        "getMetadata",
        "result",
        "extractMetadata",
        "readFileSync",
        "encoding",
        "Object",
        "assign",
        "content",
        "rawContent",
        "baseUrl",
        "id",
        "title",
        "getPostMarkup",
        "BlogPostLayout",
        "blogPostComp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst metadataUtils = require('./metadataUtils');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n  return path\n    .basename(file)\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  const BlogPageLayout = require('../core/BlogPageLayout.js');\n  const blogPages = {};\n  const perPage = 10;\n  for (let page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    const metadata = {page, perPage};\n    const blogPageComp = (\n      <BlogPageLayout metadata={metadata} language=\"en\" config={siteConfig} />\n    );\n    const str = renderToStaticMarkupWithDoctype(blogPageComp);\n    const pagePath = `${page > 0 ? `page${page + 1}` : ''}/index.html`;\n    blogPages[pagePath] = str;\n  }\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n  const result = metadataUtils.extractMetadata(\n    fs.readFileSync(file, {encoding: 'utf8'}),\n  );\n  const metadata = Object.assign(\n    {\n      path: fileToUrl(file),\n      content: replaceAssetsLink(\n        result.rawContent,\n        `${siteConfig.baseUrl}blog`,\n      ),\n    },\n    result.metadata,\n  );\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  const metadata = getMetadata(file, siteConfig);\n  if (!metadata) {\n    return null;\n  }\n  const BlogPostLayout = require('../core/BlogPostLayout.js');\n  const blogPostComp = (\n    <BlogPostLayout metadata={metadata} language=\"en\" config={siteConfig}>\n      {metadata.content}\n    </BlogPostLayout>\n  );\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl,\n  getMetadata,\n  getPagesMarkup,\n  getPostMarkup,\n  urlToSource,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/utils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/utils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar cssnano = require('cssnano');\n\nvar autoprefixer = require('autoprefixer');\n\nvar postcss = require('postcss');\n\nvar path = require('path');\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  var subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  var separator = escapeStringRegexp(path.sep);\n  var baseDir = escapeStringRegexp(path.basename(refDir));\n  var regexSubFolder = new RegExp(\"\".concat(baseDir).concat(separator, \"(.*?)\").concat(separator, \".*\"));\n  var match = regexSubFolder.exec(file); // Avoid misinterpreting subdirectory as language\n\n  var env = require('./env.js');\n\n  if (match && env.translation.enabled) {\n    var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n      return language.tag;\n    });\n\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n\n  for (var i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano.process(cssContent, {\n    preset: 'default',\n    zindex: false,\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer]).process(cssContent, {\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  var fencedBlock = false;\n  var lines = oldContent.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    return fencedBlock ? line : line.replace(/\\]\\(assets\\//g, \"](\".concat(location, \"/assets/\"));\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir: getSubDir,\n  getLanguage: getLanguage,\n  isSeparateCss: isSeparateCss,\n  minifyCss: minifyCss,\n  autoPrefixCss: autoPrefixCss,\n  replaceAssetsLink: replaceAssetsLink\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzc25hbm8iLCJyZXF1aXJlIiwiYXV0b3ByZWZpeGVyIiwicG9zdGNzcyIsInBhdGgiLCJlc2NhcGVTdHJpbmdSZWdleHAiLCJnZXRTdWJEaXIiLCJmaWxlIiwicmVmRGlyIiwic3ViRGlyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwicmVwbGFjZSIsImluY2x1ZGVzIiwiZ2V0TGFuZ3VhZ2UiLCJzZXBhcmF0b3IiLCJzZXAiLCJiYXNlRGlyIiwiYmFzZW5hbWUiLCJyZWdleFN1YkZvbGRlciIsIlJlZ0V4cCIsIm1hdGNoIiwiZXhlYyIsImVudiIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5ndWFnZSIsInRhZyIsImluZGV4T2YiLCJpc1NlcGFyYXRlQ3NzIiwic2VwYXJhdGVEaXJzIiwiaSIsImxlbmd0aCIsIm1pbmlmeUNzcyIsImNzc0NvbnRlbnQiLCJwcm9jZXNzIiwicHJlc2V0IiwiemluZGV4IiwiZnJvbSIsInVuZGVmaW5lZCIsInRoZW4iLCJyZXN1bHQiLCJjc3MiLCJhdXRvUHJlZml4Q3NzIiwicmVwbGFjZUFzc2V0c0xpbmsiLCJvbGRDb250ZW50IiwibG9jYXRpb24iLCJmZW5jZWRCbG9jayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBTUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxrQkFBa0IsR0FBR0osT0FBTyxDQUFDLHNCQUFELENBQWxD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LEVBQWlEO0FBQy9DLE1BQUlDLFdBQVcsR0FBRyxLQUFsQjtBQUNBLE1BQU1DLEtBQUssR0FBR0gsVUFBVSxDQUFDSSxLQUFYLENBQWlCLElBQWpCLEVBQXVCeEIsR0FBdkIsQ0FBMkIsVUFBQXlCLElBQUksRUFBSTtBQUMvQyxRQUFJQSxJQUFJLENBQUNDLElBQUwsR0FBWUMsVUFBWixDQUF1QixLQUF2QixDQUFKLEVBQW1DO0FBQ2pDTCxNQUFBQSxXQUFXLEdBQUcsQ0FBQ0EsV0FBZjtBQUNEOztBQUNELFdBQU9BLFdBQVcsR0FDZEcsSUFEYyxHQUVkQSxJQUFJLENBQUN4QyxPQUFMLENBQWEsZUFBYixjQUFtQ29DLFFBQW5DLGNBRko7QUFHRCxHQVBhLENBQWQ7QUFRQSxTQUFPRSxLQUFLLENBQUNLLElBQU4sQ0FBVyxJQUFYLENBQVA7QUFDRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZuRCxFQUFBQSxTQUFTLEVBQVRBLFNBRGU7QUFFZlEsRUFBQUEsV0FBVyxFQUFYQSxXQUZlO0FBR2ZpQixFQUFBQSxhQUFhLEVBQWJBLGFBSGU7QUFJZkksRUFBQUEsU0FBUyxFQUFUQSxTQUplO0FBS2ZVLEVBQUFBLGFBQWEsRUFBYkEsYUFMZTtBQU1mQyxFQUFBQSxpQkFBaUIsRUFBakJBO0FBTmUsQ0FBakIiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5jb25zdCBjc3NuYW5vID0gcmVxdWlyZSgnY3NzbmFubycpO1xuY29uc3QgYXV0b3ByZWZpeGVyID0gcmVxdWlyZSgnYXV0b3ByZWZpeGVyJyk7XG5jb25zdCBwb3N0Y3NzID0gcmVxdWlyZSgncG9zdGNzcycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGVzY2FwZVN0cmluZ1JlZ2V4cCA9IHJlcXVpcmUoJ2VzY2FwZS1zdHJpbmctcmVnZXhwJyk7XG5cbmZ1bmN0aW9uIGdldFN1YkRpcihmaWxlLCByZWZEaXIpIHtcbiAgY29uc3Qgc3ViRGlyID0gcGF0aC5kaXJuYW1lKHBhdGgucmVsYXRpdmUocmVmRGlyLCBmaWxlKSkucmVwbGFjZSgvXFxcXC9nLCAnLycpO1xuICByZXR1cm4gc3ViRGlyICE9PSAnLicgJiYgIXN1YkRpci5pbmNsdWRlcygnLi4nKSA/IHN1YkRpciA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIGdldExhbmd1YWdlKGZpbGUsIHJlZkRpcikge1xuICBjb25zdCBzZXBhcmF0b3IgPSBlc2NhcGVTdHJpbmdSZWdleHAocGF0aC5zZXApO1xuICBjb25zdCBiYXNlRGlyID0gZXNjYXBlU3RyaW5nUmVnZXhwKHBhdGguYmFzZW5hbWUocmVmRGlyKSk7XG4gIGNvbnN0IHJlZ2V4U3ViRm9sZGVyID0gbmV3IFJlZ0V4cChcbiAgICBgJHtiYXNlRGlyfSR7c2VwYXJhdG9yfSguKj8pJHtzZXBhcmF0b3J9LipgLFxuICApO1xuICBjb25zdCBtYXRjaCA9IHJlZ2V4U3ViRm9sZGVyLmV4ZWMoZmlsZSk7XG5cbiAgLy8gQXZvaWQgbWlzaW50ZXJwcmV0aW5nIHN1YmRpcmVjdG9yeSBhcyBsYW5ndWFnZVxuICBjb25zdCBlbnYgPSByZXF1aXJlKCcuL2Vudi5qcycpO1xuICBpZiAobWF0Y2ggJiYgZW52LnRyYW5zbGF0aW9uLmVuYWJsZWQpIHtcbiAgICBjb25zdCBlbmFibGVkTGFuZ3VhZ2VzID0gZW52LnRyYW5zbGF0aW9uXG4gICAgICAuZW5hYmxlZExhbmd1YWdlcygpXG4gICAgICAubWFwKGxhbmd1YWdlID0+IGxhbmd1YWdlLnRhZyk7XG4gICAgaWYgKGVuYWJsZWRMYW5ndWFnZXMuaW5kZXhPZihtYXRjaFsxXSkgIT09IC0xKSB7XG4gICAgICByZXR1cm4gbWF0Y2hbMV07XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBpc1NlcGFyYXRlQ3NzKGZpbGUsIHNlcGFyYXRlRGlycykge1xuICBpZiAoIXNlcGFyYXRlRGlycykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlcGFyYXRlRGlycy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChmaWxlLmluY2x1ZGVzKHNlcGFyYXRlRGlyc1tpXSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIG1pbmlmeUNzcyhjc3NDb250ZW50KSB7XG4gIHJldHVybiBjc3NuYW5vXG4gICAgLnByb2Nlc3MoY3NzQ29udGVudCwge1xuICAgICAgcHJlc2V0OiAnZGVmYXVsdCcsXG4gICAgICB6aW5kZXg6IGZhbHNlLFxuICAgICAgZnJvbTogdW5kZWZpbmVkLFxuICAgIH0pXG4gICAgLnRoZW4ocmVzdWx0ID0+IHJlc3VsdC5jc3MpO1xufVxuXG5mdW5jdGlvbiBhdXRvUHJlZml4Q3NzKGNzc0NvbnRlbnQpIHtcbiAgcmV0dXJuIHBvc3Rjc3MoW2F1dG9wcmVmaXhlcl0pXG4gICAgLnByb2Nlc3MoY3NzQ29udGVudCwge1xuICAgICAgZnJvbTogdW5kZWZpbmVkLFxuICAgIH0pXG4gICAgLnRoZW4ocmVzdWx0ID0+IHJlc3VsdC5jc3MpO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlQXNzZXRzTGluayhvbGRDb250ZW50LCBsb2NhdGlvbikge1xuICBsZXQgZmVuY2VkQmxvY2sgPSBmYWxzZTtcbiAgY29uc3QgbGluZXMgPSBvbGRDb250ZW50LnNwbGl0KCdcXG4nKS5tYXAobGluZSA9PiB7XG4gICAgaWYgKGxpbmUudHJpbSgpLnN0YXJ0c1dpdGgoJ2BgYCcpKSB7XG4gICAgICBmZW5jZWRCbG9jayA9ICFmZW5jZWRCbG9jaztcbiAgICB9XG4gICAgcmV0dXJuIGZlbmNlZEJsb2NrXG4gICAgICA/IGxpbmVcbiAgICAgIDogbGluZS5yZXBsYWNlKC9cXF1cXChhc3NldHNcXC8vZywgYF0oJHtsb2NhdGlvbn0vYXNzZXRzL2ApO1xuICB9KTtcbiAgcmV0dXJuIGxpbmVzLmpvaW4oJ1xcbicpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0U3ViRGlyLFxuICBnZXRMYW5ndWFnZSxcbiAgaXNTZXBhcmF0ZUNzcyxcbiAgbWluaWZ5Q3NzLFxuICBhdXRvUHJlZml4Q3NzLFxuICByZXBsYWNlQXNzZXRzTGluayxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "cssnano",
        "require",
        "autoprefixer",
        "postcss",
        "path",
        "escapeStringRegexp",
        "getSubDir",
        "file",
        "refDir",
        "subDir",
        "dirname",
        "relative",
        "replace",
        "includes",
        "getLanguage",
        "separator",
        "sep",
        "baseDir",
        "basename",
        "regexSubFolder",
        "RegExp",
        "match",
        "exec",
        "env",
        "translation",
        "enabled",
        "enabledLanguages",
        "map",
        "language",
        "tag",
        "indexOf",
        "isSeparateCss",
        "separateDirs",
        "i",
        "length",
        "minifyCss",
        "cssContent",
        "process",
        "preset",
        "zindex",
        "from",
        "undefined",
        "then",
        "result",
        "css",
        "autoPrefixCss",
        "replaceAssetsLink",
        "oldContent",
        "location",
        "fencedBlock",
        "lines",
        "split",
        "line",
        "trim",
        "startsWith",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst cssnano = require('cssnano');\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst path = require('path');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  const subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  const separator = escapeStringRegexp(path.sep);\n  const baseDir = escapeStringRegexp(path.basename(refDir));\n  const regexSubFolder = new RegExp(\n    `${baseDir}${separator}(.*?)${separator}.*`,\n  );\n  const match = regexSubFolder.exec(file);\n\n  // Avoid misinterpreting subdirectory as language\n  const env = require('./env.js');\n  if (match && env.translation.enabled) {\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .map(language => language.tag);\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n  for (let i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano\n    .process(cssContent, {\n      preset: 'default',\n      zindex: false,\n      from: undefined,\n    })\n    .then(result => result.css);\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer])\n    .process(cssContent, {\n      from: undefined,\n    })\n    .then(result => result.css);\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  let fencedBlock = false;\n  const lines = oldContent.split('\\n').map(line => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    return fencedBlock\n      ? line\n      : line.replace(/\\]\\(assets\\//g, `](${location}/assets/`);\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir,\n  getLanguage,\n  isSeparateCss,\n  minifyCss,\n  autoPrefixCss,\n  replaceAssetsLink,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/renderUtils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/renderUtils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/renderUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/renderUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "renderUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\n\n\nfunction renderToStaticMarkupWithDoctype() {\n  return \"<!DOCTYPE html>\".concat(renderToStaticMarkup.apply(void 0, arguments));\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype: renderToStaticMarkupWithDoctype\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlclV0aWxzLmpzIl0sIm5hbWVzIjpbInJlbmRlclRvU3RhdGljTWFya3VwIiwicmVxdWlyZSIsInJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxvQkFBb0IsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQVAsQ0FBNEJELG9CQUF6RDtBQUVBOzs7Ozs7O0FBS0EsU0FBU0UsK0JBQVQsR0FBa0Q7QUFDaEQsa0NBQXlCRixvQkFBb0IsTUFBcEIsbUJBQXpCO0FBQ0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmRixFQUFBQSwrQkFBK0IsRUFBL0JBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHJlbmRlclRvU3RhdGljTWFya3VwID0gcmVxdWlyZSgncmVhY3QtZG9tL3NlcnZlcicpLnJlbmRlclRvU3RhdGljTWFya3VwO1xuXG4vKipcbiAqIEN1c3RvbSBmdW5jdGlvbiB0aGF0IHdyYXBzIHJlbmRlclRvU3RhdGljTWFya3VwIHNvIHRoYXQgd2UgY2FuIGluamVjdFxuICogZG9jdHlwZSBiZWZvcmUgUmVhY3QgcmVuZGVycyB0aGUgY29udGVudHMuIEFsbCBpbnN0YW5jZSBvZiBmdWxsLXBhZ2VcbiAqIHJlbmRlcmluZyB3aXRoaW4gRG9jdXNhdXJ1cyBzaG91bGQgdXNlIHRoaXMgZnVuY3Rpb24gaW5zdGVhZC5cbiAqL1xuZnVuY3Rpb24gcmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSguLi5hcmdzKSB7XG4gIHJldHVybiBgPCFET0NUWVBFIGh0bWw+JHtyZW5kZXJUb1N0YXRpY01hcmt1cCguLi5hcmdzKX1gO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "renderUtils.js"
      ],
      "names": [
        "renderToStaticMarkup",
        "require",
        "renderToStaticMarkupWithDoctype",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,oBAAzD;AAEA;;;;;;;AAKA,SAASE,+BAAT,GAAkD;AAChD,kCAAyBF,oBAAoB,MAApB,mBAAzB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,+BAA+B,EAA/BA;AADe,CAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\nfunction renderToStaticMarkupWithDoctype(...args) {\n  return `<!DOCTYPE html>${renderToStaticMarkup(...args)}`;\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/config.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/config.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath) {\n  var deleteCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n\n  var config = {};\n\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n  /* Fill default value */\n\n\n  var defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs'\n  };\n  Object.keys(defaultConfig).forEach(function (field) {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZENvbmZpZyIsImNvbmZpZ1BhdGgiLCJkZWxldGVDYWNoZSIsImNhY2hlIiwiY29uZmlnIiwiZXhpc3RzU3luYyIsImRlZmF1bHRDb25maWciLCJjdXN0b21Eb2NzUGF0aCIsImRvY3NVcmwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsVUFBVCxDQUFvQkMsVUFBcEIsRUFBb0Q7QUFBQSxNQUFwQkMsV0FBb0IsdUVBQU4sSUFBTTs7QUFDbkUsTUFBSUEsV0FBSixFQUFpQjtBQUNmLFdBQU9MLE9BQU8sQ0FBQ00sS0FBUixDQUFjRixVQUFkLENBQVA7QUFDRDs7QUFDRCxNQUFJRyxNQUFNLEdBQUcsRUFBYjs7QUFDQSxNQUFJUixFQUFFLENBQUNTLFVBQUgsQ0FBY0osVUFBZCxDQUFKLEVBQStCO0FBQzdCRyxJQUFBQSxNQUFNLEdBQUdQLE9BQU8sQ0FBQ0ksVUFBRCxDQUFoQixDQUQ2QixDQUNDO0FBQy9CO0FBRUQ7OztBQUNBLE1BQU1LLGFBQWEsR0FBRztBQUNwQkMsSUFBQUEsY0FBYyxFQUFFLE1BREk7QUFFcEJDLElBQUFBLE9BQU8sRUFBRTtBQUZXLEdBQXRCO0FBSUFDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixhQUFaLEVBQTJCSyxPQUEzQixDQUFtQyxVQUFBQyxLQUFLLEVBQUk7QUFDMUMsUUFBSSxFQUFFQSxLQUFLLElBQUlSLE1BQVgsQ0FBSixFQUF3QjtBQUN0QkEsTUFBQUEsTUFBTSxDQUFDUSxLQUFELENBQU4sR0FBZ0JOLGFBQWEsQ0FBQ00sS0FBRCxDQUE3QjtBQUNEO0FBQ0YsR0FKRDtBQU1BLFNBQU9SLE1BQVA7QUFDRCxDQXJCRCIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGxvYWRDb25maWcoY29uZmlnUGF0aCwgZGVsZXRlQ2FjaGUgPSB0cnVlKSB7XG4gIGlmIChkZWxldGVDYWNoZSkge1xuICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW2NvbmZpZ1BhdGhdO1xuICB9XG4gIGxldCBjb25maWcgPSB7fTtcbiAgaWYgKGZzLmV4aXN0c1N5bmMoY29uZmlnUGF0aCkpIHtcbiAgICBjb25maWcgPSByZXF1aXJlKGNvbmZpZ1BhdGgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH1cblxuICAvKiBGaWxsIGRlZmF1bHQgdmFsdWUgKi9cbiAgY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgICBjdXN0b21Eb2NzUGF0aDogJ2RvY3MnLFxuICAgIGRvY3NVcmw6ICdkb2NzJyxcbiAgfTtcbiAgT2JqZWN0LmtleXMoZGVmYXVsdENvbmZpZykuZm9yRWFjaChmaWVsZCA9PiB7XG4gICAgaWYgKCEoZmllbGQgaW4gY29uZmlnKSkge1xuICAgICAgY29uZmlnW2ZpZWxkXSA9IGRlZmF1bHRDb25maWdbZmllbGRdO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "loadConfig",
        "configPath",
        "deleteCache",
        "cache",
        "config",
        "existsSync",
        "defaultConfig",
        "customDocsPath",
        "docsUrl",
        "Object",
        "keys",
        "forEach",
        "field"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAoD;AAAA,MAApBC,WAAoB,uEAAN,IAAM;;AACnE,MAAIA,WAAJ,EAAiB;AACf,WAAOL,OAAO,CAACM,KAAR,CAAcF,UAAd,CAAP;AACD;;AACD,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIR,EAAE,CAACS,UAAH,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BG,IAAAA,MAAM,GAAGP,OAAO,CAACI,UAAD,CAAhB,CAD6B,CACC;AAC/B;AAED;;;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,cAAc,EAAE,MADI;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAAtB;AAIAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,UAAAC,KAAK,EAAI;AAC1C,QAAI,EAAEA,KAAK,IAAIR,MAAX,CAAJ,EAAwB;AACtBA,MAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBN,aAAa,CAACM,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOR,MAAP;AACD,CArBD",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath, deleteCache = true) {\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n  let config = {};\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n\n  /* Fill default value */\n  const defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs',\n  };\n  Object.keys(defaultConfig).forEach(field => {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n\n  return config;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/versionFallback.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/versionFallback.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/versionFallback.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/versionFallback.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "versionFallback.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar glob = require('glob');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar utils = require('./utils.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\nvar ENABLE_TRANSLATION = fs.existsSync(\"\".concat(CWD, \"/languages.js\"));\nvar versions;\n\nif (fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n  versions = require(\"\".concat(CWD, \"/versions.json\"));\n} else {\n  versions = [];\n}\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar versionFolder = \"\".concat(CWD, \"/versioned_docs/\"); // available stores doc ids of documents that are available for\n// each version\n\nvar available = {}; // versionFiles is used to keep track of what file to use with a\n// given version/id of a document\n\nvar versionFiles = {};\nvar files = glob.sync(\"\".concat(versionFolder, \"**\"));\nfiles.forEach(function (file) {\n  var ext = path.extname(file);\n\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n\n  var res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  }\n\n  if (!metadata.id) {\n    console.error(\"No 'id' field found in \".concat(file, \".\"));\n    throw new Error(\"No 'id' field found in \".concat(file, \".\"));\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  } // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n\n\n  var version = metadata.id.substring(metadata.id.indexOf('version-') + 8, // version- is 8 characters\n  metadata.id.lastIndexOf(\"-\".concat(metadata.original_id))); // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n\n  var subDir = utils.getSubDir(file, path.join(versionFolder, \"version-\".concat(version)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n\n  versionFiles[version][metadata.original_id] = file;\n}); // returns the version to use for a document based on its id and\n// what the requested version is\n\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  } // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n\n\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && available[id].has(versions[i])) {\n      return versions[i];\n    }\n  }\n\n  return null;\n} // returns whether a given file has content that differ from the\n// document with the given id\n\n\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version;\n\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  if (!version) {\n    return true;\n  }\n\n  var latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return metadataUtils.extractMetadata(fs.readFileSync(latestFile, 'utf8')).rawContent.trim() !== metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).rawContent.trim();\n} // return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\n\n\nfunction processVersionMetadata(file, version, useVersion, language) {\n  var metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).metadata; // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n\n  var subDir = utils.getSubDir(file, path.join(CWD, 'versioned_docs', \"version-\".concat(useVersion)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n    metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(useVersion, \"-\").concat(subDir, \"/\"));\n  }\n\n  metadata.source = subDir ? \"version-\".concat(useVersion, \"/\").concat(subDir, \"/\").concat(path.basename(file)) : \"version-\".concat(useVersion, \"/\").concat(path.basename(file));\n  var latestVersion = versions[0];\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  var versionPart = \"\".concat(version !== latestVersion ? \"\".concat(version, \"/\") : '');\n\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = \"\".concat(docsPart).concat(versionPart).concat(metadata.original_id, \".html\");\n  } else {\n    metadata.permalink = \"\".concat(docsPart).concat(language, \"/\").concat(versionPart).concat(metadata.original_id, \".html\");\n  }\n\n  metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(version, \"-\"));\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n  return metadata;\n} // return all metadata of versioned documents\n\n\nfunction docData() {\n  var allIds = new Set();\n  Object.keys(versionFiles).forEach(function (version) {\n    Object.keys(versionFiles[version]).forEach(function (id) {\n      allIds.add(id);\n    });\n  });\n  var metadatas = [];\n  languages.filter(function (language) {\n    return language.enabled;\n  }).forEach(function (language) {\n    versions.forEach(function (version) {\n      allIds.forEach(function (id) {\n        var useVersion;\n\n        try {\n          useVersion = docVersion(id, version);\n        } catch (e) {\n          console.log(e);\n          process.exit(1);\n        }\n\n        if (!useVersion) {\n          return;\n        }\n\n        var file = versionFiles[useVersion][id];\n        metadatas.push(processVersionMetadata(file, version, useVersion, language.tag));\n      });\n    });\n  });\n  return metadatas;\n} // return the version of the sidebar to use given a requested version\n\n\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && fs.existsSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(versions[i], \"-sidebars.json\"))) {\n      return versions[i];\n    }\n  }\n\n  throw new Error(\"No sidebar file available to use for version \".concat(reqVersion, \". Verify that 'version-\").concat(reqVersion, \"-sidebars.json' exists.\"));\n} // return whether or not the current sidebars.json file differs from the\n// latest versioned one\n\n\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version = sidebarVersion(latest);\n  var latestSidebar = \"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\");\n\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n\n  var currentSidebar = \"\".concat(CWD, \"/sidebars.json\"); // if no current sidebar file, return false so no sidebar file gets copied\n\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  } // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n\n\n  return JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), '') !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')));\n} // return all versioned sidebar data\n\n\nfunction sidebarData() {\n  var allSidebars = {};\n\n  for (var i = 0; i < versions.length; i++) {\n    var version = sidebarVersion(versions[i]);\n    var sidebar = JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\"), 'utf8').replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), \"version-\".concat(versions[i], \"-\")));\n    Object.assign(allSidebars, sidebar);\n  }\n\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion: docVersion,\n  diffLatestDoc: diffLatestDoc,\n  processVersionMetadata: processVersionMetadata,\n  docData: docData,\n  sidebarVersion: sidebarVersion,\n  diffLatestSidebar: diffLatestSidebar,\n  sidebarData: sidebarData\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "versionFallback.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "glob",
        "require",
        "fs",
        "path",
        "metadataUtils",
        "env",
        "utils",
        "loadConfig",
        "siteConfig",
        "ENABLE_TRANSLATION",
        "existsSync",
        "versions",
        "languages",
        "enabled",
        "name",
        "tag",
        "versionFolder",
        "available",
        "versionFiles",
        "files",
        "sync",
        "forEach",
        "file",
        "ext",
        "extname",
        "res",
        "extractMetadata",
        "readFileSync",
        "metadata",
        "original_id",
        "console",
        "error",
        "Error",
        "id",
        "indexOf",
        "version",
        "substring",
        "lastIndexOf",
        "subDir",
        "getSubDir",
        "join",
        "Set",
        "add",
        "docVersion",
        "reqVersion",
        "requestedFound",
        "i",
        "length",
        "has",
        "diffLatestDoc",
        "latest",
        "e",
        "exit",
        "latestFile",
        "rawContent",
        "trim",
        "processVersionMetadata",
        "useVersion",
        "language",
        "replace",
        "source",
        "basename",
        "latestVersion",
        "docsPart",
        "docsUrl",
        "versionPart",
        "useEnglishUrl",
        "permalink",
        "localized_id",
        "translation",
        "docData",
        "allIds",
        "Object",
        "keys",
        "metadatas",
        "filter",
        "log",
        "push",
        "sidebarVersion",
        "diffLatestSidebar",
        "latestSidebar",
        "currentSidebar",
        "JSON",
        "stringify",
        "parse",
        "RegExp",
        "sidebarData",
        "allSidebars",
        "sidebar",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst utils = require('./utils.js');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst ENABLE_TRANSLATION = fs.existsSync(`${CWD}/languages.js`);\n\nlet versions;\nif (fs.existsSync(`${CWD}/versions.json`)) {\n  versions = require(`${CWD}/versions.json`);\n} else {\n  versions = [];\n}\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst versionFolder = `${CWD}/versioned_docs/`;\n\n// available stores doc ids of documents that are available for\n// each version\nconst available = {};\n// versionFiles is used to keep track of what file to use with a\n// given version/id of a document\nconst versionFiles = {};\nconst files = glob.sync(`${versionFolder}**`);\nfiles.forEach(file => {\n  const ext = path.extname(file);\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n  const res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n  if (!metadata.id) {\n    console.error(`No 'id' field found in ${file}.`);\n    throw new Error(`No 'id' field found in ${file}.`);\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n\n  // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n  const version = metadata.id.substring(\n    metadata.id.indexOf('version-') + 8, // version- is 8 characters\n    metadata.id.lastIndexOf(`-${metadata.original_id}`),\n  );\n\n  // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n  const subDir = utils.getSubDir(\n    file,\n    path.join(versionFolder, `version-${version}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n  versionFiles[version][metadata.original_id] = file;\n});\n\n// returns the version to use for a document based on its id and\n// what the requested version is\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  }\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (requestedFound && available[id].has(versions[i])) {\n      return versions[i];\n    }\n  }\n  return null;\n}\n\n// returns whether a given file has content that differ from the\n// document with the given id\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  const latest = versions[0];\n\n  let version;\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n  if (!version) {\n    return true;\n  }\n  const latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return (\n    metadataUtils\n      .extractMetadata(fs.readFileSync(latestFile, 'utf8'))\n      .rawContent.trim() !==\n    metadataUtils\n      .extractMetadata(fs.readFileSync(file, 'utf8'))\n      .rawContent.trim()\n  );\n}\n\n// return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\nfunction processVersionMetadata(file, version, useVersion, language) {\n  const metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'))\n    .metadata;\n\n  // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n  const subDir = utils.getSubDir(\n    file,\n    path.join(CWD, 'versioned_docs', `version-${useVersion}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n    metadata.id = metadata.id.replace(\n      `version-${useVersion}-`,\n      `version-${useVersion}-${subDir}/`,\n    );\n  }\n\n  metadata.source = subDir\n    ? `version-${useVersion}/${subDir}/${path.basename(file)}`\n    : `version-${useVersion}/${path.basename(file)}`;\n\n  const latestVersion = versions[0];\n\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  const versionPart = `${version !== latestVersion ? `${version}/` : ''}`;\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = `${docsPart}${versionPart}${metadata.original_id}.html`;\n  } else {\n    metadata.permalink = `${docsPart}${language}/${versionPart}${metadata.original_id}.html`;\n  }\n  metadata.id = metadata.id.replace(\n    `version-${useVersion}-`,\n    `version-${version}-`,\n  );\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n\n  return metadata;\n}\n\n// return all metadata of versioned documents\nfunction docData() {\n  const allIds = new Set();\n  Object.keys(versionFiles).forEach(version => {\n    Object.keys(versionFiles[version]).forEach(id => {\n      allIds.add(id);\n    });\n  });\n\n  const metadatas = [];\n\n  languages\n    .filter(language => language.enabled)\n    .forEach(language => {\n      versions.forEach(version => {\n        allIds.forEach(id => {\n          let useVersion;\n          try {\n            useVersion = docVersion(id, version);\n          } catch (e) {\n            console.log(e);\n            process.exit(1);\n          }\n          if (!useVersion) {\n            return;\n          }\n          const file = versionFiles[useVersion][id];\n\n          metadatas.push(\n            processVersionMetadata(file, version, useVersion, language.tag),\n          );\n        });\n      });\n    });\n\n  return metadatas;\n}\n\n// return the version of the sidebar to use given a requested version\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (\n      requestedFound &&\n      fs.existsSync(\n        `${CWD}/versioned_sidebars/version-${versions[i]}-sidebars.json`,\n      )\n    ) {\n      return versions[i];\n    }\n  }\n  throw new Error(\n    `No sidebar file available to use for version ${reqVersion}. Verify that 'version-${reqVersion}-sidebars.json' exists.`,\n  );\n}\n\n// return whether or not the current sidebars.json file differs from the\n// latest versioned one\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n  const latest = versions[0];\n\n  const version = sidebarVersion(latest);\n  const latestSidebar = `${CWD}/versioned_sidebars/version-${version}-sidebars.json`;\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n  const currentSidebar = `${CWD}/sidebars.json`;\n  // if no current sidebar file, return false so no sidebar file gets copied\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  }\n\n  // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n  return (\n    JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(\n      new RegExp(`version-${version}-`, 'g'),\n      '',\n    ) !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')))\n  );\n}\n\n// return all versioned sidebar data\nfunction sidebarData() {\n  const allSidebars = {};\n\n  for (let i = 0; i < versions.length; i++) {\n    const version = sidebarVersion(versions[i]);\n    const sidebar = JSON.parse(\n      fs\n        .readFileSync(\n          `${CWD}/versioned_sidebars/version-${version}-sidebars.json`,\n          'utf8',\n        )\n        .replace(\n          new RegExp(`version-${version}-`, 'g'),\n          `version-${versions[i]}-`,\n        ),\n    );\n    Object.assign(allSidebars, sidebar);\n  }\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion,\n  diffLatestDoc,\n  processVersionMetadata,\n  docData,\n  sidebarVersion,\n  diffLatestSidebar,\n  sidebarData,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/start.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/start.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/start.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/start.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "start.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar program = require('commander');\n\nvar openBrowser = require('react-dev-utils/openBrowser');\n\nvar portFinder = require('portfinder');\n\nvar liveReloadServer = require('./liveReloadServer.js');\n\nvar server = require('./server.js');\n\nvar CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  var promise = portFinder.getPortPromise({\n    port: 35729\n  }).then(function (port) {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  var initialServerPort = parseInt(program.port, 10) || process.env.PORT || 3000;\n  var host = program.host || 'localhost';\n  var promise = portFinder.getPortPromise({\n    port: initialServerPort\n  }).then(function (port) {\n    server(port, host);\n\n    var _require = require(\"\".concat(CWD, \"/siteConfig.js\")),\n        baseUrl = _require.baseUrl;\n\n    var serverAddress = \"http://\".concat(host, \":\").concat(port).concat(baseUrl);\n    console.log('Docusaurus server started on port %d', port);\n    openBrowser(serverAddress);\n  });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()[\"catch\"](function (ex) {\n      return console.warn(\"Failed to start live reload server: \".concat(ex));\n    }).then(function () {\n      return startServer();\n    });\n  }\n\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus: startDocusaurus,\n  startServer: startServer,\n  startLiveReloadServer: startLiveReloadServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXJ0LmpzIl0sIm5hbWVzIjpbInByb2dyYW0iLCJyZXF1aXJlIiwib3BlbkJyb3dzZXIiLCJwb3J0RmluZGVyIiwibGl2ZVJlbG9hZFNlcnZlciIsInNlcnZlciIsIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJzdGFydExpdmVSZWxvYWRTZXJ2ZXIiLCJwcm9taXNlIiwiZ2V0UG9ydFByb21pc2UiLCJwb3J0IiwidGhlbiIsInN0YXJ0Iiwic3RhcnRTZXJ2ZXIiLCJpbml0aWFsU2VydmVyUG9ydCIsInBhcnNlSW50IiwiZW52IiwiUE9SVCIsImhvc3QiLCJiYXNlVXJsIiwic2VydmVyQWRkcmVzcyIsImNvbnNvbGUiLCJsb2ciLCJzdGFydERvY3VzYXVydXMiLCJ3YXRjaCIsImV4Iiwid2FybiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsNkJBQUQsQ0FBM0I7O0FBQ0EsSUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFDQSxJQUFNRyxnQkFBZ0IsR0FBR0gsT0FBTyxDQUFDLHVCQUFELENBQWhDOztBQUNBLElBQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLGFBQUQsQ0FBdEI7O0FBRUEsSUFBTUssR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFFQSxTQUFTQyxxQkFBVCxHQUFpQztBQUMvQixNQUFNQyxPQUFPLEdBQUdQLFVBQVUsQ0FBQ1EsY0FBWCxDQUEwQjtBQUFDQyxJQUFBQSxJQUFJLEVBQUU7QUFBUCxHQUExQixFQUF5Q0MsSUFBekMsQ0FBOEMsVUFBQUQsSUFBSSxFQUFJO0FBQ3BFUixJQUFBQSxnQkFBZ0IsQ0FBQ1UsS0FBakIsQ0FBdUJGLElBQXZCO0FBQ0QsR0FGZSxDQUFoQjtBQUdBLFNBQU9GLE9BQVA7QUFDRDs7QUFFRCxTQUFTSyxXQUFULEdBQXVCO0FBQ3JCLE1BQU1DLGlCQUFpQixHQUNyQkMsUUFBUSxDQUFDakIsT0FBTyxDQUFDWSxJQUFULEVBQWUsRUFBZixDQUFSLElBQThCTCxPQUFPLENBQUNXLEdBQVIsQ0FBWUMsSUFBMUMsSUFBa0QsSUFEcEQ7QUFFQSxNQUFNQyxJQUFJLEdBQUdwQixPQUFPLENBQUNvQixJQUFSLElBQWdCLFdBQTdCO0FBQ0EsTUFBTVYsT0FBTyxHQUFHUCxVQUFVLENBQ3ZCUSxjQURhLENBQ0U7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFSTtBQUFQLEdBREYsRUFFYkgsSUFGYSxDQUVSLFVBQUFELElBQUksRUFBSTtBQUNaUCxJQUFBQSxNQUFNLENBQUNPLElBQUQsRUFBT1EsSUFBUCxDQUFOOztBQURZLG1CQUVNbkIsT0FBTyxXQUFJSyxHQUFKLG9CQUZiO0FBQUEsUUFFTGUsT0FGSyxZQUVMQSxPQUZLOztBQUdaLFFBQU1DLGFBQWEsb0JBQWFGLElBQWIsY0FBcUJSLElBQXJCLFNBQTRCUyxPQUE1QixDQUFuQjtBQUNBRSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBWixFQUFvRFosSUFBcEQ7QUFDQVYsSUFBQUEsV0FBVyxDQUFDb0IsYUFBRCxDQUFYO0FBQ0QsR0FSYSxDQUFoQjtBQVNBLFNBQU9aLE9BQVA7QUFDRDs7QUFFRCxTQUFTZSxlQUFULEdBQTJCO0FBQ3pCLE1BQUl6QixPQUFPLENBQUMwQixLQUFaLEVBQW1CO0FBQ2pCLFdBQU9qQixxQkFBcUIsV0FBckIsQ0FDRSxVQUFBa0IsRUFBRTtBQUFBLGFBQUlKLE9BQU8sQ0FBQ0ssSUFBUiwrQ0FBb0RELEVBQXBELEVBQUo7QUFBQSxLQURKLEVBRUpkLElBRkksQ0FFQztBQUFBLGFBQU1FLFdBQVcsRUFBakI7QUFBQSxLQUZELENBQVA7QUFHRDs7QUFDRCxTQUFPQSxXQUFXLEVBQWxCO0FBQ0Q7O0FBRURjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmTCxFQUFBQSxlQUFlLEVBQWZBLGVBRGU7QUFFZlYsRUFBQUEsV0FBVyxFQUFYQSxXQUZlO0FBR2ZOLEVBQUFBLHFCQUFxQixFQUFyQkE7QUFIZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuY29uc3Qgb3BlbkJyb3dzZXIgPSByZXF1aXJlKCdyZWFjdC1kZXYtdXRpbHMvb3BlbkJyb3dzZXInKTtcbmNvbnN0IHBvcnRGaW5kZXIgPSByZXF1aXJlKCdwb3J0ZmluZGVyJyk7XG5jb25zdCBsaXZlUmVsb2FkU2VydmVyID0gcmVxdWlyZSgnLi9saXZlUmVsb2FkU2VydmVyLmpzJyk7XG5jb25zdCBzZXJ2ZXIgPSByZXF1aXJlKCcuL3NlcnZlci5qcycpO1xuXG5jb25zdCBDV0QgPSBwcm9jZXNzLmN3ZCgpO1xuXG5mdW5jdGlvbiBzdGFydExpdmVSZWxvYWRTZXJ2ZXIoKSB7XG4gIGNvbnN0IHByb21pc2UgPSBwb3J0RmluZGVyLmdldFBvcnRQcm9taXNlKHtwb3J0OiAzNTcyOX0pLnRoZW4ocG9ydCA9PiB7XG4gICAgbGl2ZVJlbG9hZFNlcnZlci5zdGFydChwb3J0KTtcbiAgfSk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5mdW5jdGlvbiBzdGFydFNlcnZlcigpIHtcbiAgY29uc3QgaW5pdGlhbFNlcnZlclBvcnQgPVxuICAgIHBhcnNlSW50KHByb2dyYW0ucG9ydCwgMTApIHx8IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcbiAgY29uc3QgaG9zdCA9IHByb2dyYW0uaG9zdCB8fCAnbG9jYWxob3N0JztcbiAgY29uc3QgcHJvbWlzZSA9IHBvcnRGaW5kZXJcbiAgICAuZ2V0UG9ydFByb21pc2Uoe3BvcnQ6IGluaXRpYWxTZXJ2ZXJQb3J0fSlcbiAgICAudGhlbihwb3J0ID0+IHtcbiAgICAgIHNlcnZlcihwb3J0LCBob3N0KTtcbiAgICAgIGNvbnN0IHtiYXNlVXJsfSA9IHJlcXVpcmUoYCR7Q1dEfS9zaXRlQ29uZmlnLmpzYCk7XG4gICAgICBjb25zdCBzZXJ2ZXJBZGRyZXNzID0gYGh0dHA6Ly8ke2hvc3R9OiR7cG9ydH0ke2Jhc2VVcmx9YDtcbiAgICAgIGNvbnNvbGUubG9nKCdEb2N1c2F1cnVzIHNlcnZlciBzdGFydGVkIG9uIHBvcnQgJWQnLCBwb3J0KTtcbiAgICAgIG9wZW5Ccm93c2VyKHNlcnZlckFkZHJlc3MpO1xuICAgIH0pO1xuICByZXR1cm4gcHJvbWlzZTtcbn1cblxuZnVuY3Rpb24gc3RhcnREb2N1c2F1cnVzKCkge1xuICBpZiAocHJvZ3JhbS53YXRjaCkge1xuICAgIHJldHVybiBzdGFydExpdmVSZWxvYWRTZXJ2ZXIoKVxuICAgICAgLmNhdGNoKGV4ID0+IGNvbnNvbGUud2FybihgRmFpbGVkIHRvIHN0YXJ0IGxpdmUgcmVsb2FkIHNlcnZlcjogJHtleH1gKSlcbiAgICAgIC50aGVuKCgpID0+IHN0YXJ0U2VydmVyKCkpO1xuICB9XG4gIHJldHVybiBzdGFydFNlcnZlcigpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3RhcnREb2N1c2F1cnVzLFxuICBzdGFydFNlcnZlcixcbiAgc3RhcnRMaXZlUmVsb2FkU2VydmVyLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "start.js"
      ],
      "names": [
        "program",
        "require",
        "openBrowser",
        "portFinder",
        "liveReloadServer",
        "server",
        "CWD",
        "process",
        "cwd",
        "startLiveReloadServer",
        "promise",
        "getPortPromise",
        "port",
        "then",
        "start",
        "startServer",
        "initialServerPort",
        "parseInt",
        "env",
        "PORT",
        "host",
        "baseUrl",
        "serverAddress",
        "console",
        "log",
        "startDocusaurus",
        "watch",
        "ex",
        "warn",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,uBAAD,CAAhC;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAAtB;;AAEA,IAAMK,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,SAASC,qBAAT,GAAiC;AAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACQ,cAAX,CAA0B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA1B,EAAyCC,IAAzC,CAA8C,UAAAD,IAAI,EAAI;AACpER,IAAAA,gBAAgB,CAACU,KAAjB,CAAuBF,IAAvB;AACD,GAFe,CAAhB;AAGA,SAAOF,OAAP;AACD;;AAED,SAASK,WAAT,GAAuB;AACrB,MAAMC,iBAAiB,GACrBC,QAAQ,CAACjB,OAAO,CAACY,IAAT,EAAe,EAAf,CAAR,IAA8BL,OAAO,CAACW,GAAR,CAAYC,IAA1C,IAAkD,IADpD;AAEA,MAAMC,IAAI,GAAGpB,OAAO,CAACoB,IAAR,IAAgB,WAA7B;AACA,MAAMV,OAAO,GAAGP,UAAU,CACvBQ,cADa,CACE;AAACC,IAAAA,IAAI,EAAEI;AAAP,GADF,EAEbH,IAFa,CAER,UAAAD,IAAI,EAAI;AACZP,IAAAA,MAAM,CAACO,IAAD,EAAOQ,IAAP,CAAN;;AADY,mBAEMnB,OAAO,WAAIK,GAAJ,oBAFb;AAAA,QAELe,OAFK,YAELA,OAFK;;AAGZ,QAAMC,aAAa,oBAAaF,IAAb,cAAqBR,IAArB,SAA4BS,OAA5B,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDZ,IAApD;AACAV,IAAAA,WAAW,CAACoB,aAAD,CAAX;AACD,GARa,CAAhB;AASA,SAAOZ,OAAP;AACD;;AAED,SAASe,eAAT,GAA2B;AACzB,MAAIzB,OAAO,CAAC0B,KAAZ,EAAmB;AACjB,WAAOjB,qBAAqB,WAArB,CACE,UAAAkB,EAAE;AAAA,aAAIJ,OAAO,CAACK,IAAR,+CAAoDD,EAApD,EAAJ;AAAA,KADJ,EAEJd,IAFI,CAEC;AAAA,aAAME,WAAW,EAAjB;AAAA,KAFD,CAAP;AAGD;;AACD,SAAOA,WAAW,EAAlB;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,eAAe,EAAfA,eADe;AAEfV,EAAAA,WAAW,EAAXA,WAFe;AAGfN,EAAAA,qBAAqB,EAArBA;AAHe,CAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst program = require('commander');\nconst openBrowser = require('react-dev-utils/openBrowser');\nconst portFinder = require('portfinder');\nconst liveReloadServer = require('./liveReloadServer.js');\nconst server = require('./server.js');\n\nconst CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  const promise = portFinder.getPortPromise({port: 35729}).then(port => {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  const initialServerPort =\n    parseInt(program.port, 10) || process.env.PORT || 3000;\n  const host = program.host || 'localhost';\n  const promise = portFinder\n    .getPortPromise({port: initialServerPort})\n    .then(port => {\n      server(port, host);\n      const {baseUrl} = require(`${CWD}/siteConfig.js`);\n      const serverAddress = `http://${host}:${port}${baseUrl}`;\n      console.log('Docusaurus server started on port %d', port);\n      openBrowser(serverAddress);\n    });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()\n      .catch(ex => console.warn(`Failed to start live reload server: ${ex}`))\n      .then(() => startServer());\n  }\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus,\n  startServer,\n  startLiveReloadServer,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/liveReloadServer.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/liveReloadServer.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "liveReloadServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar gaze = require('gaze');\n\nvar tinylr = require('tiny-lr');\n\nvar program = require('commander');\n\nvar readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  var server = tinylr();\n  server.listen(port, function () {\n    console.log('LiveReload server started on port %d', port);\n  });\n  gaze([\"../\".concat(readMetadata.getDocsPath(), \"/**/*\"), '**/*', '!node_modules/**/*'], function () {\n    this.on('all', function () {\n      server.notifyClients(['/']);\n    });\n  });\n}\n\nvar getReloadScriptUrl = function getReloadScriptUrl() {\n  var port = process.env.LIVERELOAD_PORT;\n  var host = program.host || 'localhost';\n  return \"http://\".concat(host, \":\").concat(port, \"/livereload.js\");\n};\n\nmodule.exports = {\n  start: start,\n  getReloadScriptUrl: getReloadScriptUrl\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVSZWxvYWRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZ2F6ZSIsInJlcXVpcmUiLCJ0aW55bHIiLCJwcm9ncmFtIiwicmVhZE1ldGFkYXRhIiwic3RhcnQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTElWRVJFTE9BRF9QT1JUIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImdldERvY3NQYXRoIiwib24iLCJub3RpZnlDbGllbnRzIiwiZ2V0UmVsb2FkU2NyaXB0VXJsIiwiaG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQU1HLFlBQVksR0FBR0gsT0FBTyxDQUFDLG1CQUFELENBQTVCOztBQUVBLFNBQVNJLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNuQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosR0FBdUIsYUFBdkI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGVBQVosR0FBOEJKLElBQTlCO0FBQ0EsTUFBTUssTUFBTSxHQUFHVCxNQUFNLEVBQXJCO0FBQ0FTLEVBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjTixJQUFkLEVBQW9CLFlBQU07QUFDeEJPLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLEVBQW9EUixJQUFwRDtBQUNELEdBRkQ7QUFJQU4sRUFBQUEsSUFBSSxDQUNGLGNBQU9JLFlBQVksQ0FBQ1csV0FBYixFQUFQLFlBQTBDLE1BQTFDLEVBQWtELG9CQUFsRCxDQURFLEVBRUYsWUFBVztBQUNULFNBQUtDLEVBQUwsQ0FBUSxLQUFSLEVBQWUsWUFBTTtBQUNuQkwsTUFBQUEsTUFBTSxDQUFDTSxhQUFQLENBQXFCLENBQUMsR0FBRCxDQUFyQjtBQUNELEtBRkQ7QUFHRCxHQU5DLENBQUo7QUFRRDs7QUFDRCxJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLEdBQU07QUFDL0IsTUFBTVosSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsZUFBekI7QUFDQSxNQUFNUyxJQUFJLEdBQUdoQixPQUFPLENBQUNnQixJQUFSLElBQWdCLFdBQTdCO0FBRUEsMEJBQWlCQSxJQUFqQixjQUF5QmIsSUFBekI7QUFDRCxDQUxEOztBQU9BYyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmhCLEVBQUFBLEtBQUssRUFBTEEsS0FEZTtBQUVmYSxFQUFBQSxrQkFBa0IsRUFBbEJBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IGdhemUgPSByZXF1aXJlKCdnYXplJyk7XG5jb25zdCB0aW55bHIgPSByZXF1aXJlKCd0aW55LWxyJyk7XG5jb25zdCBwcm9ncmFtID0gcmVxdWlyZSgnY29tbWFuZGVyJyk7XG5jb25zdCByZWFkTWV0YWRhdGEgPSByZXF1aXJlKCcuL3JlYWRNZXRhZGF0YS5qcycpO1xuXG5mdW5jdGlvbiBzdGFydChwb3J0KSB7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ2RldmVsb3BtZW50JztcbiAgcHJvY2Vzcy5lbnYuTElWRVJFTE9BRF9QT1JUID0gcG9ydDtcbiAgY29uc3Qgc2VydmVyID0gdGlueWxyKCk7XG4gIHNlcnZlci5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdMaXZlUmVsb2FkIHNlcnZlciBzdGFydGVkIG9uIHBvcnQgJWQnLCBwb3J0KTtcbiAgfSk7XG5cbiAgZ2F6ZShcbiAgICBbYC4uLyR7cmVhZE1ldGFkYXRhLmdldERvY3NQYXRoKCl9LyoqLypgLCAnKiovKicsICchbm9kZV9tb2R1bGVzLyoqLyonXSxcbiAgICBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMub24oJ2FsbCcsICgpID0+IHtcbiAgICAgICAgc2VydmVyLm5vdGlmeUNsaWVudHMoWycvJ10pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgKTtcbn1cbmNvbnN0IGdldFJlbG9hZFNjcmlwdFVybCA9ICgpID0+IHtcbiAgY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LkxJVkVSRUxPQURfUE9SVDtcbiAgY29uc3QgaG9zdCA9IHByb2dyYW0uaG9zdCB8fCAnbG9jYWxob3N0JztcblxuICByZXR1cm4gYGh0dHA6Ly8ke2hvc3R9OiR7cG9ydH0vbGl2ZXJlbG9hZC5qc2A7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3RhcnQsXG4gIGdldFJlbG9hZFNjcmlwdFVybCxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "liveReloadServer.js"
      ],
      "names": [
        "gaze",
        "require",
        "tinylr",
        "program",
        "readMetadata",
        "start",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "LIVERELOAD_PORT",
        "server",
        "listen",
        "console",
        "log",
        "getDocsPath",
        "on",
        "notifyClients",
        "getReloadScriptUrl",
        "host",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASI,KAAT,CAAeC,IAAf,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ,GAA8BJ,IAA9B;AACA,MAAMK,MAAM,GAAGT,MAAM,EAArB;AACAS,EAAAA,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB,YAAM;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,IAApD;AACD,GAFD;AAIAN,EAAAA,IAAI,CACF,cAAOI,YAAY,CAACW,WAAb,EAAP,YAA0C,MAA1C,EAAkD,oBAAlD,CADE,EAEF,YAAW;AACT,SAAKC,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBL,MAAAA,MAAM,CAACM,aAAP,CAAqB,CAAC,GAAD,CAArB;AACD,KAFD;AAGD,GANC,CAAJ;AAQD;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMZ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYE,eAAzB;AACA,MAAMS,IAAI,GAAGhB,OAAO,CAACgB,IAAR,IAAgB,WAA7B;AAEA,0BAAiBA,IAAjB,cAAyBb,IAAzB;AACD,CALD;;AAOAc,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAALA,KADe;AAEfa,EAAAA,kBAAkB,EAAlBA;AAFe,CAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst gaze = require('gaze');\nconst tinylr = require('tiny-lr');\nconst program = require('commander');\nconst readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  const server = tinylr();\n  server.listen(port, () => {\n    console.log('LiveReload server started on port %d', port);\n  });\n\n  gaze(\n    [`../${readMetadata.getDocsPath()}/**/*`, '**/*', '!node_modules/**/*'],\n    function() {\n      this.on('all', () => {\n        server.notifyClients(['/']);\n      });\n    },\n  );\n}\nconst getReloadScriptUrl = () => {\n  const port = process.env.LIVERELOAD_PORT;\n  const host = program.host || 'localhost';\n\n  return `http://${host}:${port}/livereload.js`;\n};\n\nmodule.exports = {\n  start,\n  getReloadScriptUrl,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/server.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/server.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\nfunction execute(port, host) {\n  var extractTranslations = require('../write-translations');\n\n  var metadataUtils = require('./metadataUtils');\n\n  var blog = require('./blog');\n\n  var docs = require('./docs');\n\n  var env = require('./env.js');\n\n  var express = require('express');\n\n  var React = require('react');\n\n  var request = require('request');\n\n  var fs = require('fs-extra');\n\n  var path = require('path');\n\n  var _require = require('./utils'),\n      isSeparateCss = _require.isSeparateCss;\n\n  var mkdirp = require('mkdirp');\n\n  var glob = require('glob');\n\n  var chalk = require('chalk');\n\n  var translate = require('./translate');\n\n  var _require2 = require('./renderUtils'),\n      renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\n  var feed = require('./feed');\n\n  var sitemap = require('./sitemap');\n\n  var routing = require('./routing');\n\n  var loadConfig = require('./config');\n\n  var CWD = process.cwd();\n  var join = path.join;\n  var sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(function (cacheKey) {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  } // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n\n\n  function removeModuleAndChildrenFromCache(moduleName) {\n    var mod = require.resolve(moduleName);\n\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(function (child) {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  var readMetadata = require('./readMetadata.js');\n\n  var Metadata;\n  var MetadataBlog;\n  var siteConfig;\n\n  function reloadSiteConfig() {\n    var siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    var oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, function (error, response, body) {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n  var app = express();\n  app.get(routing.docs(siteConfig), function (req, res, next) {\n    var url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    var metakey = Object.keys(Metadata).find(function (id) {\n      return Metadata[id].permalink === url;\n    });\n    var metadata = Metadata[metakey];\n    var file = docs.getFile(metadata);\n\n    if (!file) {\n      next();\n      return;\n    }\n\n    var _metadataUtils$extrac = metadataUtils.extractMetadata(file),\n        rawContent = _metadataUtils$extrac.rawContent,\n        rawMetadata = _metadataUtils$extrac.metadata; // if any of the followings is changed, reload the metadata\n\n\n    var reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n\n    if (reloadTriggers.some(function (key) {\n      return metadata[key] !== rawMetadata[key];\n    })) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    var mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n  app.get(routing.sitemap(siteConfig), function (req, res) {\n    sitemap(function (err, xml) {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n  app.get(routing.feed(siteConfig), function (req, res, next) {\n    res.set('Content-Type', 'application/rss+xml');\n    var file = req.path.toString().split('blog/')[1].toLowerCase();\n\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n\n    next();\n  });\n  app.get(routing.blog(siteConfig), function (req, res, next) {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    var blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    var urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[\"\".concat(urlPath.replace(/\\/$/, ''), \"/index.html\")]);\n    } else {\n      var file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      var blogPost = blog.getPostMarkup(file, siteConfig);\n\n      if (!blogPost) {\n        next();\n        return;\n      }\n\n      res.send(blogPost);\n    }\n  });\n  app.get(routing.page(siteConfig), function (req, res, next) {\n    reloadSiteConfig(); // Look for user-provided HTML file first.\n\n    var htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n\n    if (fs.existsSync(htmlFile) || fs.existsSync(htmlFile = htmlFile.replace(path.basename(htmlFile), join('en', path.basename(htmlFile))))) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n        var Site = require(join('..', 'core', 'Site.js'));\n\n        var str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n          language: \"en\",\n          config: siteConfig,\n          metadata: {\n            id: path.basename(htmlFile, '.html')\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: fs.readFileSync(htmlFile, {\n              encoding: 'utf8'\n            })\n          }\n        })));\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {\n          encoding: 'utf8'\n        }));\n      }\n\n      next();\n      return;\n    } // look for user provided react file either in specified path or in path for english files\n\n\n    var file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    var userFile = join(CWD, 'pages', file);\n    var language = env.translation.enabled ? 'en' : '';\n    var regexLang = /(.*)\\/.*\\.html$/;\n    var match = regexLang.exec(req.path);\n    var parts = match[1].split('/');\n    var enabledLangTags = env.translation.enabledLanguages().map(function (lang) {\n      return lang.tag;\n    });\n\n    for (var i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    var englishFile = join(CWD, 'pages', file);\n\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, \"\".concat(sep, \"en\").concat(sep));\n    } // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n\n\n    if (fs.existsSync(userFile) || fs.existsSync(userFile = userFile.replace(path.basename(userFile), \"en\".concat(sep).concat(path.basename(userFile)))) || fs.existsSync(userFile = englishFile)) {\n      // copy into docusaurus so require paths work\n      var userFileParts = userFile.split(join(CWD, \"pages\".concat(sep)));\n      var tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(path.basename(file), \"temp\".concat(path.basename(file)));\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile); // render into a string\n\n      removeModuleAndChildrenFromCache(tempFile);\n\n      var ReactComp = require(tempFile);\n\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n      var _Site = require(join('..', 'core', 'Site.js'));\n\n      translate.setLanguage(language);\n\n      var _str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(_Site, {\n        language: language,\n        config: siteConfig,\n        title: ReactComp.title,\n        description: ReactComp.description,\n        metadata: {\n          id: path.basename(userFile, '.js')\n        }\n      }, /*#__PURE__*/React.createElement(ReactComp, {\n        config: siteConfig,\n        language: language\n      })));\n\n      fs.removeSync(tempFile);\n      res.send(_str);\n    } else {\n      next();\n    }\n  });\n  app.get(\"\".concat(siteConfig.baseUrl, \"css/main.css\"), function (req, res) {\n    var mainCssPath = join(__dirname, '..', 'static', req.path.toString().replace(siteConfig.baseUrl, '/'));\n    var cssContent = fs.readFileSync(mainCssPath, {\n      encoding: 'utf8'\n    });\n    var files = glob.sync(join(CWD, 'static', '**', '*.css'));\n    files.forEach(function (file) {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n\n      cssContent = \"\".concat(cssContent, \"\\n\").concat(fs.readFileSync(file, {\n        encoding: 'utf8'\n      }));\n    });\n\n    if (!siteConfig.colors || !siteConfig.colors.primaryColor || !siteConfig.colors.secondaryColor) {\n      console.error(\"\".concat(chalk.yellow('Missing color configuration.'), \" Make sure siteConfig.colors includes primaryColor and secondaryColor fields.\"));\n    }\n\n    Object.keys(siteConfig.colors).forEach(function (key) {\n      var color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(function (key) {\n        var fontString = siteConfig.fonts[key].map(function (font) {\n          return \"\\\"\".concat(font, \"\\\"\");\n        }).join(', ');\n        cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), fontString);\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  }); // serve static assets from these locations\n\n  app.use(\"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '', \"assets\"), express[\"static\"](join(CWD, '..', readMetadata.getDocsPath(), 'assets')));\n  app.use(\"\".concat(siteConfig.baseUrl, \"blog/assets\"), express[\"static\"](join(CWD, 'blog', 'assets')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express[\"static\"](join(__dirname, '..', 'static'))); // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n\n  app.get(routing.noExtension(), function (req, res, next) {\n    var slash = req.path.toString().endsWith('/') ? '' : '/';\n    var requestUrl = \"http://\".concat(host, \":\").concat(port).concat(req.path);\n    requestFile(\"\".concat(requestUrl + slash, \"index.html\"), res, function () {\n      requestFile(slash === '/' ? \"\".concat(requestUrl, \".html\") : requestUrl.replace(/\\/$/, '.html'), res, next);\n    });\n  }); // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n\n  app.get(routing.dotfiles(), function (req, res, next) {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n\n    requestFile(\"http://\".concat(host, \":\").concat(port).concat(req.path, \".html\"), res, next);\n  });\n  app.listen(port);\n}\n\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "execute",
        "port",
        "host",
        "extractTranslations",
        "require",
        "metadataUtils",
        "blog",
        "docs",
        "env",
        "express",
        "React",
        "request",
        "fs",
        "path",
        "isSeparateCss",
        "mkdirp",
        "glob",
        "chalk",
        "translate",
        "renderToStaticMarkupWithDoctype",
        "feed",
        "sitemap",
        "routing",
        "loadConfig",
        "CWD",
        "process",
        "cwd",
        "join",
        "sep",
        "removeModulePathFromCache",
        "moduleName",
        "Object",
        "keys",
        "module",
        "constructor",
        "_pathCache",
        "forEach",
        "cacheKey",
        "indexOf",
        "removeModuleAndChildrenFromCache",
        "mod",
        "resolve",
        "cache",
        "children",
        "child",
        "id",
        "readMetadata",
        "Metadata",
        "MetadataBlog",
        "siteConfig",
        "reloadSiteConfig",
        "siteConfigPath",
        "oldBaseUrl",
        "baseUrl",
        "console",
        "log",
        "exit",
        "reloadMetadata",
        "generateMetadataDocs",
        "reloadMetadataBlog",
        "existsSync",
        "__dirname",
        "removeSync",
        "generateMetadataBlog",
        "reloadTranslations",
        "requestFile",
        "url",
        "res",
        "notFoundCallback",
        "get",
        "error",
        "response",
        "body",
        "statusCode",
        "status",
        "send",
        "app",
        "req",
        "next",
        "decodeURI",
        "toString",
        "replace",
        "metakey",
        "find",
        "permalink",
        "metadata",
        "file",
        "getFile",
        "extractMetadata",
        "rawContent",
        "rawMetadata",
        "reloadTriggers",
        "some",
        "key",
        "mdToHtml",
        "getMarkup",
        "err",
        "xml",
        "set",
        "split",
        "toLowerCase",
        "blogPages",
        "getPagesMarkup",
        "length",
        "urlPath",
        "endsWith",
        "match",
        "urlToSource",
        "blogPost",
        "getPostMarkup",
        "page",
        "htmlFile",
        "basename",
        "wrapPagesHTML",
        "Site",
        "str",
        "__html",
        "readFileSync",
        "encoding",
        "userFile",
        "language",
        "translation",
        "enabled",
        "regexLang",
        "exec",
        "parts",
        "enabledLangTags",
        "enabledLanguages",
        "map",
        "lang",
        "tag",
        "i",
        "englishFile",
        "userFileParts",
        "tempFile",
        "sync",
        "dirname",
        "copySync",
        "ReactComp",
        "setLanguage",
        "title",
        "description",
        "mainCssPath",
        "cssContent",
        "files",
        "separateCss",
        "colors",
        "primaryColor",
        "secondaryColor",
        "yellow",
        "color",
        "RegExp",
        "fonts",
        "fontString",
        "font",
        "header",
        "use",
        "docsUrl",
        "getDocsPath",
        "noExtension",
        "slash",
        "requestUrl",
        "dotfiles",
        "cleanUrl",
        "listen",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\n\nfunction execute(port, host) {\n  const extractTranslations = require('../write-translations');\n  const metadataUtils = require('./metadataUtils');\n  const blog = require('./blog');\n  const docs = require('./docs');\n  const env = require('./env.js');\n  const express = require('express');\n  const React = require('react');\n  const request = require('request');\n  const fs = require('fs-extra');\n  const path = require('path');\n  const {isSeparateCss} = require('./utils');\n  const mkdirp = require('mkdirp');\n  const glob = require('glob');\n  const chalk = require('chalk');\n  const translate = require('./translate');\n  const {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n  const feed = require('./feed');\n  const sitemap = require('./sitemap');\n  const routing = require('./routing');\n  const loadConfig = require('./config');\n  const CWD = process.cwd();\n  const join = path.join;\n  const sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(cacheKey => {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  }\n\n  // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n  function removeModuleAndChildrenFromCache(moduleName) {\n    let mod = require.resolve(moduleName);\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(child => {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  const readMetadata = require('./readMetadata.js');\n  let Metadata;\n  let MetadataBlog;\n  let siteConfig;\n\n  function reloadSiteConfig() {\n    const siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    const oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, (error, response, body) => {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n\n  const app = express();\n\n  app.get(routing.docs(siteConfig), (req, res, next) => {\n    const url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    const metakey = Object.keys(Metadata).find(\n      id => Metadata[id].permalink === url,\n    );\n\n    let metadata = Metadata[metakey];\n\n    const file = docs.getFile(metadata);\n    if (!file) {\n      next();\n      return;\n    }\n    const {rawContent, metadata: rawMetadata} = metadataUtils.extractMetadata(\n      file,\n    );\n\n    // if any of the followings is changed, reload the metadata\n    const reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n    if (reloadTriggers.some(key => metadata[key] !== rawMetadata[key])) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    const mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n\n  app.get(routing.sitemap(siteConfig), (req, res) => {\n    sitemap((err, xml) => {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n\n  app.get(routing.feed(siteConfig), (req, res, next) => {\n    res.set('Content-Type', 'application/rss+xml');\n    const file = req.path\n      .toString()\n      .split('blog/')[1]\n      .toLowerCase();\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n    next();\n  });\n\n  app.get(routing.blog(siteConfig), (req, res, next) => {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    const blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    const urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[`${urlPath.replace(/\\/$/, '')}/index.html`]);\n    } else {\n      const file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      const blogPost = blog.getPostMarkup(file, siteConfig);\n      if (!blogPost) {\n        next();\n        return;\n      }\n      res.send(blogPost);\n    }\n  });\n\n  app.get(routing.page(siteConfig), (req, res, next) => {\n    reloadSiteConfig();\n    // Look for user-provided HTML file first.\n    let htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n    if (\n      fs.existsSync(htmlFile) ||\n      fs.existsSync(\n        (htmlFile = htmlFile.replace(\n          path.basename(htmlFile),\n          join('en', path.basename(htmlFile)),\n        )),\n      )\n    ) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n        const Site = require(join('..', 'core', 'Site.js'));\n        const str = renderToStaticMarkupWithDoctype(\n          <Site\n            language=\"en\"\n            config={siteConfig}\n            metadata={{id: path.basename(htmlFile, '.html')}}>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: fs.readFileSync(htmlFile, {encoding: 'utf8'}),\n              }}\n            />\n          </Site>,\n        );\n\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {encoding: 'utf8'}));\n      }\n      next();\n      return;\n    }\n\n    // look for user provided react file either in specified path or in path for english files\n    let file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    let userFile = join(CWD, 'pages', file);\n\n    let language = env.translation.enabled ? 'en' : '';\n    const regexLang = /(.*)\\/.*\\.html$/;\n    const match = regexLang.exec(req.path);\n    const parts = match[1].split('/');\n    const enabledLangTags = env.translation\n      .enabledLanguages()\n      .map(lang => lang.tag);\n\n    for (let i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    let englishFile = join(CWD, 'pages', file);\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, `${sep}en${sep}`);\n    }\n\n    // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n    if (\n      fs.existsSync(userFile) ||\n      fs.existsSync(\n        (userFile = userFile.replace(\n          path.basename(userFile),\n          `en${sep}${path.basename(userFile)}`,\n        )),\n      ) ||\n      fs.existsSync((userFile = englishFile))\n    ) {\n      // copy into docusaurus so require paths work\n      const userFileParts = userFile.split(join(CWD, `pages${sep}`));\n      let tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(\n        path.basename(file),\n        `temp${path.basename(file)}`,\n      );\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile);\n\n      // render into a string\n      removeModuleAndChildrenFromCache(tempFile);\n      const ReactComp = require(tempFile);\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n      const Site = require(join('..', 'core', 'Site.js'));\n      translate.setLanguage(language);\n      const str = renderToStaticMarkupWithDoctype(\n        <Site\n          language={language}\n          config={siteConfig}\n          title={ReactComp.title}\n          description={ReactComp.description}\n          metadata={{id: path.basename(userFile, '.js')}}>\n          <ReactComp config={siteConfig} language={language} />\n        </Site>,\n      );\n\n      fs.removeSync(tempFile);\n\n      res.send(str);\n    } else {\n      next();\n    }\n  });\n\n  app.get(`${siteConfig.baseUrl}css/main.css`, (req, res) => {\n    const mainCssPath = join(\n      __dirname,\n      '..',\n      'static',\n      req.path.toString().replace(siteConfig.baseUrl, '/'),\n    );\n    let cssContent = fs.readFileSync(mainCssPath, {encoding: 'utf8'});\n\n    const files = glob.sync(join(CWD, 'static', '**', '*.css'));\n\n    files.forEach(file => {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n      cssContent = `${cssContent}\\n${fs.readFileSync(file, {\n        encoding: 'utf8',\n      })}`;\n    });\n\n    if (\n      !siteConfig.colors ||\n      !siteConfig.colors.primaryColor ||\n      !siteConfig.colors.secondaryColor\n    ) {\n      console.error(\n        `${chalk.yellow(\n          'Missing color configuration.',\n        )} Make sure siteConfig.colors includes primaryColor and secondaryColor fields.`,\n      );\n    }\n\n    Object.keys(siteConfig.colors).forEach(key => {\n      const color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(`\\\\$${key}`, 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(key => {\n        const fontString = siteConfig.fonts[key]\n          .map(font => `\"${font}\"`)\n          .join(', ');\n        cssContent = cssContent.replace(\n          new RegExp(`\\\\$${key}`, 'g'),\n          fontString,\n        );\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  });\n\n  // serve static assets from these locations\n  app.use(\n    `${siteConfig.baseUrl}${\n      siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''\n    }assets`,\n    express.static(join(CWD, '..', readMetadata.getDocsPath(), 'assets')),\n  );\n  app.use(\n    `${siteConfig.baseUrl}blog/assets`,\n    express.static(join(CWD, 'blog', 'assets')),\n  );\n  app.use(siteConfig.baseUrl, express.static(join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express.static(join(__dirname, '..', 'static')));\n\n  // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n  app.get(routing.noExtension(), (req, res, next) => {\n    const slash = req.path.toString().endsWith('/') ? '' : '/';\n    const requestUrl = `http://${host}:${port}${req.path}`;\n    requestFile(`${requestUrl + slash}index.html`, res, () => {\n      requestFile(\n        slash === '/'\n          ? `${requestUrl}.html`\n          : requestUrl.replace(/\\/$/, '.html'),\n        res,\n        next,\n      );\n    });\n  });\n\n  // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n  app.get(routing.dotfiles(), (req, res, next) => {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n    requestFile(`http://${host}:${port}${req.path}.html`, res, next);\n  });\n\n  app.listen(port);\n}\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/write-translations.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/write-translations.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/write-translations.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/write-translations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/",
        "sourceFileName": "write-translations.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\"use strict\";\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, \"\".concat(process.cwd(), \"/core\")],\n  plugins: [require('./server/translate-plugin.js'), require('@babel/plugin-proposal-class-properties')[\"default\"], require('@babel/plugin-proposal-object-rest-spread')[\"default\"]],\n  presets: [require('@babel/preset-react')[\"default\"], require('@babel/preset-env')[\"default\"]]\n});\n\nvar traverse = require('@babel/traverse')[\"default\"];\n\nvar babylon = require('babylon');\n\nvar fs = require('fs-extra');\n\nvar glob = require('glob');\n\nvar mkdirp = require('mkdirp');\n\nvar nodePath = require('path');\n\nvar _ = require('lodash');\n\nvar readMetadata = require('./server/readMetadata.js');\n\nvar CWD = process.cwd();\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar sidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n\nvar customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {}\n  },\n  'pages-strings': {}\n};\n\nif (fs.existsSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"))) {\n  customTranslations = _.merge({}, JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"), 'utf8')), customTranslations);\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  var translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {}\n    },\n    'pages-strings': {}\n  }; // look through markdown headers of docs for titles and categories to translate\n\n  var docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  var versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  var translateDoc = function translateDoc(file, refDir) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.md' || extension === '.markdown') {\n      var res;\n\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n\n      if (!res) {\n        return;\n      }\n\n      var metadata = res.metadata;\n      var id = metadata.localized_id;\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label = metadata.sidebar_label;\n      }\n    }\n  };\n\n  glob.sync(\"\".concat(docsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, docsDir);\n  });\n  glob.sync(\"\".concat(versionedDocsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, versionedDocsDir);\n  }); // look through header links for text to translate\n\n  siteConfig.headerLinks.forEach(function (link) {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  }); // find sidebar category titles to translate\n\n  Object.keys(sidebars).forEach(function (sb) {\n    var categories = sidebars[sb];\n    Object.keys(categories).forEach(function (category) {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n  glob.sync(\"\".concat(CWD, \"/versioned_sidebars/*\")).forEach(function (file) {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\"Skipping \".concat(file, \". Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.\"));\n      }\n\n      return;\n    }\n\n    var sidebarContent;\n\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(\"Could not parse \".concat(file, \" into json. \").concat(e));\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach(function (sb) {\n      var categories = sidebarContent[sb];\n      Object.keys(categories).forEach(function (category) {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  }); // go through pages to look for text inside translate tags\n\n  glob.sync(\"\".concat(CWD, \"/pages/en/**\")).forEach(function (file) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.js') {\n      var ast = babylon.parse(fs.readFileSync(file, 'utf8'), {\n        plugins: ['jsx']\n      });\n      traverse(ast, {\n        enter: function enter(path) {\n          if (path.node.type === 'JSXElement' && path.node.openingElement.name.name === 'translate') {\n            var text = path.node.children[0].value.trim().replace(/\\s+/g, ' ');\n            var description = 'no description given';\n            var attributes = path.node.openingElement.attributes;\n\n            for (var i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n\n            translations['pages-strings'][\"\".concat(text, \"|\").concat(description)] = text;\n          }\n        }\n      });\n    }\n  }); // Manually add 'Help Translate' to en.json\n\n  translations['pages-strings']['Help Translate|recruit community translators for your project'] = 'Help Translate';\n  translations['pages-strings']['Edit this Doc|recruitment message asking to edit the doc source'] = 'Edit';\n  translations['pages-strings']['Translate this Doc|recruitment message asking to translate the docs'] = 'Translate';\n  translations['pages-strings'] = Object.assign(translations['pages-strings'], customTranslations['pages-strings']);\n  translations['localized-strings'] = _.merge({}, translations['localized-strings'], customTranslations['localized-strings']);\n  writeFileAndCreateFolder(\"\".concat(CWD, \"/i18n/en.json\"), \"\".concat(JSON.stringify(Object.assign({\n    _comment: 'This file is auto-generated by write-translations.js'\n  }, translations), null, 2), \"\\n\"));\n}\n\nexecute();\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "write-translations.js"
      ],
      "names": [
        "require",
        "babelrc",
        "only",
        "__dirname",
        "process",
        "cwd",
        "plugins",
        "presets",
        "traverse",
        "babylon",
        "fs",
        "glob",
        "mkdirp",
        "nodePath",
        "_",
        "readMetadata",
        "CWD",
        "siteConfig",
        "sidebars",
        "customTranslations",
        "docs",
        "links",
        "categories",
        "existsSync",
        "merge",
        "JSON",
        "parse",
        "readFileSync",
        "writeFileAndCreateFolder",
        "file",
        "content",
        "sync",
        "replace",
        "RegExp",
        "writeFileSync",
        "execute",
        "translations",
        "next",
        "previous",
        "tagline",
        "docsDir",
        "join",
        "getDocsPath",
        "versionedDocsDir",
        "translateDoc",
        "refDir",
        "extension",
        "extname",
        "res",
        "processMetadata",
        "e",
        "console",
        "error",
        "exit",
        "metadata",
        "id",
        "localized_id",
        "title",
        "sidebar_label",
        "forEach",
        "headerLinks",
        "link",
        "label",
        "Object",
        "keys",
        "sb",
        "category",
        "endsWith",
        "warn",
        "sidebarContent",
        "ast",
        "enter",
        "path",
        "node",
        "type",
        "openingElement",
        "name",
        "text",
        "children",
        "value",
        "trim",
        "description",
        "attributes",
        "i",
        "length",
        "assign",
        "stringify",
        "_comment",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/",
      "sourcesContent": [
        "#!/usr/bin/env node\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, `${process.cwd()}/core`],\n  plugins: [\n    require('./server/translate-plugin.js'),\n    require('@babel/plugin-proposal-class-properties').default,\n    require('@babel/plugin-proposal-object-rest-spread').default,\n  ],\n  presets: [\n    require('@babel/preset-react').default,\n    require('@babel/preset-env').default,\n  ],\n});\n\nconst traverse = require('@babel/traverse').default;\nconst babylon = require('babylon');\nconst fs = require('fs-extra');\nconst glob = require('glob');\nconst mkdirp = require('mkdirp');\nconst nodePath = require('path');\nconst _ = require('lodash');\n\nconst readMetadata = require('./server/readMetadata.js');\n\nconst CWD = process.cwd();\nconst siteConfig = require(`${CWD}/siteConfig.js`);\nconst sidebars = require(`${CWD}/sidebars.json`);\n\nlet customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {},\n  },\n  'pages-strings': {},\n};\nif (fs.existsSync(`${CWD}/data/custom-translation-strings.json`)) {\n  customTranslations = _.merge(\n    {},\n    JSON.parse(\n      fs.readFileSync(`${CWD}/data/custom-translation-strings.json`, 'utf8'),\n    ),\n    customTranslations,\n  );\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  const translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {},\n    },\n    'pages-strings': {},\n  };\n\n  // look through markdown headers of docs for titles and categories to translate\n  const docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  const versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  const translateDoc = (file, refDir) => {\n    const extension = nodePath.extname(file);\n    if (extension === '.md' || extension === '.markdown') {\n      let res;\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n      if (!res) {\n        return;\n      }\n      const metadata = res.metadata;\n      const id = metadata.localized_id;\n\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label =\n          metadata.sidebar_label;\n      }\n    }\n  };\n  glob.sync(`${docsDir}/**`).forEach(file => translateDoc(file, docsDir));\n  glob\n    .sync(`${versionedDocsDir}/**`)\n    .forEach(file => translateDoc(file, versionedDocsDir));\n\n  // look through header links for text to translate\n  siteConfig.headerLinks.forEach(link => {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  });\n\n  // find sidebar category titles to translate\n  Object.keys(sidebars).forEach(sb => {\n    const categories = sidebars[sb];\n    Object.keys(categories).forEach(category => {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n\n  glob.sync(`${CWD}/versioned_sidebars/*`).forEach(file => {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\n          `Skipping ${file}. Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.`,\n        );\n      }\n      return;\n    }\n    let sidebarContent;\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(`Could not parse ${file} into json. ${e}`);\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach(sb => {\n      const categories = sidebarContent[sb];\n      Object.keys(categories).forEach(category => {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  });\n\n  // go through pages to look for text inside translate tags\n  glob.sync(`${CWD}/pages/en/**`).forEach(file => {\n    const extension = nodePath.extname(file);\n    if (extension === '.js') {\n      const ast = babylon.parse(fs.readFileSync(file, 'utf8'), {\n        plugins: ['jsx'],\n      });\n      traverse(ast, {\n        enter(path) {\n          if (\n            path.node.type === 'JSXElement' &&\n            path.node.openingElement.name.name === 'translate'\n          ) {\n            const text = path.node.children[0].value\n              .trim()\n              .replace(/\\s+/g, ' ');\n            let description = 'no description given';\n            const attributes = path.node.openingElement.attributes;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n            translations['pages-strings'][`${text}|${description}`] = text;\n          }\n        },\n      });\n    }\n  });\n\n  // Manually add 'Help Translate' to en.json\n  translations['pages-strings'][\n    'Help Translate|recruit community translators for your project'\n  ] = 'Help Translate';\n  translations['pages-strings'][\n    'Edit this Doc|recruitment message asking to edit the doc source'\n  ] = 'Edit';\n  translations['pages-strings'][\n    'Translate this Doc|recruitment message asking to translate the docs'\n  ] = 'Translate';\n  translations['pages-strings'] = Object.assign(\n    translations['pages-strings'],\n    customTranslations['pages-strings'],\n  );\n  translations['localized-strings'] = _.merge(\n    {},\n    translations['localized-strings'],\n    customTranslations['localized-strings'],\n  );\n  writeFileAndCreateFolder(\n    `${CWD}/i18n/en.json`,\n    `${JSON.stringify(\n      Object.assign(\n        {\n          _comment: 'This file is auto-generated by write-translations.js',\n        },\n        translations,\n      ),\n      null,\n      2,\n    )}\\n`,\n  );\n}\n\nexecute();\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/docs.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/docs.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/docs.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/docs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "docs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar _require = require('path'),\n    join = _require.join;\n\nvar _require2 = require('url'),\n    resolve = _require2.resolve;\n\nvar fs = require('fs-extra');\n\nvar React = require('react');\n\nvar env = require('./env.js');\n\nvar _require3 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require3.renderToStaticMarkupWithDoctype;\n\nvar readMetadata = require('./readMetadata.js');\n\nvar _require4 = require('../core/toc.js'),\n    insertTOC = _require4.insertTOC;\n\nvar _require5 = require('./utils.js'),\n    replaceAssetsLink = _require5.replaceAssetsLink;\n\nvar _require6 = require('../core/utils.js'),\n    getPath = _require6.getPath;\n\nfunction getFilePath(metadata) {\n  if (!metadata) {\n    return null;\n  }\n\n  var file;\n\n  if (env.versioning.enabled && metadata.original_id) {\n    if (env.translation.enabled && metadata.language !== 'en') {\n      file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n    } else {\n      file = join(CWD, 'versioned_docs', metadata.source);\n    }\n  } else if (env.translation.enabled && metadata.language !== 'en') {\n    file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n  } else {\n    file = join(CWD, '..', readMetadata.getDocsPath(), metadata.source);\n  }\n\n  return file;\n}\n\nfunction getFile(metadata) {\n  if (!metadata) {\n    return null;\n  }\n\n  var file = getFilePath(metadata);\n\n  if (!fs.existsSync(file)) {\n    return null;\n  }\n\n  return fs.readFileSync(file, 'utf8');\n}\n\nfunction mdToHtmlify(oldContent, mdToHtml, metadata, siteConfig) {\n  /* Store broken links */\n  var mdBrokenLinks = [];\n  var content = oldContent;\n  /* Replace internal markdown linking (except in fenced blocks) */\n\n  var fencedBlock = false;\n  var lines = content.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    if (fencedBlock) return line;\n    var modifiedLine = line;\n    /* Replace inline-style links or reference-style links e.g:\n    This is [Document 1](doc1.md) -> we replace this doc1.md with correct link\n    [doc1]: doc1.md -> we replace this doc1.md with correct link\n    */\n\n    var mdRegex = /(?:(?:\\]\\()|(?:\\]:\\s?))(?!https)([^'\")\\]\\s>]+\\.md)/g;\n    var mdMatch = mdRegex.exec(modifiedLine);\n\n    while (mdMatch !== null) {\n      /* Replace it to correct html link */\n      var docsSource = metadata.version ? metadata.source.replace(/version-.*?\\//, '') : metadata.source;\n      var htmlLink = mdToHtml[resolve(docsSource, mdMatch[1])] || mdToHtml[mdMatch[1]];\n\n      if (htmlLink) {\n        htmlLink = getPath(htmlLink, siteConfig.cleanUrl);\n        htmlLink = htmlLink.replace('/en/', \"/\".concat(metadata.language, \"/\"));\n        htmlLink = htmlLink.replace('/VERSION/', metadata.version && metadata.version !== env.versioning.latestVersion ? \"/\".concat(metadata.version, \"/\") : '/');\n        modifiedLine = modifiedLine.replace(mdMatch[1], htmlLink);\n      } else {\n        mdBrokenLinks.push(mdMatch[1]);\n      }\n\n      mdMatch = mdRegex.exec(modifiedLine);\n    }\n\n    return modifiedLine;\n  });\n  content = lines.join('\\n');\n\n  if (mdBrokenLinks.length) {\n    console.log(\"[WARN] unresolved links in file '\".concat(metadata.source, \"' >\"), mdBrokenLinks);\n  }\n\n  return content;\n}\n\nfunction getMarkup(rawContent, mdToHtml, metadata, siteConfig) {\n  // generate table of contents\n  var content = insertTOC(rawContent); // replace any links to markdown files to their website html links\n\n  content = mdToHtmlify(content, mdToHtml, metadata, siteConfig); // replace any relative links to static assets (not in fenced code blocks) to absolute links\n\n  var docsAssetsLocation = siteConfig.docsUrl ? \"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl) : siteConfig.baseUrl.substring(0, siteConfig.baseUrl.length - 1);\n  content = replaceAssetsLink(content, docsAssetsLocation);\n\n  var DocsLayout = require('../core/DocsLayout.js');\n\n  return renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(DocsLayout, {\n    metadata: metadata,\n    language: metadata.language,\n    config: siteConfig\n  }, content));\n}\n\nfunction getRedirectMarkup(metadata, siteConfig) {\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n\n  if (!env.translation.enabled || !metadata.permalink.includes(\"\".concat(docsPart, \"en\"))) {\n    return null;\n  }\n\n  var Redirect = require('../core/Redirect.js');\n\n  var redirectlink = getPath(metadata.permalink, siteConfig.cleanUrl);\n  return renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Redirect, {\n    metadata: metadata,\n    language: metadata.language,\n    config: siteConfig,\n    redirect: siteConfig.baseUrl + redirectlink\n  }));\n}\n\nmodule.exports = {\n  getMarkup: getMarkup,\n  getFile: getFile,\n  getFilePath: getFilePath,\n  getRedirectMarkup: getRedirectMarkup,\n  mdToHtmlify: mdToHtmlify\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "docs.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "require",
        "join",
        "resolve",
        "fs",
        "React",
        "env",
        "renderToStaticMarkupWithDoctype",
        "readMetadata",
        "insertTOC",
        "replaceAssetsLink",
        "getPath",
        "getFilePath",
        "metadata",
        "file",
        "versioning",
        "enabled",
        "original_id",
        "translation",
        "language",
        "source",
        "getDocsPath",
        "getFile",
        "existsSync",
        "readFileSync",
        "mdToHtmlify",
        "oldContent",
        "mdToHtml",
        "siteConfig",
        "mdBrokenLinks",
        "content",
        "fencedBlock",
        "lines",
        "split",
        "map",
        "line",
        "trim",
        "startsWith",
        "modifiedLine",
        "mdRegex",
        "mdMatch",
        "exec",
        "docsSource",
        "version",
        "replace",
        "htmlLink",
        "cleanUrl",
        "latestVersion",
        "push",
        "length",
        "console",
        "log",
        "getMarkup",
        "rawContent",
        "docsAssetsLocation",
        "docsUrl",
        "baseUrl",
        "substring",
        "DocsLayout",
        "getRedirectMarkup",
        "docsPart",
        "permalink",
        "includes",
        "Redirect",
        "redirectlink",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAMA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;eACeC,OAAO,CAAC,MAAD,C;IAAfC,I,YAAAA,I;;gBACWD,OAAO,CAAC,KAAD,C;IAAlBE,O,aAAAA,O;;AACP,IAAMC,EAAE,GAAGH,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMK,GAAG,GAAGL,OAAO,CAAC,UAAD,CAAnB;;gBAC0CA,OAAO,CAAC,eAAD,C;IAA1CM,+B,aAAAA,+B;;AACP,IAAMC,YAAY,GAAGP,OAAO,CAAC,mBAAD,CAA5B;;gBACoBA,OAAO,CAAC,gBAAD,C;IAApBQ,S,aAAAA,S;;gBACqBR,OAAO,CAAC,YAAD,C;IAA5BS,iB,aAAAA,iB;;gBACWT,OAAO,CAAC,kBAAD,C;IAAlBU,O,aAAAA,O;;AAEP,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AACD,MAAIC,IAAJ;;AACA,MAAIR,GAAG,CAACS,UAAJ,CAAeC,OAAf,IAA0BH,QAAQ,CAACI,WAAvC,EAAoD;AAClD,QAAIX,GAAG,CAACY,WAAJ,CAAgBF,OAAhB,IAA2BH,QAAQ,CAACM,QAAT,KAAsB,IAArD,EAA2D;AACzDL,MAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,iBAAN,EAAyBe,QAAQ,CAACM,QAAlC,EAA4CN,QAAQ,CAACO,MAArD,CAAX;AACD,KAFD,MAEO;AACLN,MAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,gBAAN,EAAwBe,QAAQ,CAACO,MAAjC,CAAX;AACD;AACF,GAND,MAMO,IAAId,GAAG,CAACY,WAAJ,CAAgBF,OAAhB,IAA2BH,QAAQ,CAACM,QAAT,KAAsB,IAArD,EAA2D;AAChEL,IAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,iBAAN,EAAyBe,QAAQ,CAACM,QAAlC,EAA4CN,QAAQ,CAACO,MAArD,CAAX;AACD,GAFM,MAEA;AACLN,IAAAA,IAAI,GAAGZ,IAAI,CAACJ,GAAD,EAAM,IAAN,EAAYU,YAAY,CAACa,WAAb,EAAZ,EAAwCR,QAAQ,CAACO,MAAjD,CAAX;AACD;;AACD,SAAON,IAAP;AACD;;AAED,SAASQ,OAAT,CAAiBT,QAAjB,EAA2B;AACzB,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AACD,MAAMC,IAAI,GAAGF,WAAW,CAACC,QAAD,CAAxB;;AACA,MAAI,CAACT,EAAE,CAACmB,UAAH,CAAcT,IAAd,CAAL,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,SAAOV,EAAE,CAACoB,YAAH,CAAgBV,IAAhB,EAAsB,MAAtB,CAAP;AACD;;AAED,SAASW,WAAT,CAAqBC,UAArB,EAAiCC,QAAjC,EAA2Cd,QAA3C,EAAqDe,UAArD,EAAiE;AAC/D;AACA,MAAMC,aAAa,GAAG,EAAtB;AAEA,MAAIC,OAAO,GAAGJ,UAAd;AACA;;AACA,MAAIK,WAAW,GAAG,KAAlB;AACA,MAAMC,KAAK,GAAGF,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAwB,UAAAC,IAAI,EAAI;AAC5C,QAAIA,IAAI,CAACC,IAAL,GAAYC,UAAZ,CAAuB,KAAvB,CAAJ,EAAmC;AACjCN,MAAAA,WAAW,GAAG,CAACA,WAAf;AACD;;AACD,QAAIA,WAAJ,EAAiB,OAAOI,IAAP;AAEjB,QAAIG,YAAY,GAAGH,IAAnB;AACA;;;;;AAIA,QAAMI,OAAO,GAAG,qDAAhB;AACA,QAAIC,OAAO,GAAGD,OAAO,CAACE,IAAR,CAAaH,YAAb,CAAd;;AACA,WAAOE,OAAO,KAAK,IAAnB,EAAyB;AACvB;AACA,UAAME,UAAU,GAAG7B,QAAQ,CAAC8B,OAAT,GACf9B,QAAQ,CAACO,MAAT,CAAgBwB,OAAhB,CAAwB,eAAxB,EAAyC,EAAzC,CADe,GAEf/B,QAAQ,CAACO,MAFb;AAGA,UAAIyB,QAAQ,GACVlB,QAAQ,CAACxB,OAAO,CAACuC,UAAD,EAAaF,OAAO,CAAC,CAAD,CAApB,CAAR,CAAR,IAA6Cb,QAAQ,CAACa,OAAO,CAAC,CAAD,CAAR,CADvD;;AAEA,UAAIK,QAAJ,EAAc;AACZA,QAAAA,QAAQ,GAAGlC,OAAO,CAACkC,QAAD,EAAWjB,UAAU,CAACkB,QAAtB,CAAlB;AACAD,QAAAA,QAAQ,GAAGA,QAAQ,CAACD,OAAT,CAAiB,MAAjB,aAA6B/B,QAAQ,CAACM,QAAtC,OAAX;AACA0B,QAAAA,QAAQ,GAAGA,QAAQ,CAACD,OAAT,CACT,WADS,EAET/B,QAAQ,CAAC8B,OAAT,IAAoB9B,QAAQ,CAAC8B,OAAT,KAAqBrC,GAAG,CAACS,UAAJ,CAAegC,aAAxD,cACQlC,QAAQ,CAAC8B,OADjB,SAEI,GAJK,CAAX;AAMAL,QAAAA,YAAY,GAAGA,YAAY,CAACM,OAAb,CAAqBJ,OAAO,CAAC,CAAD,CAA5B,EAAiCK,QAAjC,CAAf;AACD,OAVD,MAUO;AACLhB,QAAAA,aAAa,CAACmB,IAAd,CAAmBR,OAAO,CAAC,CAAD,CAA1B;AACD;;AACDA,MAAAA,OAAO,GAAGD,OAAO,CAACE,IAAR,CAAaH,YAAb,CAAV;AACD;;AACD,WAAOA,YAAP;AACD,GApCa,CAAd;AAqCAR,EAAAA,OAAO,GAAGE,KAAK,CAAC9B,IAAN,CAAW,IAAX,CAAV;;AAEA,MAAI2B,aAAa,CAACoB,MAAlB,EAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,4CACsCtC,QAAQ,CAACO,MAD/C,UAEES,aAFF;AAID;;AACD,SAAOC,OAAP;AACD;;AAED,SAASsB,SAAT,CAAmBC,UAAnB,EAA+B1B,QAA/B,EAAyCd,QAAzC,EAAmDe,UAAnD,EAA+D;AAC7D;AACA,MAAIE,OAAO,GAAGrB,SAAS,CAAC4C,UAAD,CAAvB,CAF6D,CAI7D;;AACAvB,EAAAA,OAAO,GAAGL,WAAW,CAACK,OAAD,EAAUH,QAAV,EAAoBd,QAApB,EAA8Be,UAA9B,CAArB,CAL6D,CAO7D;;AACA,MAAM0B,kBAAkB,GAAG1B,UAAU,CAAC2B,OAAX,aACpB3B,UAAU,CAAC4B,OADS,SACC5B,UAAU,CAAC2B,OADZ,IAEvB3B,UAAU,CAAC4B,OAAX,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC7B,UAAU,CAAC4B,OAAX,CAAmBP,MAAnB,GAA4B,CAA5D,CAFJ;AAGAnB,EAAAA,OAAO,GAAGpB,iBAAiB,CAACoB,OAAD,EAAUwB,kBAAV,CAA3B;;AAEA,MAAMI,UAAU,GAAGzD,OAAO,CAAC,uBAAD,CAA1B;;AACA,SAAOM,+BAA+B,eACpC,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,QAAQ,EAAEA,QAAQ,CAACM,QAFrB;AAGE,IAAA,MAAM,EAAES;AAHV,KAIGE,OAJH,CADoC,CAAtC;AAQD;;AAED,SAAS6B,iBAAT,CAA2B9C,QAA3B,EAAqCe,UAArC,EAAiD;AAC/C,MAAMgC,QAAQ,aAAMhC,UAAU,CAAC2B,OAAX,aAAwB3B,UAAU,CAAC2B,OAAnC,SAAgD,EAAtD,CAAd;;AACA,MACE,CAACjD,GAAG,CAACY,WAAJ,CAAgBF,OAAjB,IACA,CAACH,QAAQ,CAACgD,SAAT,CAAmBC,QAAnB,WAA+BF,QAA/B,QAFH,EAGE;AACA,WAAO,IAAP;AACD;;AACD,MAAMG,QAAQ,GAAG9D,OAAO,CAAC,qBAAD,CAAxB;;AACA,MAAM+D,YAAY,GAAGrD,OAAO,CAACE,QAAQ,CAACgD,SAAV,EAAqBjC,UAAU,CAACkB,QAAhC,CAA5B;AACA,SAAOvC,+BAA+B,eACpC,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,QAAQ,EAAEA,QAAQ,CAACM,QAFrB;AAGE,IAAA,MAAM,EAAES,UAHV;AAIE,IAAA,QAAQ,EAAEA,UAAU,CAAC4B,OAAX,GAAqBQ;AAJjC,IADoC,CAAtC;AAQD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA,SAAS,EAATA,SADe;AAEf9B,EAAAA,OAAO,EAAPA,OAFe;AAGfV,EAAAA,WAAW,EAAXA,WAHe;AAIf+C,EAAAA,iBAAiB,EAAjBA,iBAJe;AAKflC,EAAAA,WAAW,EAAXA;AALe,CAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst CWD = process.cwd();\nconst {join} = require('path');\nconst {resolve} = require('url');\nconst fs = require('fs-extra');\nconst React = require('react');\n\nconst env = require('./env.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\nconst readMetadata = require('./readMetadata.js');\nconst {insertTOC} = require('../core/toc.js');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {getPath} = require('../core/utils.js');\n\nfunction getFilePath(metadata) {\n  if (!metadata) {\n    return null;\n  }\n  let file;\n  if (env.versioning.enabled && metadata.original_id) {\n    if (env.translation.enabled && metadata.language !== 'en') {\n      file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n    } else {\n      file = join(CWD, 'versioned_docs', metadata.source);\n    }\n  } else if (env.translation.enabled && metadata.language !== 'en') {\n    file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n  } else {\n    file = join(CWD, '..', readMetadata.getDocsPath(), metadata.source);\n  }\n  return file;\n}\n\nfunction getFile(metadata) {\n  if (!metadata) {\n    return null;\n  }\n  const file = getFilePath(metadata);\n  if (!fs.existsSync(file)) {\n    return null;\n  }\n  return fs.readFileSync(file, 'utf8');\n}\n\nfunction mdToHtmlify(oldContent, mdToHtml, metadata, siteConfig) {\n  /* Store broken links */\n  const mdBrokenLinks = [];\n\n  let content = oldContent;\n  /* Replace internal markdown linking (except in fenced blocks) */\n  let fencedBlock = false;\n  const lines = content.split('\\n').map(line => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    if (fencedBlock) return line;\n\n    let modifiedLine = line;\n    /* Replace inline-style links or reference-style links e.g:\n    This is [Document 1](doc1.md) -> we replace this doc1.md with correct link\n    [doc1]: doc1.md -> we replace this doc1.md with correct link\n    */\n    const mdRegex = /(?:(?:\\]\\()|(?:\\]:\\s?))(?!https)([^'\")\\]\\s>]+\\.md)/g;\n    let mdMatch = mdRegex.exec(modifiedLine);\n    while (mdMatch !== null) {\n      /* Replace it to correct html link */\n      const docsSource = metadata.version\n        ? metadata.source.replace(/version-.*?\\//, '')\n        : metadata.source;\n      let htmlLink =\n        mdToHtml[resolve(docsSource, mdMatch[1])] || mdToHtml[mdMatch[1]];\n      if (htmlLink) {\n        htmlLink = getPath(htmlLink, siteConfig.cleanUrl);\n        htmlLink = htmlLink.replace('/en/', `/${metadata.language}/`);\n        htmlLink = htmlLink.replace(\n          '/VERSION/',\n          metadata.version && metadata.version !== env.versioning.latestVersion\n            ? `/${metadata.version}/`\n            : '/',\n        );\n        modifiedLine = modifiedLine.replace(mdMatch[1], htmlLink);\n      } else {\n        mdBrokenLinks.push(mdMatch[1]);\n      }\n      mdMatch = mdRegex.exec(modifiedLine);\n    }\n    return modifiedLine;\n  });\n  content = lines.join('\\n');\n\n  if (mdBrokenLinks.length) {\n    console.log(\n      `[WARN] unresolved links in file '${metadata.source}' >`,\n      mdBrokenLinks,\n    );\n  }\n  return content;\n}\n\nfunction getMarkup(rawContent, mdToHtml, metadata, siteConfig) {\n  // generate table of contents\n  let content = insertTOC(rawContent);\n\n  // replace any links to markdown files to their website html links\n  content = mdToHtmlify(content, mdToHtml, metadata, siteConfig);\n\n  // replace any relative links to static assets (not in fenced code blocks) to absolute links\n  const docsAssetsLocation = siteConfig.docsUrl\n    ? `${siteConfig.baseUrl}${siteConfig.docsUrl}`\n    : siteConfig.baseUrl.substring(0, siteConfig.baseUrl.length - 1);\n  content = replaceAssetsLink(content, docsAssetsLocation);\n\n  const DocsLayout = require('../core/DocsLayout.js');\n  return renderToStaticMarkupWithDoctype(\n    <DocsLayout\n      metadata={metadata}\n      language={metadata.language}\n      config={siteConfig}>\n      {content}\n    </DocsLayout>,\n  );\n}\n\nfunction getRedirectMarkup(metadata, siteConfig) {\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  if (\n    !env.translation.enabled ||\n    !metadata.permalink.includes(`${docsPart}en`)\n  ) {\n    return null;\n  }\n  const Redirect = require('../core/Redirect.js');\n  const redirectlink = getPath(metadata.permalink, siteConfig.cleanUrl);\n  return renderToStaticMarkupWithDoctype(\n    <Redirect\n      metadata={metadata}\n      language={metadata.language}\n      config={siteConfig}\n      redirect={siteConfig.baseUrl + redirectlink}\n    />,\n  );\n}\n\nmodule.exports = {\n  getMarkup,\n  getFile,\n  getFilePath,\n  getRedirectMarkup,\n  mdToHtmlify,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/core/toc.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/toc.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/core/toc.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/toc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
        "sourceFileName": "toc.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _require = require('remarkable'),\n    Remarkable = _require.Remarkable;\n\nvar mdToc = require('markdown-toc');\n\nvar GithubSlugger = require('github-slugger');\n\nvar toSlug = require('./toSlug');\n\nvar tocRegex = new RegExp('<AUTOGENERATED_TABLE_OF_CONTENTS>', 'i');\n/**\n * Returns a table of content from the headings\n *\n * @return array\n * Array of heading objects with `hashLink`, `content` and `children` fields\n *\n */\n\nfunction getTOC(content) {\n  var headingTags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'h2';\n  var subHeadingTags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'h3';\n\n  var tagToLevel = function tagToLevel(tag) {\n    return Number(tag.slice(1));\n  };\n\n  var headingLevels = [].concat(headingTags).map(tagToLevel);\n  var subHeadingLevels = subHeadingTags ? [].concat(subHeadingTags).map(tagToLevel) : [];\n  var allowedHeadingLevels = headingLevels.concat(subHeadingLevels);\n  var md = new Remarkable({\n    // Enable HTML tags in source (same as './renderMarkdown.js')\n    html: true\n  });\n  var headings = mdToc(content).json;\n  var toc = [];\n  var slugger = new GithubSlugger();\n  var current;\n  headings.forEach(function (heading) {\n    var rawContent = heading.content;\n    var rendered = md.renderInline(rawContent);\n    var hashLink = toSlug(rawContent, slugger);\n\n    if (!allowedHeadingLevels.includes(heading.lvl)) {\n      return;\n    }\n\n    var entry = {\n      hashLink: hashLink,\n      rawContent: rawContent,\n      content: rendered,\n      children: []\n    };\n\n    if (headingLevels.includes(heading.lvl)) {\n      toc.push(entry);\n      current = entry;\n    } else if (current) {\n      current.children.push(entry);\n    }\n  });\n  return toc;\n} // takes the content of a doc article and returns the content with a table of\n// contents inserted\n\n\nfunction insertTOC(rawContent) {\n  if (!rawContent || !tocRegex.test(rawContent)) {\n    return rawContent;\n  }\n\n  var filterRe = /^`[^`]*`/;\n  var headers = getTOC(rawContent, 'h3', null);\n  var tableOfContents = headers.filter(function (header) {\n    return filterRe.test(header.rawContent);\n  }).map(function (header) {\n    return \"  - [\".concat(header.rawContent, \"](#\").concat(header.hashLink, \")\");\n  }).join('\\n');\n  return rawContent.replace(tocRegex, tableOfContents);\n}\n\nmodule.exports = {\n  getTOC: getTOC,\n  insertTOC: insertTOC\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVtYXJrYWJsZSIsIm1kVG9jIiwiR2l0aHViU2x1Z2dlciIsInRvU2x1ZyIsInRvY1JlZ2V4IiwiUmVnRXhwIiwiZ2V0VE9DIiwiY29udGVudCIsImhlYWRpbmdUYWdzIiwic3ViSGVhZGluZ1RhZ3MiLCJ0YWdUb0xldmVsIiwidGFnIiwiTnVtYmVyIiwic2xpY2UiLCJoZWFkaW5nTGV2ZWxzIiwiY29uY2F0IiwibWFwIiwic3ViSGVhZGluZ0xldmVscyIsImFsbG93ZWRIZWFkaW5nTGV2ZWxzIiwibWQiLCJodG1sIiwiaGVhZGluZ3MiLCJqc29uIiwidG9jIiwic2x1Z2dlciIsImN1cnJlbnQiLCJmb3JFYWNoIiwiaGVhZGluZyIsInJhd0NvbnRlbnQiLCJyZW5kZXJlZCIsInJlbmRlcklubGluZSIsImhhc2hMaW5rIiwiaW5jbHVkZXMiLCJsdmwiLCJlbnRyeSIsImNoaWxkcmVuIiwicHVzaCIsImluc2VydFRPQyIsInRlc3QiLCJmaWx0ZXJSZSIsImhlYWRlcnMiLCJ0YWJsZU9mQ29udGVudHMiLCJmaWx0ZXIiLCJoZWFkZXIiLCJqb2luIiwicmVwbGFjZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztlQU9xQkEsT0FBTyxDQUFDLFlBQUQsQztJQUFyQkMsVSxZQUFBQSxVOztBQUNQLElBQU1DLEtBQUssR0FBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBckI7O0FBQ0EsSUFBTUcsYUFBYSxHQUFHSCxPQUFPLENBQUMsZ0JBQUQsQ0FBN0I7O0FBQ0EsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFNSyxRQUFRLEdBQUcsSUFBSUMsTUFBSixDQUFXLG1DQUFYLEVBQWdELEdBQWhELENBQWpCO0FBRUE7Ozs7Ozs7O0FBT0EsU0FBU0MsTUFBVCxDQUFnQkMsT0FBaEIsRUFBb0U7QUFBQSxNQUEzQ0MsV0FBMkMsdUVBQTdCLElBQTZCO0FB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Q0FBbUJ6QyxRQUFuQixFQUE2QnFDLGVBQTdCLENBQVA7QUFDRDs7QUFFREssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2Z6QyxFQUFBQSxNQUFNLEVBQU5BLE1BRGU7QUFFZitCLEVBQUFBLFNBQVMsRUFBVEE7QUFGZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHtSZW1hcmthYmxlfSA9IHJlcXVpcmUoJ3JlbWFya2FibGUnKTtcbmNvbnN0IG1kVG9jID0gcmVxdWlyZSgnbWFya2Rvd24tdG9jJyk7XG5jb25zdCBHaXRodWJTbHVnZ2VyID0gcmVxdWlyZSgnZ2l0aHViLXNsdWdnZXInKTtcbmNvbnN0IHRvU2x1ZyA9IHJlcXVpcmUoJy4vdG9TbHVnJyk7XG5cbmNvbnN0IHRvY1JlZ2V4ID0gbmV3IFJlZ0V4cCgnPEFVVE9HRU5FUkFURURfVEFCTEVfT0ZfQ09OVEVOVFM+JywgJ2knKTtcblxuLyoqXG4gKiBSZXR1cm5zIGEgdGFibGUgb2YgY29udGVudCBmcm9tIHRoZSBoZWFkaW5nc1xuICpcbiAqIEByZXR1cm4gYXJyYXlcbiAqIEFycmF5IG9mIGhlYWRpbmcgb2JqZWN0cyB3aXRoIGBoYXNoTGlua2AsIGBjb250ZW50YCBhbmQgYGNoaWxkcmVuYCBmaWVsZHNcbiAqXG4gKi9cbmZ1bmN0aW9uIGdldFRPQyhjb250ZW50LCBoZWFkaW5nVGFncyA9ICdoMicsIHN1YkhlYWRpbmdUYWdzID0gJ2gzJykge1xuICBjb25zdCB0YWdUb0xldmVsID0gdGFnID0+IE51bWJlcih0YWcuc2xpY2UoMSkpO1xuICBjb25zdCBoZWFkaW5nTGV2ZWxzID0gW10uY29uY2F0KGhlYWRpbmdUYWdzKS5tYXAodGFnVG9MZXZlbCk7XG4gIGNvbnN0IHN1YkhlYWRpbmdMZXZlbHMgPSBzdWJIZWFkaW5nVGFnc1xuICAgID8gW10uY29uY2F0KHN1YkhlYWRpbmdUYWdzKS5tYXAodGFnVG9MZXZlbClcbiAgICA6IFtdO1xuICBjb25zdCBhbGxvd2VkSGVhZGluZ0xldmVscyA9IGhlYWRpbmdMZXZlbHMuY29uY2F0KHN1YkhlYWRpbmdMZXZlbHMpO1xuICBjb25zdCBtZCA9IG5ldyBSZW1hcmthYmxlKHtcbiAgICAvLyBFbmFibGUgSFRNTCB0YWdzIGluIHNvdXJjZSAoc2FtZSBhcyAnLi9yZW5kZXJNYXJrZG93bi5qcycpXG4gICAgaHRtbDogdHJ1ZSxcbiAgfSk7XG4gIGNvbnN0IGhlYWRpbmdzID0gbWRUb2MoY29udGVudCkuanNvbjtcbiAgY29uc3QgdG9jID0gW107XG4gIGNvbnN0IHNsdWdnZXIgPSBuZXcgR2l0aHViU2x1Z2dlcigpO1xuICBsZXQgY3VycmVudDtcblxuICBoZWFkaW5ncy5mb3JFYWNoKGhlYWRpbmcgPT4ge1xuICAgIGNvbnN0IHJhd0NvbnRlbnQgPSBoZWFkaW5nLmNvbnRlbnQ7XG4gICAgY29uc3QgcmVuZGVyZWQgPSBtZC5yZW5kZXJJbmxpbmUocmF3Q29udGVudCk7XG5cbiAgICBjb25zdCBoYXNoTGluayA9IHRvU2x1ZyhyYXdDb250ZW50LCBzbHVnZ2VyKTtcbiAgICBpZiAoIWFsbG93ZWRIZWFkaW5nTGV2ZWxzLmluY2x1ZGVzKGhlYWRpbmcubHZsKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBlbnRyeSA9IHtcbiAgICAgIGhhc2hMaW5rLFxuICAgICAgcmF3Q29udGVudCxcbiAgICAgIGNvbnRlbnQ6IHJlbmRlcmVkLFxuICAgICAgY2hpbGRyZW46IFtdLFxuICAgIH07XG4gICAgaWYgKGhlYWRpbmdMZXZlbHMuaW5jbHVkZXMoaGVhZGluZy5sdmwpKSB7XG4gICAgICB0b2MucHVzaChlbnRyeSk7XG4gICAgICBjdXJyZW50ID0gZW50cnk7XG4gICAgfSBlbHNlIGlmIChjdXJyZW50KSB7XG4gICAgICBjdXJyZW50LmNoaWxkcmVuLnB1c2goZW50cnkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0b2M7XG59XG5cbi8vIHRha2VzIHRoZSBjb250ZW50IG9mIGEgZG9jIGFydGljbGUgYW5kIHJldHVybnMgdGhlIGNvbnRlbnQgd2l0aCBhIHRhYmxlIG9mXG4vLyBjb250ZW50cyBpbnNlcnRlZFxuZnVuY3Rpb24gaW5zZXJ0VE9DKHJhd0NvbnRlbnQpIHtcbiAgaWYgKCFyYXdDb250ZW50IHx8ICF0b2NSZWdleC50ZXN0KHJhd0NvbnRlbnQpKSB7XG4gICAgcmV0dXJuIHJhd0NvbnRlbnQ7XG4gIH1cbiAgY29uc3QgZmlsdGVyUmUgPSAvXmBbXmBdKmAvO1xuICBjb25zdCBoZWFkZXJzID0gZ2V0VE9DKHJhd0NvbnRlbnQsICdoMycsIG51bGwpO1xuICBjb25zdCB0YWJsZU9mQ29udGVudHMgPSBoZWFkZXJzXG4gICAgLmZpbHRlcihoZWFkZXIgPT4gZmlsdGVyUmUudGVzdChoZWFkZXIucmF3Q29udGVudCkpXG4gICAgLm1hcChoZWFkZXIgPT4gYCAgLSBbJHtoZWFkZXIucmF3Q29udGVudH1dKCMke2hlYWRlci5oYXNoTGlua30pYClcbiAgICAuam9pbignXFxuJyk7XG4gIHJldHVybiByYXdDb250ZW50LnJlcGxhY2UodG9jUmVnZXgsIHRhYmxlT2ZDb250ZW50cyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRUT0MsXG4gIGluc2VydFRPQyxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "toc.js"
      ],
      "names": [
        "require",
        "Remarkable",
        "mdToc",
        "GithubSlugger",
        "toSlug",
        "tocRegex",
        "RegExp",
        "getTOC",
        "content",
        "headingTags",
        "subHeadingTags",
        "tagToLevel",
        "tag",
        "Number",
        "slice",
        "headingLevels",
        "concat",
        "map",
        "subHeadingLevels",
        "allowedHeadingLevels",
        "md",
        "html",
        "headings",
        "json",
        "toc",
        "slugger",
        "current",
        "forEach",
        "heading",
        "rawContent",
        "rendered",
        "renderInline",
        "hashLink",
        "includes",
        "lvl",
        "entry",
        "children",
        "push",
        "insertTOC",
        "test",
        "filterRe",
        "headers",
        "tableOfContents",
        "filter",
        "header",
        "join",
        "replace",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst {Remarkable} = require('remarkable');\nconst mdToc = require('markdown-toc');\nconst GithubSlugger = require('github-slugger');\nconst toSlug = require('./toSlug');\n\nconst tocRegex = new RegExp('<AUTOGENERATED_TABLE_OF_CONTENTS>', 'i');\n\n/**\n * Returns a table of content from the headings\n *\n * @return array\n * Array of heading objects with `hashLink`, `content` and `children` fields\n *\n */\nfunction getTOC(content, headingTags = 'h2', subHeadingTags = 'h3') {\n  const tagToLevel = tag => Number(tag.slice(1));\n  const headingLevels = [].concat(headingTags).map(tagToLevel);\n  const subHeadingLevels = subHeadingTags\n    ? [].concat(subHeadingTags).map(tagToLevel)\n    : [];\n  const allowedHeadingLevels = headingLevels.concat(subHeadingLevels);\n  const md = new Remarkable({\n    // Enable HTML tags in source (same as './renderMarkdown.js')\n    html: true,\n  });\n  const headings = mdToc(content).json;\n  const toc = [];\n  const slugger = new GithubSlugger();\n  let current;\n\n  headings.forEach(heading => {\n    const rawContent = heading.content;\n    const rendered = md.renderInline(rawContent);\n\n    const hashLink = toSlug(rawContent, slugger);\n    if (!allowedHeadingLevels.includes(heading.lvl)) {\n      return;\n    }\n    const entry = {\n      hashLink,\n      rawContent,\n      content: rendered,\n      children: [],\n    };\n    if (headingLevels.includes(heading.lvl)) {\n      toc.push(entry);\n      current = entry;\n    } else if (current) {\n      current.children.push(entry);\n    }\n  });\n  return toc;\n}\n\n// takes the content of a doc article and returns the content with a table of\n// contents inserted\nfunction insertTOC(rawContent) {\n  if (!rawContent || !tocRegex.test(rawContent)) {\n    return rawContent;\n  }\n  const filterRe = /^`[^`]*`/;\n  const headers = getTOC(rawContent, 'h3', null);\n  const tableOfContents = headers\n    .filter(header => filterRe.test(header.rawContent))\n    .map(header => `  - [${header.rawContent}](#${header.hashLink})`)\n    .join('\\n');\n  return rawContent.replace(tocRegex, tableOfContents);\n}\n\nmodule.exports = {\n  getTOC,\n  insertTOC,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/core/toSlug.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/toSlug.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/core/toSlug.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/toSlug.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
        "sourceFileName": "toSlug.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar GitHubSlugger = require('github-slugger');\n/**\n * Converts a string to a slug, that can be used in heading anchors\n *\n * @param  {string} string\n * @param  {() => string} [slugger] - reused slugger to track used slugs and\n *                                 ensure that new slug will be unique\n *\n * @return {string}\n */\n\n\nmodule.exports = function (string) {\n  var slugger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new GitHubSlugger();\n  return slugger.slug(string);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvU2x1Zy5qcyJdLCJuYW1lcyI6WyJHaXRIdWJTbHVnZ2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdHJpbmciLCJzbHVnZ2VyIiwic2x1ZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBN0I7QUFFQTs7Ozs7Ozs7Ozs7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLE1BQUQsRUFBMkM7QUFBQSxNQUFsQ0MsT0FBa0MsdUVBQXhCLElBQUlMLGFBQUosRUFBd0I7QUFDMUQsU0FBT0ssT0FBTyxDQUFDQyxJQUFSLENBQWFGLE1BQWIsQ0FBUDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL2NvcmUvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBHaXRIdWJTbHVnZ2VyID0gcmVxdWlyZSgnZ2l0aHViLXNsdWdnZXInKTtcblxuLyoqXG4gKiBDb252ZXJ0cyBhIHN0cmluZyB0byBhIHNsdWcsIHRoYXQgY2FuIGJlIHVzZWQgaW4gaGVhZGluZyBhbmNob3JzXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJpbmdcbiAqIEBwYXJhbSAgeygpID0+IHN0cmluZ30gW3NsdWdnZXJdIC0gcmV1c2VkIHNsdWdnZXIgdG8gdHJhY2sgdXNlZCBzbHVncyBhbmRcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5zdXJlIHRoYXQgbmV3IHNsdWcgd2lsbCBiZSB1bmlxdWVcbiAqXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gKHN0cmluZywgc2x1Z2dlciA9IG5ldyBHaXRIdWJTbHVnZ2VyKCkpID0+IHtcbiAgcmV0dXJuIHNsdWdnZXIuc2x1ZyhzdHJpbmcpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "toSlug.js"
      ],
      "names": [
        "GitHubSlugger",
        "require",
        "module",
        "exports",
        "string",
        "slugger",
        "slug"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;AAEA;;;;;;;;;;;AASAC,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAA2C;AAAA,MAAlCC,OAAkC,uEAAxB,IAAIL,aAAJ,EAAwB;AAC1D,SAAOK,OAAO,CAACC,IAAR,CAAaF,MAAb,CAAP;AACD,CAFD",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst GitHubSlugger = require('github-slugger');\n\n/**\n * Converts a string to a slug, that can be used in heading anchors\n *\n * @param  {string} string\n * @param  {() => string} [slugger] - reused slugger to track used slugs and\n *                                 ensure that new slug will be unique\n *\n * @return {string}\n */\nmodule.exports = (string, slugger = new GitHubSlugger()) => {\n  return slugger.slug(string);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/core/utils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/utils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/core/utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar shell = require('shelljs');\n\nvar TRUNCATE_MARKER = /<!--\\s*truncate\\s*-->/;\n\nfunction blogPostHasTruncateMarker(content) {\n  return TRUNCATE_MARKER.test(content);\n}\n\nfunction extractBlogPostBeforeTruncate(content) {\n  return content.split(TRUNCATE_MARKER)[0];\n}\n\nfunction removeExtension(pathStr) {\n  return pathStr.replace(/\\.[^/.]+$/, '');\n}\n\nfunction getPath(pathStr) {\n  var cleanUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!pathStr || !cleanUrl || !pathStr.endsWith('.html')) {\n    return pathStr;\n  }\n\n  return pathStr.endsWith('/index.html') ? pathStr.replace(/index\\.html$/, '') : removeExtension(pathStr);\n}\n\nfunction idx(target, keyPaths) {\n  return target && (Array.isArray(keyPaths) ? keyPaths.reduce(function (obj, key) {\n    return obj && obj[key];\n  }, target) : target[keyPaths]);\n}\n\nfunction getGitLastUpdated(filepath) {\n  var timestampAndAuthorRegex = /^(\\d+), (.+)$/;\n\n  function isTimestampAndAuthor(str) {\n    return timestampAndAuthorRegex.test(str);\n  }\n\n  function getTimestampAndAuthor(str) {\n    if (!str) {\n      return null;\n    }\n\n    var temp = str.match(timestampAndAuthorRegex);\n    return !temp || temp.length < 3 ? null : {\n      timestamp: temp[1],\n      author: temp[2]\n    };\n  } // Wrap in try/catch in case the shell commands fail (e.g. project doesn't use Git, etc).\n\n\n  try {\n    // To differentiate between content change and file renaming / moving, use --summary\n    // To follow the file history until before it is moved (when we create new version), use\n    // --follow.\n    var silentState = shell.config.silent; // Save old silent state.\n\n    shell.config.silent = true;\n    var result = shell.exec(\"git log --follow --summary --format=\\\"%ct, %an\\\" \".concat(filepath)).stdout.trim();\n    shell.config.silent = silentState; // Format the log results to be\n    // ['1234567890, Yangshun Tay', 'rename ...', '1234567880,\n    //  'Joel Marcey', 'move ...', '1234567870', '1234567860']\n\n    var records = result.toString('utf-8').replace(/\\n\\s*\\n/g, '\\n').split('\\n').filter(String);\n    var lastContentModifierCommit = records.find(function (item, index, arr) {\n      var currentItemIsTimestampAndAuthor = isTimestampAndAuthor(item);\n      var isLastTwoItem = index + 2 >= arr.length;\n      var nextItemIsTimestampAndAuthor = isTimestampAndAuthor(arr[index + 1]);\n      return currentItemIsTimestampAndAuthor && (isLastTwoItem || nextItemIsTimestampAndAuthor);\n    });\n    return lastContentModifierCommit ? getTimestampAndAuthor(lastContentModifierCommit) : null;\n  } catch (error) {\n    console.error(error);\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedTime(filepath) {\n  var commit = getGitLastUpdated(filepath);\n\n  if (commit && commit.timestamp) {\n    var date = new Date(parseInt(commit.timestamp, 10) * 1000);\n    return date.toLocaleDateString();\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedBy(filepath) {\n  var commit = getGitLastUpdated(filepath);\n  return commit ? commit.author : null;\n}\n\nmodule.exports = {\n  blogPostHasTruncateMarker: blogPostHasTruncateMarker,\n  extractBlogPostBeforeTruncate: extractBlogPostBeforeTruncate,\n  getGitLastUpdatedTime: getGitLastUpdatedTime,\n  getGitLastUpdatedBy: getGitLastUpdatedBy,\n  getPath: getPath,\n  removeExtension: removeExtension,\n  idx: idx\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "shell",
        "require",
        "TRUNCATE_MARKER",
        "blogPostHasTruncateMarker",
        "content",
        "test",
        "extractBlogPostBeforeTruncate",
        "split",
        "removeExtension",
        "pathStr",
        "replace",
        "getPath",
        "cleanUrl",
        "endsWith",
        "idx",
        "target",
        "keyPaths",
        "Array",
        "isArray",
        "reduce",
        "obj",
        "key",
        "getGitLastUpdated",
        "filepath",
        "timestampAndAuthorRegex",
        "isTimestampAndAuthor",
        "str",
        "getTimestampAndAuthor",
        "temp",
        "match",
        "length",
        "timestamp",
        "author",
        "silentState",
        "config",
        "silent",
        "result",
        "exec",
        "stdout",
        "trim",
        "records",
        "toString",
        "filter",
        "String",
        "lastContentModifierCommit",
        "find",
        "item",
        "index",
        "arr",
        "currentItemIsTimestampAndAuthor",
        "isLastTwoItem",
        "nextItemIsTimestampAndAuthor",
        "error",
        "console",
        "getGitLastUpdatedTime",
        "commit",
        "date",
        "Date",
        "parseInt",
        "toLocaleDateString",
        "getGitLastUpdatedBy",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst shell = require('shelljs');\n\nconst TRUNCATE_MARKER = /<!--\\s*truncate\\s*-->/;\n\nfunction blogPostHasTruncateMarker(content) {\n  return TRUNCATE_MARKER.test(content);\n}\n\nfunction extractBlogPostBeforeTruncate(content) {\n  return content.split(TRUNCATE_MARKER)[0];\n}\n\nfunction removeExtension(pathStr) {\n  return pathStr.replace(/\\.[^/.]+$/, '');\n}\n\nfunction getPath(pathStr, cleanUrl = false) {\n  if (!pathStr || !cleanUrl || !pathStr.endsWith('.html')) {\n    return pathStr;\n  }\n  return pathStr.endsWith('/index.html')\n    ? pathStr.replace(/index\\.html$/, '')\n    : removeExtension(pathStr);\n}\n\nfunction idx(target, keyPaths) {\n  return (\n    target &&\n    (Array.isArray(keyPaths)\n      ? keyPaths.reduce((obj, key) => obj && obj[key], target)\n      : target[keyPaths])\n  );\n}\n\nfunction getGitLastUpdated(filepath) {\n  const timestampAndAuthorRegex = /^(\\d+), (.+)$/;\n\n  function isTimestampAndAuthor(str) {\n    return timestampAndAuthorRegex.test(str);\n  }\n\n  function getTimestampAndAuthor(str) {\n    if (!str) {\n      return null;\n    }\n\n    const temp = str.match(timestampAndAuthorRegex);\n    return !temp || temp.length < 3\n      ? null\n      : {timestamp: temp[1], author: temp[2]};\n  }\n\n  // Wrap in try/catch in case the shell commands fail (e.g. project doesn't use Git, etc).\n  try {\n    // To differentiate between content change and file renaming / moving, use --summary\n    // To follow the file history until before it is moved (when we create new version), use\n    // --follow.\n    const silentState = shell.config.silent; // Save old silent state.\n    shell.config.silent = true;\n    const result = shell\n      .exec(`git log --follow --summary --format=\"%ct, %an\" ${filepath}`)\n      .stdout.trim();\n    shell.config.silent = silentState;\n\n    // Format the log results to be\n    // ['1234567890, Yangshun Tay', 'rename ...', '1234567880,\n    //  'Joel Marcey', 'move ...', '1234567870', '1234567860']\n    const records = result\n      .toString('utf-8')\n      .replace(/\\n\\s*\\n/g, '\\n')\n      .split('\\n')\n      .filter(String);\n    const lastContentModifierCommit = records.find((item, index, arr) => {\n      const currentItemIsTimestampAndAuthor = isTimestampAndAuthor(item);\n      const isLastTwoItem = index + 2 >= arr.length;\n      const nextItemIsTimestampAndAuthor = isTimestampAndAuthor(arr[index + 1]);\n      return (\n        currentItemIsTimestampAndAuthor &&\n        (isLastTwoItem || nextItemIsTimestampAndAuthor)\n      );\n    });\n\n    return lastContentModifierCommit\n      ? getTimestampAndAuthor(lastContentModifierCommit)\n      : null;\n  } catch (error) {\n    console.error(error);\n  }\n  return null;\n}\n\nfunction getGitLastUpdatedTime(filepath) {\n  const commit = getGitLastUpdated(filepath);\n\n  if (commit && commit.timestamp) {\n    const date = new Date(parseInt(commit.timestamp, 10) * 1000);\n    return date.toLocaleDateString();\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedBy(filepath) {\n  const commit = getGitLastUpdated(filepath);\n  return commit ? commit.author : null;\n}\n\nmodule.exports = {\n  blogPostHasTruncateMarker,\n  extractBlogPostBeforeTruncate,\n  getGitLastUpdatedTime,\n  getGitLastUpdatedBy,\n  getPath,\n  removeExtension,\n  idx,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/translate.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/translate.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/translate.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/translate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "translate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar translation = require('./translation.js');\n\nvar language = 'en';\n/* handle escaped characters that get converted into json strings */\n\nfunction parseEscapeSequences(str) {\n  return str.replace(new RegExp('\\\\\\\\n', 'g'), '\\n').replace(new RegExp('\\\\\\\\b', 'g'), '\\b').replace(new RegExp('\\\\\\\\f', 'g'), '\\f').replace(new RegExp('\\\\\\\\r', 'g'), '\\r').replace(new RegExp('\\\\\\\\t', 'g'), '\\t').replace(new RegExp(\"\\\\\\\\'\", 'g'), \"'\").replace(new RegExp('\\\\\\\\\"', 'g'), '\"').replace(new RegExp('\\\\\\\\', 'g'), '\\\\');\n}\n\nfunction setLanguage(lang) {\n  language = lang;\n}\n\nfunction doesTranslationExist(str, lang) {\n  return translation[lang] && translation[lang]['pages-strings'] && translation[lang]['pages-strings'][str];\n}\n\nfunction translate(str) {\n  if (!language || language === '') {\n    // Check English, just in case; otherwise, just return the raw string back\n    if (doesTranslationExist(str, 'en')) {\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n\n    return str;\n  }\n\n  if (!doesTranslationExist(str, language)) {\n    // if a translated string doesn't exist, but english does then fallback\n    if (doesTranslationExist(str, 'en')) {\n      console.error(\"Could not find a string translation in '\".concat(language, \"' for string '\").concat(str, \"'. Using English version instead.\"));\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n\n    throw new Error(\"Text that you've identified for translation ('\".concat(str, \"') hasn't been added to the global list in 'en.json'. To solve this problem run 'yarn write-translations'.\"));\n  }\n\n  return parseEscapeSequences(translation[language]['pages-strings'][str]);\n}\n\nmodule.exports = {\n  setLanguage: setLanguage,\n  translate: translate\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0ZS5qcyJdLCJuYW1lcyI6WyJ0cmFuc2xhdGlvbiIsInJlcXVpcmUiLCJsYW5ndWFnZSIsInBhcnNlRXNjYXBlU2VxdWVuY2VzIiwic3RyIiwicmVwbGFjZSIsIlJlZ0V4cCIsInNldExhbmd1YWdlIiwibGFuZyIsImRvZXNUcmFuc2xhdGlvbkV4aXN0IiwidHJhbnNsYXRlIiwiZW4iLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQTNCOztBQUVBLElBQUlDLFFBQVEsR0FBRyxJQUFmO0FBRUE7O0FBQ0EsU0FBU0Msb0JBQVQsQ0FBOEJDLEdBQTlCLEVBQW1DO0FBQ2pDLFNBQU9BLEdBQUcsQ0FDUEMsT0FESSxDQUNJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBREosRUFDOEIsSUFEOUIsRUFFSkQsT0FGSSxDQUVJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBRkosRUFFOEIsSUFGOUIsRUFHSkQsT0FISSxDQUdJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBSEosRUFHOEIsSUFIOUIsRUFJSkQsT0FKSSxDQUlJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBSkosRUFJOEIsSUFKOUIsRUFLSkQsT0FMSSxDQUtJLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBTEosRUFLOEIsSUFMOUIsRUFNSkQsT0FOSSxDQU1JLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBTkosRUFNOEIsR0FOOUIsRUFPSkQsT0FQSSxDQU9JLElBQUlDLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEdBQXBCLENBUEosRUFPOEIsR0FQOUIsRUFRSkQsT0FSSSxDQVFJLElBQUlDLE1BQUosQ0FBVyxNQUFYLEVBQW1CLEdBQW5CLENBUkosRUFRNkIsSUFSN0IsQ0FBUDtBQVNEOztBQUVELFNBQVNDLFdBQVQsQ0FBcUJDLElBQXJCLEVBQTJCO0FBQ3pCTixFQUFBQSxRQUFRLEdBQUdNLElBQVg7QUFDRDs7QUFFRCxTQUFTQyxvQkFBVCxDQUE4QkwsR0FBOUIsRUFBbUNJLElBQW5DLEVBQXlDO0FBQ3ZDLFNBQ0VSLFdBQVcsQ0FBQ1EsSUFBRCxDQUFYLElBQ0FSLFdBQVcsQ0FBQ1EsSUFBRCxDQUFYLENBQWtCLGVBQWxCLENBREEsSUFFQVIsV0FBVyxDQUFDUSxJQUFELENBQVgsQ0FBa0IsZUFBbEIsRUFBbUNKLEdBQW5DLENBSEY7QUFLRDs7QUFFRCxTQUFTTSxTQUFULENBQW1CTixHQUFuQixFQUF3QjtBQUN0QixNQUFJLENBQUNGLFFBQUQsSUFBYUEsUUFBUSxLQUFLLEVBQTlCLEVBQWtDO0FBQ2hDO0FBQ0EsUUFBSU8sb0JBQW9CLENBQUNMLEdBQUQsRUFBTSxJQUFOLENBQXhCLEVBQXFDO0FBQ25DLGFBQU9ELG9CQUFvQixDQUFDSCxXQUFXLENBQUNXLEVBQVosQ0FBZSxlQUFmLEVBQWdDUCxHQUFoQyxDQUFELENBQTNCO0FBQ0Q7O0FBQ0QsV0FBT0EsR0FBUDtBQUNEOztBQUVELE1BQUksQ0FBQ0ssb0JBQW9CLENBQUNMLEdBQUQsRUFBTUYsUUFBTixDQUF6QixFQUEwQztBQUN4QztBQUNBLFFBQUlPLG9CQUFvQixDQUFDTCxHQUFELEVBQU0sSUFBTixDQUF4QixFQUFxQztBQUNuQ1EsTUFBQUEsT0FBTyxDQUFDQyxLQUFSLG1EQUM2Q1gsUUFEN0MsMkJBQ3NFRSxHQUR0RTtBQUlBLGFBQU9ELG9CQUFvQixDQUFDSCxXQUFXLENBQUNXLEVBQVosQ0FBZSxlQUFmLEVBQWdDUCxHQUFoQyxDQUFELENBQTNCO0FBQ0Q7O0FBQ0QsVUFBTSxJQUFJVSxLQUFKLHlEQUM2Q1YsR0FEN0MsZ0hBQU47QUFHRDs7QUFDRCxTQUFPRCxvQkFBb0IsQ0FBQ0gsV0FBVyxDQUFDRSxRQUFELENBQVgsQ0FBc0IsZUFBdEIsRUFBdUNFLEdBQXZDLENBQUQsQ0FBM0I7QUFDRDs7QUFFRFcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZULEVBQUFBLFdBQVcsRUFBWEEsV0FEZTtBQUVmRyxFQUFBQSxTQUFTLEVBQVRBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHRyYW5zbGF0aW9uID0gcmVxdWlyZSgnLi90cmFuc2xhdGlvbi5qcycpO1xuXG5sZXQgbGFuZ3VhZ2UgPSAnZW4nO1xuXG4vKiBoYW5kbGUgZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgZ2V0IGNvbnZlcnRlZCBpbnRvIGpzb24gc3RyaW5ncyAqL1xuZnVuY3Rpb24gcGFyc2VFc2NhcGVTZXF1ZW5jZXMoc3RyKSB7XG4gIHJldHVybiBzdHJcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXG4nLCAnZycpLCAnXFxuJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXGInLCAnZycpLCAnXFxiJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXGYnLCAnZycpLCAnXFxmJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXHInLCAnZycpLCAnXFxyJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXHQnLCAnZycpLCAnXFx0JylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKFwiXFxcXFxcXFwnXCIsICdnJyksIFwiJ1wiKVxuICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFxcXFxcXCInLCAnZycpLCAnXCInKVxuICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFxcXFxcJywgJ2cnKSwgJ1xcXFwnKTtcbn1cblxuZnVuY3Rpb24gc2V0TGFuZ3VhZ2UobGFuZykge1xuICBsYW5ndWFnZSA9IGxhbmc7XG59XG5cbmZ1bmN0aW9uIGRvZXNUcmFuc2xhdGlvbkV4aXN0KHN0ciwgbGFuZykge1xuICByZXR1cm4gKFxuICAgIHRyYW5zbGF0aW9uW2xhbmddICYmXG4gICAgdHJhbnNsYXRpb25bbGFuZ11bJ3BhZ2VzLXN0cmluZ3MnXSAmJlxuICAgIHRyYW5zbGF0aW9uW2xhbmddWydwYWdlcy1zdHJpbmdzJ11bc3RyXVxuICApO1xufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGUoc3RyKSB7XG4gIGlmICghbGFuZ3VhZ2UgfHwgbGFuZ3VhZ2UgPT09ICcnKSB7XG4gICAgLy8gQ2hlY2sgRW5nbGlzaCwganVzdCBpbiBjYXNlOyBvdGhlcndpc2UsIGp1c3QgcmV0dXJuIHRoZSByYXcgc3RyaW5nIGJhY2tcbiAgICBpZiAoZG9lc1RyYW5zbGF0aW9uRXhpc3Qoc3RyLCAnZW4nKSkge1xuICAgICAgcmV0dXJuIHBhcnNlRXNjYXBlU2VxdWVuY2VzKHRyYW5zbGF0aW9uLmVuWydwYWdlcy1zdHJpbmdzJ11bc3RyXSk7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICBpZiAoIWRvZXNUcmFuc2xhdGlvbkV4aXN0KHN0ciwgbGFuZ3VhZ2UpKSB7XG4gICAgLy8gaWYgYSB0cmFuc2xhdGVkIHN0cmluZyBkb2Vzbid0IGV4aXN0LCBidXQgZW5nbGlzaCBkb2VzIHRoZW4gZmFsbGJhY2tcbiAgICBpZiAoZG9lc1RyYW5zbGF0aW9uRXhpc3Qoc3RyLCAnZW4nKSkge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgYENvdWxkIG5vdCBmaW5kIGEgc3RyaW5nIHRyYW5zbGF0aW9uIGluICcke2xhbmd1YWdlfScgZm9yIHN0cmluZyAnJHtzdHJ9Jy4gVXNpbmcgRW5nbGlzaCB2ZXJzaW9uIGluc3RlYWQuYCxcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBwYXJzZUVzY2FwZVNlcXVlbmNlcyh0cmFuc2xhdGlvbi5lblsncGFnZXMtc3RyaW5ncyddW3N0cl0pO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgVGV4dCB0aGF0IHlvdSd2ZSBpZGVudGlmaWVkIGZvciB0cmFuc2xhdGlvbiAoJyR7c3RyfScpIGhhc24ndCBiZWVuIGFkZGVkIHRvIHRoZSBnbG9iYWwgbGlzdCBpbiAnZW4uanNvbicuIFRvIHNvbHZlIHRoaXMgcHJvYmxlbSBydW4gJ3lhcm4gd3JpdGUtdHJhbnNsYXRpb25zJy5gLFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHBhcnNlRXNjYXBlU2VxdWVuY2VzKHRyYW5zbGF0aW9uW2xhbmd1YWdlXVsncGFnZXMtc3RyaW5ncyddW3N0cl0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0TGFuZ3VhZ2UsXG4gIHRyYW5zbGF0ZSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "translate.js"
      ],
      "names": [
        "translation",
        "require",
        "language",
        "parseEscapeSequences",
        "str",
        "replace",
        "RegExp",
        "setLanguage",
        "lang",
        "doesTranslationExist",
        "translate",
        "en",
        "console",
        "error",
        "Error",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAA3B;;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAEA;;AACA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AACjC,SAAOA,GAAG,CACPC,OADI,CACI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CADJ,EAC8B,IAD9B,EAEJD,OAFI,CAEI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAFJ,EAE8B,IAF9B,EAGJD,OAHI,CAGI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAHJ,EAG8B,IAH9B,EAIJD,OAJI,CAII,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAJJ,EAI8B,IAJ9B,EAKJD,OALI,CAKI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CALJ,EAK8B,IAL9B,EAMJD,OANI,CAMI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CANJ,EAM8B,GAN9B,EAOJD,OAPI,CAOI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAPJ,EAO8B,GAP9B,EAQJD,OARI,CAQI,IAAIC,MAAJ,CAAW,MAAX,EAAmB,GAAnB,CARJ,EAQ6B,IAR7B,CAAP;AASD;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzBN,EAAAA,QAAQ,GAAGM,IAAX;AACD;;AAED,SAASC,oBAAT,CAA8BL,GAA9B,EAAmCI,IAAnC,EAAyC;AACvC,SACER,WAAW,CAACQ,IAAD,CAAX,IACAR,WAAW,CAACQ,IAAD,CAAX,CAAkB,eAAlB,CADA,IAEAR,WAAW,CAACQ,IAAD,CAAX,CAAkB,eAAlB,EAAmCJ,GAAnC,CAHF;AAKD;;AAED,SAASM,SAAT,CAAmBN,GAAnB,EAAwB;AACtB,MAAI,CAACF,QAAD,IAAaA,QAAQ,KAAK,EAA9B,EAAkC;AAChC;AACA,QAAIO,oBAAoB,CAACL,GAAD,EAAM,IAAN,CAAxB,EAAqC;AACnC,aAAOD,oBAAoB,CAACH,WAAW,CAACW,EAAZ,CAAe,eAAf,EAAgCP,GAAhC,CAAD,CAA3B;AACD;;AACD,WAAOA,GAAP;AACD;;AAED,MAAI,CAACK,oBAAoB,CAACL,GAAD,EAAMF,QAAN,CAAzB,EAA0C;AACxC;AACA,QAAIO,oBAAoB,CAACL,GAAD,EAAM,IAAN,CAAxB,EAAqC;AACnCQ,MAAAA,OAAO,CAACC,KAAR,mDAC6CX,QAD7C,2BACsEE,GADtE;AAIA,aAAOD,oBAAoB,CAACH,WAAW,CAACW,EAAZ,CAAe,eAAf,EAAgCP,GAAhC,CAAD,CAA3B;AACD;;AACD,UAAM,IAAIU,KAAJ,yDAC6CV,GAD7C,gHAAN;AAGD;;AACD,SAAOD,oBAAoB,CAACH,WAAW,CAACE,QAAD,CAAX,CAAsB,eAAtB,EAAuCE,GAAvC,CAAD,CAA3B;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,WAAW,EAAXA,WADe;AAEfG,EAAAA,SAAS,EAATA;AAFe,CAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst translation = require('./translation.js');\n\nlet language = 'en';\n\n/* handle escaped characters that get converted into json strings */\nfunction parseEscapeSequences(str) {\n  return str\n    .replace(new RegExp('\\\\\\\\n', 'g'), '\\n')\n    .replace(new RegExp('\\\\\\\\b', 'g'), '\\b')\n    .replace(new RegExp('\\\\\\\\f', 'g'), '\\f')\n    .replace(new RegExp('\\\\\\\\r', 'g'), '\\r')\n    .replace(new RegExp('\\\\\\\\t', 'g'), '\\t')\n    .replace(new RegExp(\"\\\\\\\\'\", 'g'), \"'\")\n    .replace(new RegExp('\\\\\\\\\"', 'g'), '\"')\n    .replace(new RegExp('\\\\\\\\', 'g'), '\\\\');\n}\n\nfunction setLanguage(lang) {\n  language = lang;\n}\n\nfunction doesTranslationExist(str, lang) {\n  return (\n    translation[lang] &&\n    translation[lang]['pages-strings'] &&\n    translation[lang]['pages-strings'][str]\n  );\n}\n\nfunction translate(str) {\n  if (!language || language === '') {\n    // Check English, just in case; otherwise, just return the raw string back\n    if (doesTranslationExist(str, 'en')) {\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n    return str;\n  }\n\n  if (!doesTranslationExist(str, language)) {\n    // if a translated string doesn't exist, but english does then fallback\n    if (doesTranslationExist(str, 'en')) {\n      console.error(\n        `Could not find a string translation in '${language}' for string '${str}'. Using English version instead.`,\n      );\n\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n    throw new Error(\n      `Text that you've identified for translation ('${str}') hasn't been added to the global list in 'en.json'. To solve this problem run 'yarn write-translations'.`,\n    );\n  }\n  return parseEscapeSequences(translation[language]['pages-strings'][str]);\n}\n\nmodule.exports = {\n  setLanguage,\n  translate,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/translation.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/translation.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/translation.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/translation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "translation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// translation object contains all translations for each string in i18n/en.json\nvar CWD = process.cwd();\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar path = require('path');\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar enabledLanguages = languages.filter(function (lang) {\n  return lang.enabled;\n});\nvar translation = {\n  languages: enabledLanguages\n};\nvar files = glob.sync(\"\".concat(CWD, \"/i18n/**\"));\nvar langRegex = /\\/i18n\\/(.*)\\.json$/;\nfiles.forEach(function (file) {\n  var extension = path.extname(file);\n\n  if (extension === '.json') {\n    var match = langRegex.exec(file);\n    var language = match[1];\n    translation[language] = require(file);\n  }\n});\nmodule.exports = translation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0aW9uLmpzIl0sIm5hbWVzIjpbIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJmcyIsInJlcXVpcmUiLCJnbG9iIiwicGF0aCIsImxhbmd1YWdlcyIsImV4aXN0c1N5bmMiLCJlbmFibGVkIiwibmFtZSIsInRhZyIsImVuYWJsZWRMYW5ndWFnZXMiLCJmaWx0ZXIiLCJsYW5nIiwidHJhbnNsYXRpb24iLCJmaWxlcyIsInN5bmMiLCJsYW5nUmVnZXgiLCJmb3JFYWNoIiwiZmlsZSIsImV4dGVuc2lvbiIsImV4dG5hbWUiLCJtYXRjaCIsImV4ZWMiLCJsYW5ndWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BO0FBRUEsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxJQUFJRyxTQUFKOztBQUNBLElBQUlKLEVBQUUsQ0FBQ0ssVUFBSCxXQUFpQlIsR0FBakIsbUJBQUosRUFBMEM7QUFDeENPLEVBQUFBLFNBQVMsR0FBR0gsT0FBTyxXQUFJSixHQUFKLG1CQUFuQjtBQUNELENBRkQsTUFFTztBQUNMTyxFQUFBQSxTQUFTLEdBQUcsQ0FDVjtBQUNFRSxJQUFBQSxPQUFPLEVBQUUsSUFEWDtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsU0FGUjtBQUdFQyxJQUFBQSxHQUFHLEVBQUU7QUFIUCxHQURVLENBQVo7QUFPRDs7QUFFRCxJQUFNQyxnQkFBZ0IsR0FBR0wsU0FBUyxDQUFDTSxNQUFWLENBQWlCLFVBQUFDLElBQUk7QUFBQSxTQUFJQSxJQUFJLENBQUNMLE9BQVQ7QUFBQSxDQUFyQixDQUF6QjtBQUVBLElBQU1NLFdBQVcsR0FBRztBQUFDUixFQUFBQSxTQUFTLEVBQUVLO0FBQVosQ0FBcEI7QUFFQSxJQUFNSSxLQUFLLEdBQUdYLElBQUksQ0FBQ1ksSUFBTCxXQUFhakIsR0FBYixjQUFkO0FBQ0EsSUFBTWtCLFNBQVMsR0FBRyxxQkFBbEI7QUFFQUYsS0FBSyxDQUFDRyxPQUFOLENBQWMsVUFBQUMsSUFBSSxFQUFJO0FBQ3BCLE1BQU1DLFNBQVMsR0FBR2YsSUFBSSxDQUFDZ0IsT0FBTCxDQUFhRixJQUFiLENBQWxCOztBQUNBLE1BQUlDLFNBQVMsS0FBSyxPQUFsQixFQUEyQjtBQUN6QixRQUFNRSxLQUFLLEdBQUdMLFNBQVMsQ0FBQ00sSUFBVixDQUFlSixJQUFmLENBQWQ7QUFDQSxRQUFNSyxRQUFRLEdBQUdGLEtBQUssQ0FBQyxDQUFELENBQXRCO0FBQ0FSLElBQUFBLFdBQVcsQ0FBQ1UsUUFBRCxDQUFYLEdBQXdCckIsT0FBTyxDQUFDZ0IsSUFBRCxDQUEvQjtBQUNEO0FBQ0YsQ0FQRDtBQVNBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLFdBQWpCIiwic291cmNlUm9vdCI6Ii91c3IvbG9jYWwvbGliL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyB0cmFuc2xhdGlvbiBvYmplY3QgY29udGFpbnMgYWxsIHRyYW5zbGF0aW9ucyBmb3IgZWFjaCBzdHJpbmcgaW4gaTE4bi9lbi5qc29uXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxubGV0IGxhbmd1YWdlcztcbmlmIChmcy5leGlzdHNTeW5jKGAke0NXRH0vbGFuZ3VhZ2VzLmpzYCkpIHtcbiAgbGFuZ3VhZ2VzID0gcmVxdWlyZShgJHtDV0R9L2xhbmd1YWdlcy5qc2ApO1xufSBlbHNlIHtcbiAgbGFuZ3VhZ2VzID0gW1xuICAgIHtcbiAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICBuYW1lOiAnRW5nbGlzaCcsXG4gICAgICB0YWc6ICdlbicsXG4gICAgfSxcbiAgXTtcbn1cblxuY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGxhbmd1YWdlcy5maWx0ZXIobGFuZyA9PiBsYW5nLmVuYWJsZWQpO1xuXG5jb25zdCB0cmFuc2xhdGlvbiA9IHtsYW5ndWFnZXM6IGVuYWJsZWRMYW5ndWFnZXN9O1xuXG5jb25zdCBmaWxlcyA9IGdsb2Iuc3luYyhgJHtDV0R9L2kxOG4vKipgKTtcbmNvbnN0IGxhbmdSZWdleCA9IC9cXC9pMThuXFwvKC4qKVxcLmpzb24kLztcblxuZmlsZXMuZm9yRWFjaChmaWxlID0+IHtcbiAgY29uc3QgZXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKGZpbGUpO1xuICBpZiAoZXh0ZW5zaW9uID09PSAnLmpzb24nKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBsYW5nUmVnZXguZXhlYyhmaWxlKTtcbiAgICBjb25zdCBsYW5ndWFnZSA9IG1hdGNoWzFdO1xuICAgIHRyYW5zbGF0aW9uW2xhbmd1YWdlXSA9IHJlcXVpcmUoZmlsZSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRyYW5zbGF0aW9uO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "translation.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "glob",
        "path",
        "languages",
        "existsSync",
        "enabled",
        "name",
        "tag",
        "enabledLanguages",
        "filter",
        "lang",
        "translation",
        "files",
        "sync",
        "langRegex",
        "forEach",
        "file",
        "extension",
        "extname",
        "match",
        "exec",
        "language",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIG,SAAJ;;AACA,IAAIJ,EAAE,CAACK,UAAH,WAAiBR,GAAjB,mBAAJ,EAA0C;AACxCO,EAAAA,SAAS,GAAGH,OAAO,WAAIJ,GAAJ,mBAAnB;AACD,CAFD,MAEO;AACLO,EAAAA,SAAS,GAAG,CACV;AACEE,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADU,CAAZ;AAOD;;AAED,IAAMC,gBAAgB,GAAGL,SAAS,CAACM,MAAV,CAAiB,UAAAC,IAAI;AAAA,SAAIA,IAAI,CAACL,OAAT;AAAA,CAArB,CAAzB;AAEA,IAAMM,WAAW,GAAG;AAACR,EAAAA,SAAS,EAAEK;AAAZ,CAApB;AAEA,IAAMI,KAAK,GAAGX,IAAI,CAACY,IAAL,WAAajB,GAAb,cAAd;AACA,IAAMkB,SAAS,GAAG,qBAAlB;AAEAF,KAAK,CAACG,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,MAAMC,SAAS,GAAGf,IAAI,CAACgB,OAAL,CAAaF,IAAb,CAAlB;;AACA,MAAIC,SAAS,KAAK,OAAlB,EAA2B;AACzB,QAAME,KAAK,GAAGL,SAAS,CAACM,IAAV,CAAeJ,IAAf,CAAd;AACA,QAAMK,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAAtB;AACAR,IAAAA,WAAW,CAACU,QAAD,CAAX,GAAwBrB,OAAO,CAACgB,IAAD,CAA/B;AACD;AACF,CAPD;AASAM,MAAM,CAACC,OAAP,GAAiBZ,WAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// translation object contains all translations for each string in i18n/en.json\n\nconst CWD = process.cwd();\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst enabledLanguages = languages.filter(lang => lang.enabled);\n\nconst translation = {languages: enabledLanguages};\n\nconst files = glob.sync(`${CWD}/i18n/**`);\nconst langRegex = /\\/i18n\\/(.*)\\.json$/;\n\nfiles.forEach(file => {\n  const extension = path.extname(file);\n  if (extension === '.json') {\n    const match = langRegex.exec(file);\n    const language = match[1];\n    translation[language] = require(file);\n  }\n});\n\nmodule.exports = translation;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/feed.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/feed.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/feed.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/feed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "feed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _require = require('feed'),\n    Feed = _require.Feed;\n\nvar truncateHtml = require('truncate-html');\n\nvar BLOG_POST_SUMMARY_LENGTH = 250;\nvar CWD = process.cwd();\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar readMetadata = require('./readMetadata.js');\n\nvar blogRootURL = \"\".concat(siteConfig.url + siteConfig.baseUrl, \"blog\");\nvar siteImageURL = siteConfig.url + siteConfig.baseUrl + siteConfig.headerIcon;\n\nvar utils = require('../core/utils');\n\nvar renderMarkdown = require('../core/renderMarkdown.js');\n\nmodule.exports = function (type) {\n  console.log('feed.js triggered...');\n  type = type || 'rss';\n  readMetadata.generateMetadataBlog(siteConfig);\n\n  var MetadataBlog = require('../core/MetadataBlog.js');\n\n  var MetadataPublicBlog = process.env.NODE_ENV === 'development' ? MetadataBlog : MetadataBlog.filter(function (item) {\n    return !item.unlisted;\n  });\n  var feed = new Feed({\n    title: \"\".concat(siteConfig.title, \" Blog\"),\n    description: \"The best place to stay up-to-date with the latest \".concat(siteConfig.title, \" news and events.\"),\n    id: blogRootURL,\n    link: blogRootURL,\n    image: siteImageURL,\n    copyright: siteConfig.copyright,\n    updated: new Date(MetadataPublicBlog[0].date)\n  });\n  MetadataPublicBlog.forEach(function (post) {\n    var url = \"\".concat(blogRootURL, \"/\").concat(post.path);\n    var description = utils.blogPostHasTruncateMarker(post.content) ? renderMarkdown(utils.extractBlogPostBeforeTruncate(post.content)) : truncateHtml(renderMarkdown(post.content), BLOG_POST_SUMMARY_LENGTH);\n    feed.addItem({\n      title: post.title,\n      link: url,\n      author: [{\n        name: post.author,\n        link: post.authorURL\n      }],\n      date: new Date(post.date),\n      description: description\n    });\n  });\n  return type === 'rss' ? feed.rss2() : feed.atom1();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZlZWQuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsIkZlZWQiLCJ0cnVuY2F0ZUh0bWwiLCJCTE9HX1BPU1RfU1VNTUFSWV9MRU5HVEgiLCJDV0QiLCJwcm9jZXNzIiwiY3dkIiwic2l0ZUNvbmZpZyIsInJlYWRNZXRhZGF0YSIsImJsb2dSb290VVJMIiwidXJsIiwiYmFzZVVybCIsInNpdGVJbWFnZVVSTCIsImhlYWRlckljb24iLCJ1dGlscyIsInJlbmRlck1hcmtkb3duIiwibW9kdWxlIiwiZXhwb3J0cyIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiZ2VuZXJhdGVNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YVB1YmxpY0Jsb2ciLCJlbnYiLCJOT0RFX0VOViIsImZpbHRlciIsIml0ZW0iLCJ1bmxpc3RlZCIsImZlZWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiaWQiLCJsaW5rIiwiaW1hZ2UiLCJjb3B5cmlnaHQiLCJ1cGRhdGVkIiwiRGF0ZSIsImRhdGUiLCJmb3JFYWNoIiwicG9zdCIsInBhdGgiLCJibG9nUG9zdEhhc1RydW5jYXRlTWFya2VyIiwiY29udGVudCIsImV4dHJhY3RCbG9nUG9zdEJlZm9yZVRydW5jYXRlIiwiYWRkSXRlbSIsImF1dGhvciIsIm5hbWUiLCJhdXRob3JVUkwiLCJyc3MyIiwiYXRvbTEiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztlQU9lQSxPQUFPLENBQUMsTUFBRCxDO0lBQWZDLEksWUFBQUEsSTs7QUFDUCxJQUFNQyxZQUFZLEdBQUdGLE9BQU8sQ0FBQyxlQUFELENBQTVCOztBQUVBLElBQU1HLHdCQUF3QixHQUFHLEdBQWpDO0FBRUEsSUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdQLE9BQU8sV0FBSUksR0FBSixvQkFBMUI7O0FBQ0EsSUFBTUksWUFBWSxHQUFHUixPQUFPLENBQUMsbUJBQUQsQ0FBNUI7O0FBRUEsSUFBTVMsV0FBVyxhQUFNRixVQUFVLENBQUNHLEdBQVgsR0FBaUJILFVBQVUsQ0FBQ0ksT0FBbEMsU0FBakI7QUFDQSxJQUFNQyxZQUFZLEdBQ2hCTCxVQUFVLENBQUNHLEdBQVgsR0FBaUJILFVBQVUsQ0FBQ0ksT0FBNUIsR0FBc0NKLFVBQVUsQ0FBQ00sVUFEbkQ7O0FBRUEsSUFBTUMsS0FBSyxHQUFHZCxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFFQSxJQUFNZSxjQUFjLEdBQUdmLE9BQU8sQ0FBQywyQkFBRCxDQUE5Qjs7QUFFQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFTQyxJQUFULEVBQWU7QUFDOUJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBRUFGLEVBQUFBLElBQUksR0FBR0EsSUFBSSxJQUFJLEtBQWY7QUFFQVYsRUFBQUEsWUFBWSxDQUFDYSxvQkFBYixDQUFrQ2QsVUFBbEM7O0FBQ0EsTUFBTWUsWUFBWSxHQUFHdEIsT0FBTyxDQUFDLHlCQUFELENBQTVCOztBQUNBLE1BQU11QixrQkFBa0IsR0FDdEJsQixPQUFPLENBQUNtQixHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBekIsR0FDSUgsWUFESixHQUVJQSxZQUFZLENBQUNJLE1BQWIsQ0FBb0IsVUFBQUMsSUFBSTtBQUFBLFdBQUksQ0FBQ0EsSUFBSSxDQUFDQyxRQUFWO0FBQUEsR0FBeEIsQ0FITjtBQUtBLE1BQU1DLElBQUksR0FBRyxJQUFJNUIsSUFBSixDQUFTO0FBQ3BCNkIsSUFBQUEsS0FBSyxZQUFLdkIsVUFBVSxDQUFDdUIsS0FBaEIsVUFEZTtBQUVwQkMsSUFBQUEsV0FBVyw4REFBdUR4QixVQUFVLENBQUN1QixLQUFsRSxzQkFGUztBQUdwQkUsSUFBQUEsRUFBRSxFQUFFdkIsV0FIZ0I7QUFJcEJ3QixJQUFBQSxJQUFJLEVBQUV4QixXQUpjO0FBS3BCeUIsSUFBQUEsS0FBSyxFQUFFdEIsWUFMYTtBQU1wQnVCLElBQUFBLFNBQVMsRUFBRTVCLFVBQVUsQ0FBQzRCLFNBTkY7QUFPcEJDLElBQUFBLE9BQU8sRUFBRSxJQUFJQyxJQUFKLENBQVNkLGtCQUFrQixDQUFDLENBQUQsQ0FBbEIsQ0FBc0JlLElBQS9CO0FBUFcsR0FBVCxDQUFiO0FBVUFmLEVBQUFBLGtCQUFrQixDQUFDZ0IsT0FBbkIsQ0FBMkIsVUFBQUMsSUFBSSxFQUFJO0FBQ2pDLFFBQU05QixHQUFHLGFBQU1ELFdBQU4sY0FBcUIrQixJQUFJLENBQUNDLElBQTFCLENBQVQ7QUFDQSxRQUFNVixXQUFXLEdBQUdqQixLQUFLLENBQUM0Qix5QkFBTixDQUFnQ0YsSUFBSSxDQUFDRyxPQUFyQyxJQUNoQjVCLGNBQWMsQ0FBQ0QsS0FBSyxDQUFDOEIsNkJBQU4sQ0FBb0NKLElBQUksQ0FBQ0csT0FBekMsQ0FBRCxDQURFLEdBRWhCekMsWUFBWSxDQUFDYSxjQUFjLENBQUN5QixJQUFJLENBQUNHLE9BQU4sQ0FBZixFQUErQnhDLHdCQUEvQixDQUZoQjtBQUlBMEIsSUFBQUEsSUFBSSxDQUFDZ0IsT0FBTCxDQUFhO0FBQ1hmLE1BQUFBLEtBQUssRUFBRVUsSUFBSSxDQUFDVixLQUREO0FBRVhHLE1BQUFBLElBQUksRUFBRXZCLEdBRks7QUFHWG9DLE1BQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VDLFFBQUFBLElBQUksRUFBRVAsSUFBSSxDQUFDTSxNQURiO0FBRUViLFFBQUFBLElBQUksRUFBRU8sSUFBSSxDQUFDUTtBQUZiLE9BRE0sQ0FIRztBQVNYVixNQUFBQSxJQUFJLEVBQUUsSUFBSUQsSUFBSixDQUFTRyxJQUFJLENBQUNGLElBQWQsQ0FUSztBQVVYUCxNQUFBQSxXQUFXLEVBQVhBO0FBVlcsS0FBYjtBQVlELEdBbEJEO0FBb0JBLFNBQU9iLElBQUksS0FBSyxLQUFULEdBQWlCVyxJQUFJLENBQUNvQixJQUFMLEVBQWpCLEdBQStCcEIsSUFBSSxDQUFDcUIsS0FBTCxFQUF0QztBQUNELENBM0NEIiwic291cmNlUm9vdCI6Ii91c3IvbG9jYWwvbGliL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCB7RmVlZH0gPSByZXF1aXJlKCdmZWVkJyk7XG5jb25zdCB0cnVuY2F0ZUh0bWwgPSByZXF1aXJlKCd0cnVuY2F0ZS1odG1sJyk7XG5cbmNvbnN0IEJMT0dfUE9TVF9TVU1NQVJZX0xFTkdUSCA9IDI1MDtcblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcbmNvbnN0IHNpdGVDb25maWcgPSByZXF1aXJlKGAke0NXRH0vc2l0ZUNvbmZpZy5qc2ApO1xuY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcblxuY29uc3QgYmxvZ1Jvb3RVUkwgPSBgJHtzaXRlQ29uZmlnLnVybCArIHNpdGVDb25maWcuYmFzZVVybH1ibG9nYDtcbmNvbnN0IHNpdGVJbWFnZVVSTCA9XG4gIHNpdGVDb25maWcudXJsICsgc2l0ZUNvbmZpZy5iYXNlVXJsICsgc2l0ZUNvbmZpZy5oZWFkZXJJY29uO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuLi9jb3JlL3V0aWxzJyk7XG5cbmNvbnN0IHJlbmRlck1hcmtkb3duID0gcmVxdWlyZSgnLi4vY29yZS9yZW5kZXJNYXJrZG93bi5qcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgY29uc29sZS5sb2coJ2ZlZWQuanMgdHJpZ2dlcmVkLi4uJyk7XG5cbiAgdHlwZSA9IHR5cGUgfHwgJ3Jzcyc7XG5cbiAgcmVhZE1ldGFkYXRhLmdlbmVyYXRlTWV0YWRhdGFCbG9nKHNpdGVDb25maWcpO1xuICBjb25zdCBNZXRhZGF0YUJsb2cgPSByZXF1aXJlKCcuLi9jb3JlL01ldGFkYXRhQmxvZy5qcycpO1xuICBjb25zdCBNZXRhZGF0YVB1YmxpY0Jsb2cgPVxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnXG4gICAgICA/IE1ldGFkYXRhQmxvZ1xuICAgICAgOiBNZXRhZGF0YUJsb2cuZmlsdGVyKGl0ZW0gPT4gIWl0ZW0udW5saXN0ZWQpO1xuXG4gIGNvbnN0IGZlZWQgPSBuZXcgRmVlZCh7XG4gICAgdGl0bGU6IGAke3NpdGVDb25maWcudGl0bGV9IEJsb2dgLFxuICAgIGRlc2NyaXB0aW9uOiBgVGhlIGJlc3QgcGxhY2UgdG8gc3RheSB1cC10by1kYXRlIHdpdGggdGhlIGxhdGVzdCAke3NpdGVDb25maWcudGl0bGV9IG5ld3MgYW5kIGV2ZW50cy5gLFxuICAgIGlkOiBibG9nUm9vdFVSTCxcbiAgICBsaW5rOiBibG9nUm9vdFVSTCxcbiAgICBpbWFnZTogc2l0ZUltYWdlVVJMLFxuICAgIGNvcHlyaWdodDogc2l0ZUNvbmZpZy5jb3B5cmlnaHQsXG4gICAgdXBkYXRlZDogbmV3IERhdGUoTWV0YWRhdGFQdWJsaWNCbG9nWzBdLmRhdGUpLFxuICB9KTtcblxuICBNZXRhZGF0YVB1YmxpY0Jsb2cuZm9yRWFjaChwb3N0ID0+IHtcbiAgICBjb25zdCB1cmwgPSBgJHtibG9nUm9vdFVSTH0vJHtwb3N0LnBhdGh9YDtcbiAgICBjb25zdCBkZXNjcmlwdGlvbiA9IHV0aWxzLmJsb2dQb3N0SGFzVHJ1bmNhdGVNYXJrZXIocG9zdC5jb250ZW50KVxuICAgICAgPyByZW5kZXJNYXJrZG93bih1dGlscy5leHRyYWN0QmxvZ1Bvc3RCZWZvcmVUcnVuY2F0ZShwb3N0LmNvbnRlbnQpKVxuICAgICAgOiB0cnVuY2F0ZUh0bWwocmVuZGVyTWFya2Rvd24ocG9zdC5jb250ZW50KSwgQkxPR19QT1NUX1NVTU1BUllfTEVOR1RIKTtcblxuICAgIGZlZWQuYWRkSXRlbSh7XG4gICAgICB0aXRsZTogcG9zdC50aXRsZSxcbiAgICAgIGxpbms6IHVybCxcbiAgICAgIGF1dGhvcjogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogcG9zdC5hdXRob3IsXG4gICAgICAgICAgbGluazogcG9zdC5hdXRob3JVUkwsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgICAgZGF0ZTogbmV3IERhdGUocG9zdC5kYXRlKSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4gdHlwZSA9PT0gJ3JzcycgPyBmZWVkLnJzczIoKSA6IGZlZWQuYXRvbTEoKTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "feed.js"
      ],
      "names": [
        "require",
        "Feed",
        "truncateHtml",
        "BLOG_POST_SUMMARY_LENGTH",
        "CWD",
        "process",
        "cwd",
        "siteConfig",
        "readMetadata",
        "blogRootURL",
        "url",
        "baseUrl",
        "siteImageURL",
        "headerIcon",
        "utils",
        "renderMarkdown",
        "module",
        "exports",
        "type",
        "console",
        "log",
        "generateMetadataBlog",
        "MetadataBlog",
        "MetadataPublicBlog",
        "env",
        "NODE_ENV",
        "filter",
        "item",
        "unlisted",
        "feed",
        "title",
        "description",
        "id",
        "link",
        "image",
        "copyright",
        "updated",
        "Date",
        "date",
        "forEach",
        "post",
        "path",
        "blogPostHasTruncateMarker",
        "content",
        "extractBlogPostBeforeTruncate",
        "addItem",
        "author",
        "name",
        "authorURL",
        "rss2",
        "atom1"
      ],
      "mappings": ";;AAAA;;;;;;eAOeA,OAAO,CAAC,MAAD,C;IAAfC,I,YAAAA,I;;AACP,IAAMC,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA5B;;AAEA,IAAMG,wBAAwB,GAAG,GAAjC;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,UAAU,GAAGP,OAAO,WAAII,GAAJ,oBAA1B;;AACA,IAAMI,YAAY,GAAGR,OAAO,CAAC,mBAAD,CAA5B;;AAEA,IAAMS,WAAW,aAAMF,UAAU,CAACG,GAAX,GAAiBH,UAAU,CAACI,OAAlC,SAAjB;AACA,IAAMC,YAAY,GAChBL,UAAU,CAACG,GAAX,GAAiBH,UAAU,CAACI,OAA5B,GAAsCJ,UAAU,CAACM,UADnD;;AAEA,IAAMC,KAAK,GAAGd,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAMe,cAAc,GAAGf,OAAO,CAAC,2BAAD,CAA9B;;AAEAgB,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEAF,EAAAA,IAAI,GAAGA,IAAI,IAAI,KAAf;AAEAV,EAAAA,YAAY,CAACa,oBAAb,CAAkCd,UAAlC;;AACA,MAAMe,YAAY,GAAGtB,OAAO,CAAC,yBAAD,CAA5B;;AACA,MAAMuB,kBAAkB,GACtBlB,OAAO,CAACmB,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIH,YADJ,GAEIA,YAAY,CAACI,MAAb,CAAoB,UAAAC,IAAI;AAAA,WAAI,CAACA,IAAI,CAACC,QAAV;AAAA,GAAxB,CAHN;AAKA,MAAMC,IAAI,GAAG,IAAI5B,IAAJ,CAAS;AACpB6B,IAAAA,KAAK,YAAKvB,UAAU,CAACuB,KAAhB,UADe;AAEpBC,IAAAA,WAAW,8DAAuDxB,UAAU,CAACuB,KAAlE,sBAFS;AAGpBE,IAAAA,EAAE,EAAEvB,WAHgB;AAIpBwB,IAAAA,IAAI,EAAExB,WAJc;AAKpByB,IAAAA,KAAK,EAAEtB,YALa;AAMpBuB,IAAAA,SAAS,EAAE5B,UAAU,CAAC4B,SANF;AAOpBC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASd,kBAAkB,CAAC,CAAD,CAAlB,CAAsBe,IAA/B;AAPW,GAAT,CAAb;AAUAf,EAAAA,kBAAkB,CAACgB,OAAnB,CAA2B,UAAAC,IAAI,EAAI;AACjC,QAAM9B,GAAG,aAAMD,WAAN,cAAqB+B,IAAI,CAACC,IAA1B,CAAT;AACA,QAAMV,WAAW,GAAGjB,KAAK,CAAC4B,yBAAN,CAAgCF,IAAI,CAACG,OAArC,IAChB5B,cAAc,CAACD,KAAK,CAAC8B,6BAAN,CAAoCJ,IAAI,CAACG,OAAzC,CAAD,CADE,GAEhBzC,YAAY,CAACa,cAAc,CAACyB,IAAI,CAACG,OAAN,CAAf,EAA+BxC,wBAA/B,CAFhB;AAIA0B,IAAAA,IAAI,CAACgB,OAAL,CAAa;AACXf,MAAAA,KAAK,EAAEU,IAAI,CAACV,KADD;AAEXG,MAAAA,IAAI,EAAEvB,GAFK;AAGXoC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAEP,IAAI,CAACM,MADb;AAEEb,QAAAA,IAAI,EAAEO,IAAI,CAACQ;AAFb,OADM,CAHG;AASXV,MAAAA,IAAI,EAAE,IAAID,IAAJ,CAASG,IAAI,CAACF,IAAd,CATK;AAUXP,MAAAA,WAAW,EAAXA;AAVW,KAAb;AAYD,GAlBD;AAoBA,SAAOb,IAAI,KAAK,KAAT,GAAiBW,IAAI,CAACoB,IAAL,EAAjB,GAA+BpB,IAAI,CAACqB,KAAL,EAAtC;AACD,CA3CD",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst {Feed} = require('feed');\nconst truncateHtml = require('truncate-html');\n\nconst BLOG_POST_SUMMARY_LENGTH = 250;\n\nconst CWD = process.cwd();\nconst siteConfig = require(`${CWD}/siteConfig.js`);\nconst readMetadata = require('./readMetadata.js');\n\nconst blogRootURL = `${siteConfig.url + siteConfig.baseUrl}blog`;\nconst siteImageURL =\n  siteConfig.url + siteConfig.baseUrl + siteConfig.headerIcon;\nconst utils = require('../core/utils');\n\nconst renderMarkdown = require('../core/renderMarkdown.js');\n\nmodule.exports = function(type) {\n  console.log('feed.js triggered...');\n\n  type = type || 'rss';\n\n  readMetadata.generateMetadataBlog(siteConfig);\n  const MetadataBlog = require('../core/MetadataBlog.js');\n  const MetadataPublicBlog =\n    process.env.NODE_ENV === 'development'\n      ? MetadataBlog\n      : MetadataBlog.filter(item => !item.unlisted);\n\n  const feed = new Feed({\n    title: `${siteConfig.title} Blog`,\n    description: `The best place to stay up-to-date with the latest ${siteConfig.title} news and events.`,\n    id: blogRootURL,\n    link: blogRootURL,\n    image: siteImageURL,\n    copyright: siteConfig.copyright,\n    updated: new Date(MetadataPublicBlog[0].date),\n  });\n\n  MetadataPublicBlog.forEach(post => {\n    const url = `${blogRootURL}/${post.path}`;\n    const description = utils.blogPostHasTruncateMarker(post.content)\n      ? renderMarkdown(utils.extractBlogPostBeforeTruncate(post.content))\n      : truncateHtml(renderMarkdown(post.content), BLOG_POST_SUMMARY_LENGTH);\n\n    feed.addItem({\n      title: post.title,\n      link: url,\n      author: [\n        {\n          name: post.author,\n          link: post.authorURL,\n        },\n      ],\n      date: new Date(post.date),\n      description,\n    });\n  });\n\n  return type === 'rss' ? feed.rss2() : feed.atom1();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/core/renderMarkdown.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/renderMarkdown.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/core/renderMarkdown.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/renderMarkdown.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
        "sourceFileName": "renderMarkdown.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _ = require('lodash');\n\nvar hljs = require('highlight.js');\n\nvar _require = require('remarkable'),\n    Markdown = _require.Remarkable;\n\nvar _require2 = require('remarkable/linkify'),\n    linkify = _require2.linkify;\n\nvar prismjs = require('prismjs');\n\nvar loadLanguages = require('prismjs/components/index');\n\nvar chalk = require('chalk');\n\nvar anchors = require('./anchors.js');\n\nvar CWD = process.cwd();\nvar alias = {\n  js: 'jsx',\n  html: 'markup',\n  sh: 'bash',\n  md: 'markdown'\n};\n\nvar MarkdownRenderer = /*#__PURE__*/function () {\n  function MarkdownRenderer() {\n    _classCallCheck(this, MarkdownRenderer);\n\n    var siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\n    var markdownOptions = {\n      // Highlight.js expects hljs css classes on the code element.\n      // This results in <pre><code class=\"hljs css languages-jsx\">\n      langPrefix: 'hljs css language-',\n      highlight: function highlight(str, lang) {\n        // User's own custom highlighting function\n        if (siteConfig.highlight && siteConfig.highlight.hljs) {\n          siteConfig.highlight.hljs(hljs);\n        } // Fallback to default language\n\n\n        lang = lang || siteConfig.highlight && siteConfig.highlight.defaultLang;\n\n        if (lang === 'text') {\n          return str;\n        }\n\n        if (lang) {\n          try {\n            if (siteConfig.usePrism === true || siteConfig.usePrism && siteConfig.usePrism.length > 0 && siteConfig.usePrism.indexOf(lang) !== -1) {\n              var language = alias[lang] || lang;\n\n              try {\n                // Currently people using prismjs on Node have to individually require()\n                // every single language (https://github.com/PrismJS/prism/issues/593)\n                loadLanguages([language]);\n                return prismjs.highlight(str, prismjs.languages[language], language);\n              } catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                  var unsupportedLanguageError = chalk.yellow(\"Warning: \".concat(chalk.red(language), \" is not supported by prismjs.\") + '\\nPlease refer to https://prismjs.com/#languages-list for the list of supported languages.');\n                  console.log(unsupportedLanguageError);\n                } else console.error(err);\n              }\n            }\n\n            if (hljs.getLanguage(lang)) {\n              return hljs.highlight(lang, str).value;\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n\n        try {\n          return hljs.highlightAuto(str).value;\n        } catch (err) {\n          console.error(err);\n        }\n\n        return '';\n      },\n      html: true\n    }; // Allow overriding default options\n\n    if (siteConfig.markdownOptions) {\n      markdownOptions = _.merge({}, markdownOptions, siteConfig.markdownOptions);\n    }\n\n    var md = new Markdown(markdownOptions); // Register anchors plugin\n\n    md.use(anchors); // Linkify\n\n    md.use(linkify); // Allow client sites to register their own plugins\n\n    if (siteConfig.markdownPlugins) {\n      siteConfig.markdownPlugins.forEach(function (plugin) {\n        md.use(plugin);\n      });\n    }\n\n    this.md = md;\n  }\n\n  _createClass(MarkdownRenderer, [{\n    key: \"toHtml\",\n    value: function toHtml(source) {\n      var html = this.md.render(source); // Ensure fenced code blocks use Highlight.js hljs class\n      // https://github.com/jonschlinkert/remarkable/issues/224\n\n      return html.replace(/<pre><code>/g, '<pre><code class=\"hljs\">');\n    }\n  }]);\n\n  return MarkdownRenderer;\n}();\n\nvar renderMarkdown = new MarkdownRenderer();\n\nmodule.exports = function (source) {\n  return renderMarkdown.toHtml(source);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "renderMarkdown.js"
      ],
      "names": [
        "_",
        "require",
        "hljs",
        "Markdown",
        "Remarkable",
        "linkify",
        "prismjs",
        "loadLanguages",
        "chalk",
        "anchors",
        "CWD",
        "process",
        "cwd",
        "alias",
        "js",
        "html",
        "sh",
        "md",
        "MarkdownRenderer",
        "siteConfig",
        "markdownOptions",
        "langPrefix",
        "highlight",
        "str",
        "lang",
        "defaultLang",
        "usePrism",
        "length",
        "indexOf",
        "language",
        "languages",
        "err",
        "code",
        "unsupportedLanguageError",
        "yellow",
        "red",
        "console",
        "log",
        "error",
        "getLanguage",
        "value",
        "highlightAuto",
        "merge",
        "use",
        "markdownPlugins",
        "forEach",
        "plugin",
        "source",
        "render",
        "replace",
        "renderMarkdown",
        "module",
        "exports",
        "toHtml"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst _ = require('lodash');\nconst hljs = require('highlight.js');\nconst {Remarkable: Markdown} = require('remarkable');\nconst {linkify} = require('remarkable/linkify');\nconst prismjs = require('prismjs');\nconst loadLanguages = require('prismjs/components/index');\nconst chalk = require('chalk');\nconst anchors = require('./anchors.js');\n\nconst CWD = process.cwd();\n\nconst alias = {\n  js: 'jsx',\n  html: 'markup',\n  sh: 'bash',\n  md: 'markdown',\n};\n\nclass MarkdownRenderer {\n  constructor() {\n    const siteConfig = require(`${CWD}/siteConfig.js`);\n    let markdownOptions = {\n      // Highlight.js expects hljs css classes on the code element.\n      // This results in <pre><code class=\"hljs css languages-jsx\">\n      langPrefix: 'hljs css language-',\n      highlight(str, lang) {\n        // User's own custom highlighting function\n        if (siteConfig.highlight && siteConfig.highlight.hljs) {\n          siteConfig.highlight.hljs(hljs);\n        }\n        // Fallback to default language\n        lang =\n          lang || (siteConfig.highlight && siteConfig.highlight.defaultLang);\n        if (lang === 'text') {\n          return str;\n        }\n        if (lang) {\n          try {\n            if (\n              siteConfig.usePrism === true ||\n              (siteConfig.usePrism &&\n                siteConfig.usePrism.length > 0 &&\n                siteConfig.usePrism.indexOf(lang) !== -1)\n            ) {\n              const language = alias[lang] || lang;\n              try {\n                // Currently people using prismjs on Node have to individually require()\n                // every single language (https://github.com/PrismJS/prism/issues/593)\n                loadLanguages([language]);\n                return prismjs.highlight(\n                  str,\n                  prismjs.languages[language],\n                  language,\n                );\n              } catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                  const unsupportedLanguageError = chalk.yellow(\n                    `Warning: ${chalk.red(\n                      language,\n                    )} is not supported by prismjs.` +\n                      '\\nPlease refer to https://prismjs.com/#languages-list for the list of supported languages.',\n                  );\n                  console.log(unsupportedLanguageError);\n                } else console.error(err);\n              }\n            }\n            if (hljs.getLanguage(lang)) {\n              return hljs.highlight(lang, str).value;\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n\n        try {\n          return hljs.highlightAuto(str).value;\n        } catch (err) {\n          console.error(err);\n        }\n\n        return '';\n      },\n      html: true,\n    };\n\n    // Allow overriding default options\n    if (siteConfig.markdownOptions) {\n      markdownOptions = _.merge(\n        {},\n        markdownOptions,\n        siteConfig.markdownOptions,\n      );\n    }\n\n    const md = new Markdown(markdownOptions);\n\n    // Register anchors plugin\n    md.use(anchors);\n\n    // Linkify\n    md.use(linkify);\n\n    // Allow client sites to register their own plugins\n    if (siteConfig.markdownPlugins) {\n      siteConfig.markdownPlugins.forEach(plugin => {\n        md.use(plugin);\n      });\n    }\n\n    this.md = md;\n  }\n\n  toHtml(source) {\n    const html = this.md.render(source);\n\n    // Ensure fenced code blocks use Highlight.js hljs class\n    // https://github.com/jonschlinkert/remarkable/issues/224\n    return html.replace(/<pre><code>/g, '<pre><code class=\"hljs\">');\n  }\n}\n\nconst renderMarkdown = new MarkdownRenderer();\n\nmodule.exports = source => renderMarkdown.toHtml(source);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/core/anchors.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/anchors.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/core/anchors.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/anchors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
        "sourceFileName": "anchors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar GithubSlugger = require('github-slugger');\n\nvar toSlug = require('./toSlug');\n/**\n * The anchors plugin adds GFM-style anchors to headings.\n */\n\n\nfunction anchors(md) {\n  var originalRender = md.renderer.rules.heading_open;\n\n  md.renderer.rules.heading_open = function (tokens, idx, options, env) {\n    if (!env.slugger) {\n      env.slugger = new GithubSlugger();\n    }\n\n    var slugger = env.slugger;\n    var textToken = tokens[idx + 1];\n\n    if (textToken.content) {\n      var anchor = toSlug(textToken.content, slugger);\n      return \"<h\".concat(tokens[idx].hLevel, \"><a class=\\\"anchor\\\" aria-hidden=\\\"true\\\" id=\\\"\").concat(anchor, \"\\\"></a><a href=\\\"#\").concat(anchor, \"\\\" aria-hidden=\\\"true\\\" class=\\\"hash-link\\\"><svg class=\\\"hash-link-icon\\\" aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>\");\n    }\n\n    return originalRender(tokens, idx, options, env);\n  };\n}\n\nmodule.exports = anchors;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuY2hvcnMuanMiXSwibmFtZXMiOlsiR2l0aHViU2x1Z2dlciIsInJlcXVpcmUiLCJ0b1NsdWciLCJhbmNob3JzIiwibWQiLCJvcmlnaW5hbFJlbmRlciIsInJlbmRlcmVyIiwicnVsZXMiLCJoZWFkaW5nX29wZW4iLCJ0b2tlbnMiLCJpZHgiLCJvcHRpb25zIiwiZW52Iiwic2x1Z2dlciIsInRleHRUb2tlbiIsImNvbnRlbnQiLCJhbmNob3IiLCJoTGV2ZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUE3Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXRCO0FBRUE7Ozs7O0FBR0EsU0FBU0UsT0FBVCxDQUFpQkMsRUFBakIsRUFBcUI7QUFDbkIsTUFBTUMsY0FBYyxHQUFHRCxFQUFFLENBQUNFLFFBQUgsQ0FBWUMsS0FBWixDQUFrQkMsWUFBekM7O0FBRUFKLEVBQUFBLEVBQUUsQ0FBQ0UsUUFBSCxDQUFZQyxLQUFaLENBQWtCQyxZQUFsQixHQUFpQyxVQUFTQyxNQUFULEVBQWlCQyxHQUFqQixFQUFzQkMsT0FBdEIsRUFBK0JDLEdBQS9CLEVBQW9DO0FBQ25FLFFBQUksQ0FBQ0EsR0FBRyxDQUFDQyxPQUFULEVBQWtCO0FBQ2hCRCxNQUFBQSxHQUFHLENBQUNDLE9BQUosR0FBYyxJQUFJYixhQUFKLEVBQWQ7QUFDRDs7QUFDRCxRQUFNYSxPQUFPLEdBQUdELEdBQUcsQ0FBQ0MsT0FBcEI7QUFDQSxRQUFNQyxTQUFTLEdBQUdMLE1BQU0sQ0FBQ0MsR0FBRyxHQUFHLENBQVAsQ0FBeEI7O0FBRUEsUUFBSUksU0FBUyxDQUFDQyxPQUFkLEVBQXVCO0FBQ3JCLFVBQU1DLE1BQU0sR0FBR2QsTUFBTSxDQUFDWSxTQUFTLENBQUNDLE9BQVgsRUFBb0JGLE9BQXBCLENBQXJCO0FBQ0EseUJBQVlKLE1BQU0sQ0FBQ0MsR0FBRCxDQUFOLENBQVlPLE1BQXhCLDREQUEyRUQsTUFBM0UsK0JBQW9HQSxNQUFwRztBQUNEOztBQUVELFdBQU9YLGNBQWMsQ0FBQ0ksTUFBRCxFQUFTQyxHQUFULEVBQWNDLE9BQWQsRUFBdUJDLEdBQXZCLENBQXJCO0FBQ0QsR0FiRDtBQWNEOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUJoQixPQUFqQiIsInNvdXJjZVJvb3QiOiIvdXNyL2xvY2FsL2xpYi9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IEdpdGh1YlNsdWdnZXIgPSByZXF1aXJlKCdnaXRodWItc2x1Z2dlcicpO1xuY29uc3QgdG9TbHVnID0gcmVxdWlyZSgnLi90b1NsdWcnKTtcblxuLyoqXG4gKiBUaGUgYW5jaG9ycyBwbHVnaW4gYWRkcyBHRk0tc3R5bGUgYW5jaG9ycyB0byBoZWFkaW5ncy5cbiAqL1xuZnVuY3Rpb24gYW5jaG9ycyhtZCkge1xuICBjb25zdCBvcmlnaW5hbFJlbmRlciA9IG1kLnJlbmRlcmVyLnJ1bGVzLmhlYWRpbmdfb3BlbjtcblxuICBtZC5yZW5kZXJlci5ydWxlcy5oZWFkaW5nX29wZW4gPSBmdW5jdGlvbih0b2tlbnMsIGlkeCwgb3B0aW9ucywgZW52KSB7XG4gICAgaWYgKCFlbnYuc2x1Z2dlcikge1xuICAgICAgZW52LnNsdWdnZXIgPSBuZXcgR2l0aHViU2x1Z2dlcigpO1xuICAgIH1cbiAgICBjb25zdCBzbHVnZ2VyID0gZW52LnNsdWdnZXI7XG4gICAgY29uc3QgdGV4dFRva2VuID0gdG9rZW5zW2lkeCArIDFdO1xuXG4gICAgaWYgKHRleHRUb2tlbi5jb250ZW50KSB7XG4gICAgICBjb25zdCBhbmNob3IgPSB0b1NsdWcodGV4dFRva2VuLmNvbnRlbnQsIHNsdWdnZXIpO1xuICAgICAgcmV0dXJuIGA8aCR7dG9rZW5zW2lkeF0uaExldmVsfT48YSBjbGFzcz1cImFuY2hvclwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGlkPVwiJHthbmNob3J9XCI+PC9hPjxhIGhyZWY9XCIjJHthbmNob3J9XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgY2xhc3M9XCJoYXNoLWxpbmtcIj48c3ZnIGNsYXNzPVwiaGFzaC1saW5rLWljb25cIiBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZlcnNpb249XCIxLjFcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgd2lkdGg9XCIxNlwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTQgOWgxdjFINGMtMS41IDAtMy0xLjY5LTMtMy41UzIuNTUgMyA0IDNoNGMxLjQ1IDAgMyAxLjY5IDMgMy41IDAgMS40MS0uOTEgMi43Mi0yIDMuMjVWOC41OWMuNTgtLjQ1IDEtMS4yNyAxLTIuMDlDMTAgNS4yMiA4Ljk4IDQgOCA0SDRjLS45OCAwLTIgMS4yMi0yIDIuNVMzIDkgNCA5em05LTNoLTF2MWgxYzEgMCAyIDEuMjIgMiAyLjVTMTMuOTggMTIgMTMgMTJIOWMtLjk4IDAtMi0xLjIyLTItMi41IDAtLjgzLjQyLTEuNjQgMS0yLjA5VjYuMjVjLTEuMDkuNTMtMiAxLjg0LTIgMy4yNUM2IDExLjMxIDcuNTUgMTMgOSAxM2g0YzEuNDUgMCAzLTEuNjkgMy0zLjVTMTQuNSA2IDEzIDZ6XCI+PC9wYXRoPjwvc3ZnPjwvYT5gO1xuICAgIH1cblxuICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcih0b2tlbnMsIGlkeCwgb3B0aW9ucywgZW52KTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhbmNob3JzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "anchors.js"
      ],
      "names": [
        "GithubSlugger",
        "require",
        "toSlug",
        "anchors",
        "md",
        "originalRender",
        "renderer",
        "rules",
        "heading_open",
        "tokens",
        "idx",
        "options",
        "env",
        "slugger",
        "textToken",
        "content",
        "anchor",
        "hLevel",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;AAEA;;;;;AAGA,SAASE,OAAT,CAAiBC,EAAjB,EAAqB;AACnB,MAAMC,cAAc,GAAGD,EAAE,CAACE,QAAH,CAAYC,KAAZ,CAAkBC,YAAzC;;AAEAJ,EAAAA,EAAE,CAACE,QAAH,CAAYC,KAAZ,CAAkBC,YAAlB,GAAiC,UAASC,MAAT,EAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,GAA/B,EAAoC;AACnE,QAAI,CAACA,GAAG,CAACC,OAAT,EAAkB;AAChBD,MAAAA,GAAG,CAACC,OAAJ,GAAc,IAAIb,aAAJ,EAAd;AACD;;AACD,QAAMa,OAAO,GAAGD,GAAG,CAACC,OAApB;AACA,QAAMC,SAAS,GAAGL,MAAM,CAACC,GAAG,GAAG,CAAP,CAAxB;;AAEA,QAAII,SAAS,CAACC,OAAd,EAAuB;AACrB,UAAMC,MAAM,GAAGd,MAAM,CAACY,SAAS,CAACC,OAAX,EAAoBF,OAApB,CAArB;AACA,yBAAYJ,MAAM,CAACC,GAAD,CAAN,CAAYO,MAAxB,4DAA2ED,MAA3E,+BAAoGA,MAApG;AACD;;AAED,WAAOX,cAAc,CAACI,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,CAArB;AACD,GAbD;AAcD;;AAEDM,MAAM,CAACC,OAAP,GAAiBhB,OAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst GithubSlugger = require('github-slugger');\nconst toSlug = require('./toSlug');\n\n/**\n * The anchors plugin adds GFM-style anchors to headings.\n */\nfunction anchors(md) {\n  const originalRender = md.renderer.rules.heading_open;\n\n  md.renderer.rules.heading_open = function(tokens, idx, options, env) {\n    if (!env.slugger) {\n      env.slugger = new GithubSlugger();\n    }\n    const slugger = env.slugger;\n    const textToken = tokens[idx + 1];\n\n    if (textToken.content) {\n      const anchor = toSlug(textToken.content, slugger);\n      return `<h${tokens[idx].hLevel}><a class=\"anchor\" aria-hidden=\"true\" id=\"${anchor}\"></a><a href=\"#${anchor}\" aria-hidden=\"true\" class=\"hash-link\"><svg class=\"hash-link-icon\" aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>`;\n    }\n\n    return originalRender(tokens, idx, options, env);\n  };\n}\n\nmodule.exports = anchors;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/server/sitemap.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/sitemap.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/server/sitemap.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/server/sitemap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
        "sourceFileName": "sitemap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nvar glob = require('glob');\n\nvar CWD = process.cwd();\n\nvar sitemap = require('sitemap');\n\nvar utils = require('../core/utils');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar readMetadata = require('./readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\n\nvar Metadata = require('../core/metadata.js');\n\nreadMetadata.generateMetadataBlog(siteConfig);\n\nvar MetadataBlog = require('../core/MetadataBlog.js');\n\nmodule.exports = function (callback) {\n  console.log('sitemap.js triggered...');\n  var files = glob.sync(\"\".concat(CWD, \"/pages/en/**/*.js\")); // English-only is the default.\n\n  var enabledLanguages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }]; // If we have a languages.js file, get all the enabled languages in there\n\n  if (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n    var languages = require(\"\".concat(CWD, \"/languages.js\"));\n\n    enabledLanguages = languages.filter(function (lang) {\n      return lang.enabled;\n    });\n  } // Create a url mapping to all the enabled languages files\n\n\n  var urls = files.map(function (file) {\n    var url = file.split('/pages/en')[1];\n    url = siteConfig.cleanUrl ? url.replace(/\\.js$/, '') : url.replace(/\\.js$/, '.html');\n    var links = enabledLanguages.map(function (lang) {\n      var langUrl = lang.tag + url;\n      return {\n        lang: lang.tag,\n        url: langUrl\n      };\n    });\n    return {\n      url: url,\n      changefreq: 'weekly',\n      priority: 0.5,\n      links: links\n    };\n  });\n  MetadataBlog.forEach(function (blog) {\n    urls.push({\n      url: \"/blog/\".concat(utils.getPath(blog.path, siteConfig.cleanUrl)),\n      changefreq: 'weekly',\n      priority: 0.3\n    });\n  });\n  Object.keys(Metadata).filter(function (key) {\n    return Metadata[key].language === 'en';\n  }).forEach(function (key) {\n    var doc = Metadata[key];\n    var docUrl = utils.getPath(doc.permalink, siteConfig.cleanUrl);\n    var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n    var links = enabledLanguages.map(function (lang) {\n      var langUrl = docUrl.replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(lang.tag, \"/\"));\n      return {\n        lang: lang.tag,\n        url: langUrl\n      };\n    });\n    urls.push({\n      url: docUrl,\n      changefreq: 'hourly',\n      priority: 1.0,\n      links: links\n    });\n  });\n  var sm = sitemap.createSitemap({\n    hostname: siteConfig.url + siteConfig.baseUrl,\n    cacheTime: 600 * 1000,\n    // 600 sec - cache purge period\n    urls: urls\n  });\n  sm.toXML(function (err, xml) {\n    callback(err, xml);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sitemap.js"
      ],
      "names": [
        "fs",
        "require",
        "glob",
        "CWD",
        "process",
        "cwd",
        "sitemap",
        "utils",
        "loadConfig",
        "siteConfig",
        "readMetadata",
        "generateMetadataDocs",
        "Metadata",
        "generateMetadataBlog",
        "MetadataBlog",
        "module",
        "exports",
        "callback",
        "console",
        "log",
        "files",
        "sync",
        "enabledLanguages",
        "enabled",
        "name",
        "tag",
        "existsSync",
        "languages",
        "filter",
        "lang",
        "urls",
        "map",
        "file",
        "url",
        "split",
        "cleanUrl",
        "replace",
        "links",
        "langUrl",
        "changefreq",
        "priority",
        "forEach",
        "blog",
        "push",
        "getPath",
        "path",
        "Object",
        "keys",
        "key",
        "language",
        "doc",
        "docUrl",
        "permalink",
        "docsPart",
        "docsUrl",
        "RegExp",
        "sm",
        "createSitemap",
        "hostname",
        "baseUrl",
        "cacheTime",
        "toXML",
        "err",
        "xml"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAME,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,IAAMC,OAAO,GAAGL,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMM,KAAK,GAAGN,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAMO,UAAU,GAAGP,OAAO,CAAC,UAAD,CAA1B;;AAEA,IAAMQ,UAAU,GAAGD,UAAU,WAAIL,GAAJ,oBAA7B;;AAEA,IAAMO,YAAY,GAAGT,OAAO,CAAC,mBAAD,CAA5B;;AAEAS,YAAY,CAACC,oBAAb;;AACA,IAAMC,QAAQ,GAAGX,OAAO,CAAC,qBAAD,CAAxB;;AAEAS,YAAY,CAACG,oBAAb,CAAkCJ,UAAlC;;AACA,IAAMK,YAAY,GAAGb,OAAO,CAAC,yBAAD,CAA5B;;AAEAc,MAAM,CAACC,OAAP,GAAiB,UAASC,QAAT,EAAmB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEA,MAAMC,KAAK,GAAGlB,IAAI,CAACmB,IAAL,WAAalB,GAAb,uBAAd,CAHkC,CAKlC;;AACA,MAAImB,gBAAgB,GAAG,CACrB;AACEC,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADqB,CAAvB,CANkC,CAclC;;AACA,MAAIzB,EAAE,CAAC0B,UAAH,WAAiBvB,GAAjB,mBAAJ,EAA0C;AACxC,QAAMwB,SAAS,GAAG1B,OAAO,WAAIE,GAAJ,mBAAzB;;AACAmB,IAAAA,gBAAgB,GAAGK,SAAS,CAACC,MAAV,CAAiB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACN,OAAT;AAAA,KAArB,CAAnB;AACD,GAlBiC,CAoBlC;;;AACA,MAAMO,IAAI,GAAGV,KAAK,CAACW,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC7B,QAAIC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAW,WAAX,EAAwB,CAAxB,CAAV;AACAD,IAAAA,GAAG,GAAGxB,UAAU,CAAC0B,QAAX,GACFF,GAAG,CAACG,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CADE,GAEFH,GAAG,CAACG,OAAJ,CAAY,OAAZ,EAAqB,OAArB,CAFJ;AAGA,QAAMC,KAAK,GAAGf,gBAAgB,CAACS,GAAjB,CAAqB,UAAAF,IAAI,EAAI;AACzC,UAAMS,OAAO,GAAGT,IAAI,CAACJ,GAAL,GAAWQ,GAA3B;AACA,aAAO;AAACJ,QAAAA,IAAI,EAAEA,IAAI,CAACJ,GAAZ;AAAiBQ,QAAAA,GAAG,EAAEK;AAAtB,OAAP;AACD,KAHa,CAAd;AAIA,WAAO;AAACL,MAAAA,GAAG,EAAHA,GAAD;AAAMM,MAAAA,UAAU,EAAE,QAAlB;AAA4BC,MAAAA,QAAQ,EAAE,GAAtC;AAA2CH,MAAAA,KAAK,EAALA;AAA3C,KAAP;AACD,GAVY,CAAb;AAYAvB,EAAAA,YAAY,CAAC2B,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAC3BZ,IAAAA,IAAI,CAACa,IAAL,CAAU;AACRV,MAAAA,GAAG,kBAAW1B,KAAK,CAACqC,OAAN,CAAcF,IAAI,CAACG,IAAnB,EAAyBpC,UAAU,CAAC0B,QAApC,CAAX,CADK;AAERI,MAAAA,UAAU,EAAE,QAFJ;AAGRC,MAAAA,QAAQ,EAAE;AAHF,KAAV;AAKD,GAND;AAQAM,EAAAA,MAAM,CAACC,IAAP,CAAYnC,QAAZ,EACGgB,MADH,CACU,UAAAoB,GAAG;AAAA,WAAIpC,QAAQ,CAACoC,GAAD,CAAR,CAAcC,QAAd,KAA2B,IAA/B;AAAA,GADb,EAEGR,OAFH,CAEW,UAAAO,GAAG,EAAI;AACd,QAAME,GAAG,GAAGtC,QAAQ,CAACoC,GAAD,CAApB;AACA,QAAMG,MAAM,GAAG5C,KAAK,CAACqC,OAAN,CAAcM,GAAG,CAACE,SAAlB,EAA6B3C,UAAU,CAAC0B,QAAxC,CAAf;AACA,QAAMkB,QAAQ,aAAM5C,UAAU,CAAC6C,OAAX,aAAwB7C,UAAU,CAAC6C,OAAnC,SAAgD,EAAtD,CAAd;AACA,QAAMjB,KAAK,GAAGf,gBAAgB,CAACS,GAAjB,CAAqB,UAAAF,IAAI,EAAI;AACzC,UAAMS,OAAO,GAAGa,MAAM,CAACf,OAAP,CACd,IAAImB,MAAJ,YAAeF,QAAf,SADc,YAEXA,QAFW,SAEAxB,IAAI,CAACJ,GAFL,OAAhB;AAIA,aAAO;AAACI,QAAAA,IAAI,EAAEA,IAAI,CAACJ,GAAZ;AAAiBQ,QAAAA,GAAG,EAAEK;AAAtB,OAAP;AACD,KANa,CAAd;AAOAR,IAAAA,IAAI,CAACa,IAAL,CAAU;AACRV,MAAAA,GAAG,EAAEkB,MADG;AAERZ,MAAAA,UAAU,EAAE,QAFJ;AAGRC,MAAAA,QAAQ,EAAE,GAHF;AAIRH,MAAAA,KAAK,EAALA;AAJQ,KAAV;AAMD,GAnBH;AAqBA,MAAMmB,EAAE,GAAGlD,OAAO,CAACmD,aAAR,CAAsB;AAC/BC,IAAAA,QAAQ,EAAEjD,UAAU,CAACwB,GAAX,GAAiBxB,UAAU,CAACkD,OADP;AAE/BC,IAAAA,SAAS,EAAE,MAAM,IAFc;AAER;AACvB9B,IAAAA,IAAI,EAAJA;AAH+B,GAAtB,CAAX;AAMA0B,EAAAA,EAAE,CAACK,KAAH,CAAS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrB9C,IAAAA,QAAQ,CAAC6C,GAAD,EAAMC,GAAN,CAAR;AACD,GAFD;AAGD,CAvED",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nconst glob = require('glob');\n\nconst CWD = process.cwd();\n\nconst sitemap = require('sitemap');\nconst utils = require('../core/utils');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst readMetadata = require('./readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\nconst Metadata = require('../core/metadata.js');\n\nreadMetadata.generateMetadataBlog(siteConfig);\nconst MetadataBlog = require('../core/MetadataBlog.js');\n\nmodule.exports = function(callback) {\n  console.log('sitemap.js triggered...');\n\n  const files = glob.sync(`${CWD}/pages/en/**/*.js`);\n\n  // English-only is the default.\n  let enabledLanguages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n\n  // If we have a languages.js file, get all the enabled languages in there\n  if (fs.existsSync(`${CWD}/languages.js`)) {\n    const languages = require(`${CWD}/languages.js`);\n    enabledLanguages = languages.filter(lang => lang.enabled);\n  }\n\n  // Create a url mapping to all the enabled languages files\n  const urls = files.map(file => {\n    let url = file.split('/pages/en')[1];\n    url = siteConfig.cleanUrl\n      ? url.replace(/\\.js$/, '')\n      : url.replace(/\\.js$/, '.html');\n    const links = enabledLanguages.map(lang => {\n      const langUrl = lang.tag + url;\n      return {lang: lang.tag, url: langUrl};\n    });\n    return {url, changefreq: 'weekly', priority: 0.5, links};\n  });\n\n  MetadataBlog.forEach(blog => {\n    urls.push({\n      url: `/blog/${utils.getPath(blog.path, siteConfig.cleanUrl)}`,\n      changefreq: 'weekly',\n      priority: 0.3,\n    });\n  });\n\n  Object.keys(Metadata)\n    .filter(key => Metadata[key].language === 'en')\n    .forEach(key => {\n      const doc = Metadata[key];\n      const docUrl = utils.getPath(doc.permalink, siteConfig.cleanUrl);\n      const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n      const links = enabledLanguages.map(lang => {\n        const langUrl = docUrl.replace(\n          new RegExp(`^${docsPart}en/`),\n          `${docsPart}${lang.tag}/`,\n        );\n        return {lang: lang.tag, url: langUrl};\n      });\n      urls.push({\n        url: docUrl,\n        changefreq: 'hourly',\n        priority: 1.0,\n        links,\n      });\n    });\n\n  const sm = sitemap.createSitemap({\n    hostname: siteConfig.url + siteConfig.baseUrl,\n    cacheTime: 600 * 1000, // 600 sec - cache purge period\n    urls,\n  });\n\n  sm.toXML((err, xml) => {\n    callback(err, xml);\n  });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  },
  "{\"sourceRoot\":\"/usr/local/lib/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"filename\":\"/usr/local/lib/node_modules/docusaurus/lib/core/metadata.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/metadata.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/joel/Desktop/programming/ddc/jitsidocumentation/docs.easyjitsi.com/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/local/lib/node_modules/docusaurus/lib/core/metadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/usr/local/lib/node_modules/docusaurus/lib/core/metadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
        "sourceFileName": "metadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @generated\n */\nmodule.exports = {\n  \"doc1\": {\n    \"id\": \"doc1\",\n    \"title\": \"Introduction\",\n    \"sidebar_label\": \"Introduction\",\n    \"source\": \"doc1.md\",\n    \"permalink\": \"docs/doc1.html\",\n    \"localized_id\": \"doc1\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Docusaurus\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc2\",\n    \"next\": \"doc2\",\n    \"next_title\": \"document number 2\"\n  },\n  \"doc2\": {\n    \"id\": \"doc2\",\n    \"title\": \"document number 2\",\n    \"source\": \"doc2.md\",\n    \"permalink\": \"docs/doc2.html\",\n    \"localized_id\": \"doc2\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"next_id\": \"doc3\",\n    \"next\": \"doc3\",\n    \"previous_id\": \"doc1\",\n    \"previous\": \"doc1\",\n    \"previous_title\": \"Introduction\",\n    \"next_title\": \"This is document number 3\"\n  },\n  \"doc3\": {\n    \"id\": \"doc3\",\n    \"title\": \"This is document number 3\",\n    \"source\": \"doc3.md\",\n    \"permalink\": \"docs/doc3.html\",\n    \"localized_id\": \"doc3\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Second Category\",\n    \"subcategory\": null,\n    \"order\": 3,\n    \"previous_id\": \"doc2\",\n    \"previous\": \"doc2\",\n    \"previous_title\": \"document number 2\"\n  },\n  \"doc4\": {\n    \"id\": \"doc4\",\n    \"title\": \"Other Document\",\n    \"source\": \"exampledoc4.md\",\n    \"permalink\": \"docs/doc4.html\",\n    \"localized_id\": \"doc4\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc5\",\n    \"next\": \"doc5\",\n    \"next_title\": \"Fifth Document\"\n  },\n  \"doc5\": {\n    \"id\": \"doc5\",\n    \"title\": \"Fifth Document\",\n    \"source\": \"exampledoc5.md\",\n    \"permalink\": \"docs/doc5.html\",\n    \"localized_id\": \"doc5\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"previous_id\": \"doc4\",\n    \"previous\": \"doc4\",\n    \"previous_title\": \"Other Document\"\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGFkYXRhLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7OztBQUdBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZixVQUFRO0FBQ04sVUFBTSxNQURBO0FBRU4sYUFBUyxjQUZIO0FBR04scUJBQWlCLGNBSFg7QUFJTixjQUFVLFNBSko7QUFLTixpQkFBYSxnQkFMUDtBQU1OLG9CQUFnQixNQU5WO0FBT04sZ0JBQVksSUFQTjtBQVFOLGVBQVcsTUFSTDtBQVNOLGdCQUFZLFlBVE47QUFVTixtQkFBZSxJQVZUO0FBV04sYUFBUyxDQVhIO0FBWU4sZUFBVyxNQVpMO0FBYU4sWUFBUSxNQWJGO0FBY04sa0JBQWM7QUFkUixHQURPO0FBaUJmLFVBQVE7QUFDTixVQUFNLE1BREE7QUFFTixhQUFTLG1CQUZIO0FBR04sY0FBVSxTQUhKO0FBSU4saUJBQWEsZ0JBSlA7QUFLTixvQkFBZ0IsTUFMVjtBQU1OLGdCQUFZLElBTk47QUFPTixlQUFXLE1BUEw7QUFRTixnQkFBWSxnQkFSTjtBQVNOLG1CQUFlLElBVFQ7QUFVTixhQUFTLENBVkg7QUFXTixlQUFXLE1BWEw7QUFZTixZQUFRLE1BWkY7QUFhTixtQkFBZSxNQWJUO0FBY04sZ0JBQVksTUFkTjtBQWVOLHNCQUFrQixjQWZaO0FBZ0JOLGtCQUFjO0FBaEJSLEdBakJPO0FBbUNmLFVBQVE7QUFDTixVQUFNLE1BREE7QUFFTixhQUFTLDJCQUZIO0FBR04sY0FBVSxTQUhKO0FBSU4saUJBQWEsZ0JBSlA7QUFLTixvQkFBZ0IsTUFMVjtBQU1OLGdCQUFZLElBTk47QUFPTixlQUFXLE1BUEw7QUFRTixnQkFBWSxpQkFSTjtBQVNOLG1CQUFlLElBVFQ7QUFVTixhQUFTLENBVkg7QUFXTixtQkFBZSxNQVhUO0FBWU4sZ0JBQVksTUFaTjtBQWFOLHNCQUFrQjtBQWJaLEdBbkNPO0FBa0RmLFVBQVE7QUFDTixVQUFNLE1BREE7QUFFTixhQUFTLGdCQUZIO0FBR04sY0FBVSxnQkFISjtBQUlOLGlCQUFhLGdCQUpQO0FBS04sb0JBQWdCLE1BTFY7QUFNTixnQkFBWSxJQU5OO0FBT04sZUFBVyxZQVBMO0FBUU4sZ0JBQVksZ0JBUk47QUFTTixtQkFBZSxJQVRUO0FBVU4sYUFBUyxDQVZIO0FBV04sZUFBVyxNQVhMO0FBWU4sWUFBUSxNQVpGO0FBYU4sa0JBQWM7QUFiUixHQWxETztBQWlFZixVQUFRO0FBQ04sVUFBTSxNQURBO0FBRU4sYUFBUyxnQkFGSDtBQUdOLGNBQVUsZ0JBSEo7QUFJTixpQkFBYSxnQkFKUDtBQUtOLG9CQUFnQixNQUxWO0FBTU4sZ0JBQVksSUFOTjtBQU9OLGVBQVcsWUFQTDtBQVFOLGdCQUFZLGdCQVJOO0FBU04sbUJBQWUsSUFUVDtBQVVOLGFBQVMsQ0FWSDtBQVdOLG1CQUFlLE1BWFQ7QUFZTixnQkFBWSxNQVpOO0FBYU4sc0JBQWtCO0FBYlo7QUFqRU8sQ0FBakIiLCJzb3VyY2VSb290IjoiL3Vzci9sb2NhbC9saWIvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL2NvcmUvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZ2VuZXJhdGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBcImRvYzFcIjoge1xuICAgIFwiaWRcIjogXCJkb2MxXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkludHJvZHVjdGlvblwiLFxuICAgIFwic2lkZWJhcl9sYWJlbFwiOiBcIkludHJvZHVjdGlvblwiLFxuICAgIFwic291cmNlXCI6IFwiZG9jMS5tZFwiLFxuICAgIFwicGVybWFsaW5rXCI6IFwiZG9jcy9kb2MxLmh0bWxcIixcbiAgICBcImxvY2FsaXplZF9pZFwiOiBcImRvYzFcIixcbiAgICBcImxhbmd1YWdlXCI6IFwiZW5cIixcbiAgICBcInNpZGViYXJcIjogXCJkb2NzXCIsXG4gICAgXCJjYXRlZ29yeVwiOiBcIkRvY3VzYXVydXNcIixcbiAgICBcInN1YmNhdGVnb3J5XCI6IG51bGwsXG4gICAgXCJvcmRlclwiOiAxLFxuICAgIFwibmV4dF9pZFwiOiBcImRvYzJcIixcbiAgICBcIm5leHRcIjogXCJkb2MyXCIsXG4gICAgXCJuZXh0X3RpdGxlXCI6IFwiZG9jdW1lbnQgbnVtYmVyIDJcIlxuICB9LFxuICBcImRvYzJcIjoge1xuICAgIFwiaWRcIjogXCJkb2MyXCIsXG4gICAgXCJ0aXRsZVwiOiBcImRvY3VtZW50IG51bWJlciAyXCIsXG4gICAgXCJzb3VyY2VcIjogXCJkb2MyLm1kXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCJkb2NzL2RvYzIuaHRtbFwiLFxuICAgIFwibG9jYWxpemVkX2lkXCI6IFwiZG9jMlwiLFxuICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiLFxuICAgIFwic2lkZWJhclwiOiBcImRvY3NcIixcbiAgICBcImNhdGVnb3J5XCI6IFwiRmlyc3QgQ2F0ZWdvcnlcIixcbiAgICBcInN1YmNhdGVnb3J5XCI6IG51bGwsXG4gICAgXCJvcmRlclwiOiAyLFxuICAgIFwibmV4dF9pZFwiOiBcImRvYzNcIixcbiAgICBcIm5leHRcIjogXCJkb2MzXCIsXG4gICAgXCJwcmV2aW91c19pZFwiOiBcImRvYzFcIixcbiAgICBcInByZXZpb3VzXCI6IFwiZG9jMVwiLFxuICAgIFwicHJldmlvdXNfdGl0bGVcIjogXCJJbnRyb2R1Y3Rpb25cIixcbiAgICBcIm5leHRfdGl0bGVcIjogXCJUaGlzIGlzIGRvY3VtZW50IG51bWJlciAzXCJcbiAgfSxcbiAgXCJkb2MzXCI6IHtcbiAgICBcImlkXCI6IFwiZG9jM1wiLFxuICAgIFwidGl0bGVcIjogXCJUaGlzIGlzIGRvY3VtZW50IG51bWJlciAzXCIsXG4gICAgXCJzb3VyY2VcIjogXCJkb2MzLm1kXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCJkb2NzL2RvYzMuaHRtbFwiLFxuICAgIFwibG9jYWxpemVkX2lkXCI6IFwiZG9jM1wiLFxuICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiLFxuICAgIFwic2lkZWJhclwiOiBcImRvY3NcIixcbiAgICBcImNhdGVnb3J5XCI6IFwiU2Vjb25kIENhdGVnb3J5XCIsXG4gICAgXCJzdWJjYXRlZ29yeVwiOiBudWxsLFxuICAgIFwib3JkZXJcIjogMyxcbiAgICBcInByZXZpb3VzX2lkXCI6IFwiZG9jMlwiLFxuICAgIFwicHJldmlvdXNcIjogXCJkb2MyXCIsXG4gICAgXCJwcmV2aW91c190aXRsZVwiOiBcImRvY3VtZW50IG51bWJlciAyXCJcbiAgfSxcbiAgXCJkb2M0XCI6IHtcbiAgICBcImlkXCI6IFwiZG9jNFwiLFxuICAgIFwidGl0bGVcIjogXCJPdGhlciBEb2N1bWVudFwiLFxuICAgIFwic291cmNlXCI6IFwiZXhhbXBsZWRvYzQubWRcIixcbiAgICBcInBlcm1hbGlua1wiOiBcImRvY3MvZG9jNC5odG1sXCIsXG4gICAgXCJsb2NhbGl6ZWRfaWRcIjogXCJkb2M0XCIsXG4gICAgXCJsYW5ndWFnZVwiOiBcImVuXCIsXG4gICAgXCJzaWRlYmFyXCI6IFwiZG9jcy1vdGhlclwiLFxuICAgIFwiY2F0ZWdvcnlcIjogXCJGaXJzdCBDYXRlZ29yeVwiLFxuICAgIFwic3ViY2F0ZWdvcnlcIjogbnVsbCxcbiAgICBcIm9yZGVyXCI6IDEsXG4gICAgXCJuZXh0X2lkXCI6IFwiZG9jNVwiLFxuICAgIFwibmV4dFwiOiBcImRvYzVcIixcbiAgICBcIm5leHRfdGl0bGVcIjogXCJGaWZ0aCBEb2N1bWVudFwiXG4gIH0sXG4gIFwiZG9jNVwiOiB7XG4gICAgXCJpZFwiOiBcImRvYzVcIixcbiAgICBcInRpdGxlXCI6IFwiRmlmdGggRG9jdW1lbnRcIixcbiAgICBcInNvdXJjZVwiOiBcImV4YW1wbGVkb2M1Lm1kXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCJkb2NzL2RvYzUuaHRtbFwiLFxuICAgIFwibG9jYWxpemVkX2lkXCI6IFwiZG9jNVwiLFxuICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiLFxuICAgIFwic2lkZWJhclwiOiBcImRvY3Mtb3RoZXJcIixcbiAgICBcImNhdGVnb3J5XCI6IFwiRmlyc3QgQ2F0ZWdvcnlcIixcbiAgICBcInN1YmNhdGVnb3J5XCI6IG51bGwsXG4gICAgXCJvcmRlclwiOiAyLFxuICAgIFwicHJldmlvdXNfaWRcIjogXCJkb2M0XCIsXG4gICAgXCJwcmV2aW91c1wiOiBcImRvYzRcIixcbiAgICBcInByZXZpb3VzX3RpdGxlXCI6IFwiT3RoZXIgRG9jdW1lbnRcIlxuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "metadata.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;AAGAA,MAAM,CAACC,OAAP,GAAiB;AACf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,cAFH;AAGN,qBAAiB,cAHX;AAIN,cAAU,SAJJ;AAKN,iBAAa,gBALP;AAMN,oBAAgB,MANV;AAON,gBAAY,IAPN;AAQN,eAAW,MARL;AASN,gBAAY,YATN;AAUN,mBAAe,IAVT;AAWN,aAAS,CAXH;AAYN,eAAW,MAZL;AAaN,YAAQ,MAbF;AAcN,kBAAc;AAdR,GADO;AAiBf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,mBAFH;AAGN,cAAU,SAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,MAPL;AAQN,gBAAY,gBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,eAAW,MAXL;AAYN,YAAQ,MAZF;AAaN,mBAAe,MAbT;AAcN,gBAAY,MAdN;AAeN,sBAAkB,cAfZ;AAgBN,kBAAc;AAhBR,GAjBO;AAmCf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,2BAFH;AAGN,cAAU,SAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,MAPL;AAQN,gBAAY,iBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,mBAAe,MAXT;AAYN,gBAAY,MAZN;AAaN,sBAAkB;AAbZ,GAnCO;AAkDf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,gBAFH;AAGN,cAAU,gBAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,YAPL;AAQN,gBAAY,gBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,eAAW,MAXL;AAYN,YAAQ,MAZF;AAaN,kBAAc;AAbR,GAlDO;AAiEf,UAAQ;AACN,UAAM,MADA;AAEN,aAAS,gBAFH;AAGN,cAAU,gBAHJ;AAIN,iBAAa,gBAJP;AAKN,oBAAgB,MALV;AAMN,gBAAY,IANN;AAON,eAAW,YAPL;AAQN,gBAAY,gBARN;AASN,mBAAe,IATT;AAUN,aAAS,CAVH;AAWN,mBAAe,MAXT;AAYN,gBAAY,MAZN;AAaN,sBAAkB;AAbZ;AAjEO,CAAjB",
      "sourceRoot": "/usr/local/lib/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * @generated\n */\nmodule.exports = {\n  \"doc1\": {\n    \"id\": \"doc1\",\n    \"title\": \"Introduction\",\n    \"sidebar_label\": \"Introduction\",\n    \"source\": \"doc1.md\",\n    \"permalink\": \"docs/doc1.html\",\n    \"localized_id\": \"doc1\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Docusaurus\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc2\",\n    \"next\": \"doc2\",\n    \"next_title\": \"document number 2\"\n  },\n  \"doc2\": {\n    \"id\": \"doc2\",\n    \"title\": \"document number 2\",\n    \"source\": \"doc2.md\",\n    \"permalink\": \"docs/doc2.html\",\n    \"localized_id\": \"doc2\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"next_id\": \"doc3\",\n    \"next\": \"doc3\",\n    \"previous_id\": \"doc1\",\n    \"previous\": \"doc1\",\n    \"previous_title\": \"Introduction\",\n    \"next_title\": \"This is document number 3\"\n  },\n  \"doc3\": {\n    \"id\": \"doc3\",\n    \"title\": \"This is document number 3\",\n    \"source\": \"doc3.md\",\n    \"permalink\": \"docs/doc3.html\",\n    \"localized_id\": \"doc3\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs\",\n    \"category\": \"Second Category\",\n    \"subcategory\": null,\n    \"order\": 3,\n    \"previous_id\": \"doc2\",\n    \"previous\": \"doc2\",\n    \"previous_title\": \"document number 2\"\n  },\n  \"doc4\": {\n    \"id\": \"doc4\",\n    \"title\": \"Other Document\",\n    \"source\": \"exampledoc4.md\",\n    \"permalink\": \"docs/doc4.html\",\n    \"localized_id\": \"doc4\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 1,\n    \"next_id\": \"doc5\",\n    \"next\": \"doc5\",\n    \"next_title\": \"Fifth Document\"\n  },\n  \"doc5\": {\n    \"id\": \"doc5\",\n    \"title\": \"Fifth Document\",\n    \"source\": \"exampledoc5.md\",\n    \"permalink\": \"docs/doc5.html\",\n    \"localized_id\": \"doc5\",\n    \"language\": \"en\",\n    \"sidebar\": \"docs-other\",\n    \"category\": \"First Category\",\n    \"subcategory\": null,\n    \"order\": 2,\n    \"previous_id\": \"doc4\",\n    \"previous\": \"doc4\",\n    \"previous_title\": \"Other Document\"\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586704610849
  }
}